-- MySQL dump 10.13  Distrib 5.5.34, for debian-linux-gnu (i686)
--
-- Host: localhost    Database: mobileapps
-- ------------------------------------------------------
-- Server version	5.5.34-0ubuntu0.13.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `OverPrivillegedApps`
--

DROP TABLE IF EXISTS `OverPrivillegedApps`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OverPrivillegedApps` (
  `appName` varchar(100) NOT NULL,
  `over` int(11) DEFAULT '0',
  PRIMARY KEY (`appName`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `OverPrivillegedApps`
--

LOCK TABLES `OverPrivillegedApps` WRITE;
/*!40000 ALTER TABLE `OverPrivillegedApps` DISABLE KEYS */;
INSERT INTO `OverPrivillegedApps` VALUES ('1',1),('10',1),('100',1),('1000',1),('1001',1),('1002',1),('1003',1),('1004',1),('1005',1),('1006',1),('1007',1),('1008',1),('101',1),('1010',1),('1011',1),('1012',1),('1013',1),('1014',1),('1015',1),('1016',1),('1017',1),('1018',1),('1019',1),('1020',1),('1021',1),('1022',1),('1024',1),('1026',1),('1027',1),('1028',1),('1029',1),('103',1),('1030',1),('1031',1),('1032',1),('1037',1),('1038',1),('1039',1),('104',1),('1041',1),('1042',1),('1043',1),('1044',1),('1045',1),('1046',1),('1047',1),('1048',1),('1049',1),('105',1),('1051',1),('1052',1),('1053',1),('1055',1),('1056',1),('1057',1),('1058',1),('1059',1),('106',1),('1060',1),('1063',1),('1064',1),('1065',1),('1066',1),('1067',1),('1068',1),('1069',1),('107',1),('1070',1),('1071',1),('1072',1),('1073',1),('1074',1),('1075',1),('1076',1),('1077',1),('1078',1),('1079',1),('1080',1),('1081',1),('1082',1),('1083',1),('1084',1),('1085',1),('1086',1),('1087',1),('1088',1),('1089',1),('109',1),('1090',1),('1091',1),('1092',1),('1094',1),('1096',1),('1097',1),('1098',1),('1099',1),('11',1),('110',1),('1100',1),('1102',1),('1103',1),('1104',1),('1105',1),('1106',1),('1107',1),('1108',1),('1109',1),('111',1),('1110',1),('1111',1),('1113',1),('1114',1),('1116',1),('1117',1),('1118',1),('1119',1),('112',1),('1120',1),('1121',1),('1122',1),('1123',1),('1124',1),('1126',1),('1127',1),('1129',1),('113',1),('1130',1),('1131',1),('1132',1),('1134',1),('1135',1),('1136',1),('1137',1),('1138',1),('1139',1),('114',1),('1140',1),('1141',1),('1142',1),('1143',1),('1145',1),('1146',1),('1148',1),('1149',1),('115',1),('1150',1),('1151',1),('1152',1),('1153',1),('1154',1),('1155',1),('1156',1),('1157',1),('1158',1),('1159',1),('116',1),('1160',1),('1161',1),('1162',1),('1163',1),('1164',1),('1165',1),('1166',1),('1167',1),('1168',1),('1169',1),('117',1),('1170',1),('1171',1),('1172',1),('1173',1),('1174',1),('1175',1),('1177',1),('1178',1),('118',1),('1180',1),('1181',1),('1182',1),('1183',1),('1184',1),('1185',1),('1186',1),('1187',1),('1188',1),('1189',1),('119',1),('1190',1),('1191',1),('1193',1),('1194',1),('1195',1),('1196',1),('1197',1),('12',1),('120',1),('1200',1),('1202',1),('1203',1),('1204',1),('1205',1),('1206',1),('1207',1),('1208',1),('1209',1),('121',1),('1211',1),('1212',1),('1213',1),('1214',1),('1216',1),('1217',1),('1218',1),('1219',1),('122',1),('1220',1),('1221',1),('1222',1),('1223',1),('1224',1),('1225',1),('1226',1),('1227',1),('1228',1),('1229',1),('123',1),('1230',1),('1231',1),('1233',1),('1234',1),('1235',1),('1236',1),('1237',1),('1238',1),('124',1),('1240',1),('1241',1),('1242',1),('1243',1),('1244',1),('1246',1),('1247',1),('1248',1),('1249',1),('125',1),('1250',1),('1251',1),('1252',1),('126',1),('127',1),('128',1),('129',1),('13',1),('131',1),('133',1),('135',1),('136',1),('137',1),('138',1),('139',1),('14',1),('140',1),('141',1),('143',1),('144',1),('145',1),('146',1),('147',1),('148',1),('15',1),('150',1),('151',1),('152',1),('153',1),('154',1),('155',1),('157',1),('158',1),('159',1),('16',1),('160',1),('162',1),('163',1),('164',1),('165',1),('166',1),('167',1),('168',1),('169',1),('17',1),('170',1),('172',1),('173',1),('175',1),('176',1),('177',1),('178',1),('179',1),('18',1),('180',1),('181',1),('183',1),('185',1),('186',1),('188',1),('19',1),('190',1),('191',1),('192',1),('193',1),('195',1),('196',1),('197',1),('198',1),('199',1),('2',1),('20',1),('200',1),('201',1),('203',1),('205',1),('206',1),('207',1),('21',1),('210',1),('211',1),('212',1),('213',1),('214',1),('216',1),('217',1),('218',1),('219',1),('22',1),('220',1),('221',1),('222',1),('223',1),('224',1),('225',1),('226',1),('227',1),('228',1),('229',1),('23',1),('230',1),('231',1),('234',1),('235',1),('238',1),('239',1),('24',1),('240',1),('241',1),('244',1),('246',1),('247',1),('248',1),('249',1),('25',1),('250',1),('251',1),('252',1),('254',1),('255',1),('258',1),('259',1),('26',1),('261',1),('262',1),('264',1),('265',1),('266',1),('268',1),('27',1),('270',1),('271',1),('272',1),('273',1),('274',1),('276',1),('277',1),('278',1),('28',1),('280',1),('281',1),('282',1),('283',1),('284',1),('285',1),('286',1),('287',1),('288',1),('289',1),('29',1),('290',1),('291',1),('292',1),('293',1),('294',1),('296',1),('297',1),('298',1),('299',1),('3',1),('30',1),('300',1),('301',1),('302',1),('304',1),('305',1),('306',1),('307',1),('308',1),('309',1),('31',1),('310',1),('311',1),('312',1),('314',1),('315',1),('316',1),('318',1),('319',1),('32',1),('320',1),('321',1),('323',1),('324',1),('325',1),('326',1),('327',1),('329',1),('330',1),('331',1),('333',1),('334',1),('335',1),('336',1),('337',1),('339',1),('340',1),('341',1),('342',1),('343',1),('345',1),('346',1),('347',1),('348',1),('349',1),('35',1),('350',1),('351',1),('352',1),('353',1),('354',1),('355',1),('356',1),('357',1),('358',1),('359',1),('36',1),('360',1),('363',1),('364',1),('365',1),('366',1),('367',1),('368',1),('369',1),('37',1),('370',1),('371',1),('372',1),('373',1),('374',1),('375',1),('376',1),('377',1),('379',1),('38',1),('380',1),('381',1),('382',1),('383',1),('384',1),('385',1),('386',1),('387',1),('388',1),('389',1),('39',1),('390',1),('391',1),('393',1),('394',1),('395',1),('396',1),('397',1),('398',1),('399',1),('4',1),('40',1),('400',1),('401',1),('402',1),('404',1),('405',1),('406',1),('407',1),('408',1),('409',1),('41',1),('410',1),('411',1),('412',1),('413',1),('414',1),('415',1),('416',1),('417',1),('418',1),('42',1),('420',1),('422',1),('423',1),('424',1),('425',1),('428',1),('429',1),('43',1),('430',1),('431',1),('432',1),('433',1),('434',1),('435',1),('437',1),('439',1),('440',1),('441',1),('442',1),('443',1),('447',1),('448',1),('45',1),('450',1),('451',1),('452',1),('453',1),('454',1),('455',1),('456',1),('457',1),('458',1),('459',1),('46',1),('460',1),('461',1),('462',1),('463',1),('465',1),('466',1),('467',1),('468',1),('469',1),('47',1),('470',1),('472',1),('473',1),('476',1),('477',1),('478',1),('479',1),('48',1),('480',1),('482',1),('483',1),('485',1),('486',1),('487',1),('488',1),('489',1),('49',1),('490',1),('491',1),('492',1),('493',1),('494',1),('495',1),('496',1),('497',1),('499',1),('5',1),('50',1),('500',1),('501',1),('502',1),('503',1),('504',1),('505',1),('506',1),('507',1),('508',1),('51',1),('510',1),('511',1),('512',1),('513',1),('514',1),('515',1),('516',1),('517',1),('518',1),('519',1),('52',1),('520',1),('521',1),('522',1),('523',1),('524',1),('526',1),('527',1),('528',1),('529',1),('53',1),('530',1),('531',1),('532',1),('533',1),('534',1),('535',1),('537',1),('538',1),('539',1),('54',1),('540',1),('543',1),('544',1),('545',1),('546',1),('549',1),('551',1),('552',1),('553',1),('554',1),('555',1),('556',1),('557',1),('558',1),('559',1),('56',1),('560',1),('561',1),('563',1),('565',1),('566',1),('569',1),('570',1),('572',1),('573',1),('574',1),('575',1),('577',1),('578',1),('579',1),('58',1),('580',1),('581',1),('582',1),('583',1),('585',1),('586',1),('587',1),('588',1),('589',1),('59',1),('590',1),('591',1),('592',1),('593',1),('594',1),('595',1),('596',1),('597',1),('598',1),('5C2E0C62DEFE686B09F2F9BC369677EC_uranai',1),('5DD6C326114BAB3A1D253200C2F897A1_SafeSearchActivity',1),('6',1),('600',1),('603',1),('604',1),('605',1),('606',1),('607',1),('61',1),('610',1),('611',1),('612',1),('613',1),('614',1),('615',1),('616',1),('617',1),('618',1),('619',1),('620',1),('621',1),('622',1),('623',1),('624',1),('625',1),('626',1),('628',1),('629',1),('63',1),('630',1),('632',1),('633',1),('635',1),('636',1),('638',1),('639',1),('64',1),('640',1),('641',1),('643',1),('644',1),('645',1),('646',1),('647',1),('648',1),('65',1),('650',1),('651',1),('652',1),('653',1),('654',1),('656',1),('657',1),('658',1),('659',1),('66',1),('660',1),('661',1),('662',1),('663',1),('665',1),('666',1),('667',1),('668',1),('669',1),('670',1),('672',1),('673',1),('674',1),('675',1),('676',1),('677',1),('678',1),('679',1),('68',1),('680',1),('681',1),('682',1),('683',1),('684',1),('685',1),('687',1),('688',1),('690',1),('691',1),('692',1),('693',1),('694',1),('695',1),('696',1),('698',1),('699',1),('6d43b3bc85770fafeb598eb5297bc341',1),('7',1),('70',1),('700',1),('703',1),('704',1),('706',1),('707',1),('709',1),('71',1),('710',1),('711',1),('712',1),('713',1),('714',1),('715',1),('716',1),('717',1),('718',1),('719',1),('72',1),('720',1),('722',1),('724',1),('725',1),('726',1),('727',1),('728',1),('729',1),('73',1),('731',1),('732',1),('733',1),('734',1),('735',1),('736',1),('737',1),('738',1),('739',1),('74',1),('740',1),('742',1),('743',1),('746',1),('747',1),('748',1),('75',1),('750',1),('751',1),('753',1),('754',1),('755',1),('756',1),('757',1),('758',1),('759',1),('76',1),('760',1),('763',1),('764',1),('765',1),('766',1),('767',1),('769',1),('77',1),('770',1),('772',1),('773',1),('774',1),('776',1),('777',1),('778',1),('779',1),('780',1),('781',1),('783',1),('784',1),('785',1),('786',1),('787',1),('788',1),('789',1),('79',1),('790',1),('791',1),('792',1),('793',1),('794',1),('795',1),('796',1),('798',1),('7ECB7A1FA96E18B85ED10D83537CFD3C_power_battery',1),('8',1),('80',1),('800',1),('801',1),('804',1),('805',1),('806',1),('807',1),('808',1),('809',1),('81',1),('812',1),('813',1),('814',1),('815',1),('816',1),('817',1),('818',1),('819',1),('82',1),('820',1),('821',1),('822',1),('823',1),('824',1),('825',1),('829',1),('830',1),('831',1),('833',1),('834',1),('835',1),('836',1),('837',1),('838',1),('839',1),('841',1),('842',1),('843',1),('844',1),('846',1),('847',1),('848',1),('849',1),('850',1),('851',1),('852',1),('854',1),('855',1),('856',1),('857',1),('858',1),('86',1),('860',1),('861',1),('862',1),('863',1),('864',1),('865',1),('866',1),('867',1),('869',1),('87',1),('870',1),('871',1),('872',1),('874',1),('875',1),('880',1),('882',1),('883',1),('884',1),('885',1),('886',1),('887',1),('888',1),('889',1),('89',1),('890',1),('891',1),('892',1),('893',1),('894',1),('895',1),('896',1),('897',1),('898',1),('899',1),('9',1),('90',1),('900',1),('901',1),('904',1),('905',1),('906',1),('907',1),('908',1),('909',1),('910',1),('911',1),('912',1),('913',1),('914',1),('915',1),('916',1),('917',1),('918',1),('919',1),('92',1),('920',1),('921',1),('922',1),('923',1),('924',1),('925',1),('926',1),('927',1),('929',1),('930',1),('931',1),('932',1),('933',1),('935',1),('936',1),('937',1),('938',1),('939',1),('94',1),('940',1),('941',1),('942',1),('943',1),('944',1),('945',1),('947',1),('949',1),('95',1),('950',1),('951',1),('953',1),('954',1),('955',1),('957',1),('958',1),('959',1),('96',1),('960',1),('962',1),('963',1),('964',1),('966',1),('969',1),('97',1),('970',1),('971',1),('972',1),('973',1),('975',1),('976',1),('977',1),('978',1),('98',1),('980',1),('981',1),('982',1),('983',1),('984',1),('985',1),('987',1),('988',1),('989',1),('99',1),('990',1),('991',1),('993',1),('994',1),('995',1),('996',1),('997',1),('998',1),('999',1),('alfasafe',1),('apk',1),('badpiggies_install',1),('bad_piggies_android_0_installer',1),('bad_piggies_install',1),('carddeemamaAndroid',1),('comaliothimdevil_jpDevilsCreedfull_18_installer',1),('comandroidsecrettalk1',1),('comapplotteauth1',1),('comcnsmsclient8',1),('compolarbitrthunderliteokSiMPLETEMAi',1),('comsaavnandroid',1),('comstechspamguard6',1),('comstephbriggs5batteryimprove2',1),('comVoiceChangeVoiceChangeIL14',1),('comyoubollyexample',1),('Dropbox23GB',1),('fad1a96b2a8739bab11b2268784970f0',1),('fakeAV_148B76C664F2854E2947AF01160FFA99_LabelReader',1),('fakeAV_1CA532F171A0B765A46AF995EBAAB1D2_LabelReader',1),('fakeAV_1E178E501B41659FFACE85153615DEA7_LabelReader',1),('fakeAV_36B177910C99872B33E90DEA71B16617_LabelReader',1),('fakeAV_6F237D25472D9D09FC44ECE7DC9CED92_LabelReader',1),('fakeAV_75B8F9DBB1CD79B7FC074F7F499150CF_LabelReader',1),('fakeAV_77BB7F86FB0AC66C97B1AB3573ADFFC1_LabelReader',1),('fakeAV_934527F8EBB5C1088009CC9329DC3DE6_LabelReader',1),('fakeAV_ED1E0689F93B0C57E403489BB5338F59_LabelReader',1),('FakeLookout_comupdateszxt',1),('flashnew',1),('iCalendaracbcad45094de7e877b656db1c28ada2',1),('IQAgent',1),('livephotosavanna',1),('MobileSpy',1),('rublogspotplaysibsavageknife',1),('sb',1),('sber',1),('ScanForVirusesNow',1),('schgg',1),('skinlogicallianz15',1),('sp_k_test_2B609E4ACFEBBEE57ECF6DDBFD8202D2',1),('SuiConFo',1),('suspect',1),('taskuapk',1),('vertujp',1),('vertukr',1),('vksafe',1),('xiaoshuo85',1);
/*!40000 ALTER TABLE `OverPrivillegedApps` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `apiList`
--

DROP TABLE IF EXISTS `apiList`;
/*!50001 DROP VIEW IF EXISTS `apiList`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `apiList` (
  `API` tinyint NOT NULL
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `apiPermissionMapStats`
--

DROP TABLE IF EXISTS `apiPermissionMapStats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `apiPermissionMapStats` (
  `apiName` varchar(400) NOT NULL,
  `permission` varchar(100) NOT NULL,
  `count` int(11) DEFAULT '0',
  PRIMARY KEY (`apiName`,`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `apiPermissionMapStats`
--

LOCK TABLES `apiPermissionMapStats` WRITE;
/*!40000 ALTER TABLE `apiPermissionMapStats` DISABLE KEYS */;
INSERT INTO `apiPermissionMapStats` VALUES ('android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.AUTHENTICATE_ACCOUNTS',2),('android.accounts.AccountManager.addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)','android.permission.GET_ACCOUNTS',1),('android.accounts.AccountManager.blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)','android.permission.USE_CREDENTIALS',1),('android.accounts.AccountManager.getAccounts()','android.permission.GET_ACCOUNTS',19),('android.accounts.AccountManager.getAccountsByType(java.lang.String)','android.permission.GET_ACCOUNTS',46),('android.accounts.AccountManager.getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.USE_CREDENTIALS',1),('android.accounts.AccountManager.getPassword(android.accounts.Account)','android.permission.AUTHENTICATE_ACCOUNTS',2),('android.accounts.AccountManager.getUserData(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.accounts.AccountManager.invalidateAuthToken(java.lang.String,java.lang.String)','android.permission.MANAGE_ACCOUNTS',2),('android.accounts.AccountManager.peekAuthToken(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.accounts.AccountManager.removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.MANAGE_ACCOUNTS',2),('android.accounts.AccountManager.setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.accounts.AccountManager.setPassword(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.accounts.AccountManager.setUserData(android.accounts.Account,java.lang.String,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.app.Activity.setContentView(int)','android.permission.INTERNET',1072),('android.app.Activity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY',1),('android.app.ActivityManager.getRecentTasks(int,int)','android.permission.GET_TASKS',2),('android.app.ActivityManager.getRunningTasks(int)','android.permission.GET_TASKS',158),('android.app.ActivityManager.killBackgroundProcesses(java.lang.String)','android.permission.RESTART_PACKAGES',11),('android.app.ActivityManager.restartPackage(java.lang.String)','android.permission.RESTART_PACKAGES',104),('android.app.KeyguardManager$KeyguardLock.disableKeyguard()','android.permission.DISABLE_KEYGUARD',62),('android.app.KeyguardManager$KeyguardLock.reenableKeyguard()','android.permission.DISABLE_KEYGUARD',18),('android.app.KeyguardManager.exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)','android.permission.DISABLE_KEYGUARD',7),('android.app.NotificationManager.notify(int,android.app.Notification)','android.permission.VIBRATE',727),('android.app.NotificationManager.notify(java.lang.String,int,android.app.Notification)','android.permission.VIBRATE',8),('android.app.StatusBarManager.expand()','android.permission.EXPAND_STATUS_BAR',41),('android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)','android.permission.SET_WALLPAPER',25),('android.app.WallpaperManager.suggestDesiredDimensions(int,int)','android.permission.SET_WALLPAPER_HINTS',2),('android.bluetooth.BluetoothAdapter.disable()','android.permission.BLUETOOTH_ADMIN',6),('android.bluetooth.BluetoothAdapter.enable()','android.permission.BLUETOOTH_ADMIN',6),('android.bluetooth.BluetoothAdapter.getAddress()','android.permission.BLUETOOTH',2),('android.bluetooth.BluetoothAdapter.getBondedDevices()','android.permission.BLUETOOTH',1),('android.bluetooth.BluetoothAdapter.getState()','android.permission.BLUETOOTH',4),('android.bluetooth.BluetoothAdapter.isEnabled()','android.permission.BLUETOOTH',4),('android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)','android.permission.BLUETOOTH',1),('android.content.ContentResolver.getIsSyncable(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS',2),('android.content.ContentResolver.getMasterSyncAutomatically()','android.permission.READ_SYNC_SETTINGS',5),('android.content.ContentResolver.getSyncAutomatically(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS',3),('android.content.ContentResolver.isSyncPending(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS',1),('android.content.ContentResolver.openFileDescriptor(android.net.Uri,java.lang.String)','android.permission.READ_CONTACTS',12),('android.content.ContentResolver.openInputStream(android.net.Uri)','android.permission.READ_CONTACTS',104),('android.content.ContentResolver.openOutputStream(android.net.Uri)','android.permission.READ_CONTACTS',90),('android.content.ContentResolver.setIsSyncable(android.accounts.Account,java.lang.String,int)','android.permission.WRITE_SYNC_SETTINGS',1),('android.content.ContentResolver.setMasterSyncAutomatically(boolean)','android.permission.WRITE_SYNC_SETTINGS',3),('android.content.ContentResolver.setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)','android.permission.WRITE_SYNC_SETTINGS',2),('android.content.Context.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',1),('android.content.Context.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',3),('android.content.Context.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER',52),('android.content.Context.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER',50),('android.content.ContextWrapper.clearWallpaper()','android.permission.SET_WALLPAPER',4),('android.content.ContextWrapper.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',2),('android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',18),('android.content.ContextWrapper.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER',269),('android.content.ContextWrapper.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER',49),('android.content.pm.PackageManager.addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS',3),('android.content.pm.PackageManager.clearPackagePreferredActivities(java.lang.String)','android.permission.SET_PREFERRED_APPLICATIONS',4),('android.content.pm.PackageManager.setComponentEnabledSetting(android.content.ComponentName,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE',14),('android.hardware.Camera.open()','android.permission.CAMERA',20),('android.location.LocationManager.addGpsStatusListener(android.location.GpsStatus$Listener)','android.permission.ACCESS_FINE_LOCATION',8),('android.location.LocationManager.addProximityAlert(double,double,float,long,android.app.PendingIntent)','android.permission.ACCESS_FINE_LOCATION',3),('android.location.LocationManager.addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)','android.permission.ACCESS_MOCK_LOCATION',3),('android.location.LocationManager.clearTestProviderEnabled(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION',3),('android.location.LocationManager.clearTestProviderLocation(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION',3),('android.location.LocationManager.clearTestProviderStatus(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION',3),('android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)','android.permission.ACCESS_FINE_LOCATION',306),('android.location.LocationManager.getLastKnownLocation(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',410),('android.location.LocationManager.getProvider(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',13),('android.location.LocationManager.getProviders(android.location.Criteria,boolean)','android.permission.ACCESS_FINE_LOCATION',4),('android.location.LocationManager.getProviders(boolean)','android.permission.ACCESS_FINE_LOCATION',20),('android.location.LocationManager.isProviderEnabled(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',153),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)','android.permission.ACCESS_FINE_LOCATION',5),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)','android.permission.ACCESS_FINE_LOCATION',213),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)','android.permission.ACCESS_FINE_LOCATION',177),('android.location.LocationManager.sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)','android.permission.ACCESS_FINE_LOCATION',3),('android.media.AsyncPlayer.play(android.content.Context,android.net.Uri,boolean,int)','android.permission.WAKE_LOCK',10),('android.media.AsyncPlayer.stop()','android.permission.WAKE_LOCK',10),('android.media.AudioManager.isBluetoothA2dpOn()','android.permission.MODIFY_AUDIO_SETTINGS',2),('android.media.AudioManager.isWiredHeadsetOn()','android.permission.MODIFY_AUDIO_SETTINGS',1),('android.media.AudioManager.setMicrophoneMute(boolean)','android.permission.MODIFY_AUDIO_SETTINGS',2),('android.media.AudioManager.setMode(int)','android.permission.MODIFY_AUDIO_SETTINGS',7),('android.media.AudioManager.setSpeakerphoneOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS',7),('android.media.MediaPlayer.start()','android.permission.WAKE_LOCK',252),('android.media.MediaPlayer.stop()','android.permission.WAKE_LOCK',151),('android.media.MediaRecorder.setAudioSource(int)','android.permission.RECORD_AUDIO',24),('android.media.MediaRecorder.setVideoSource(int)','android.permission.CAMERA',1),('android.media.RingtoneManager.setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)','android.permission.WRITE_SETTINGS',14),('android.net.ConnectivityManager.getActiveNetworkInfo()','android.permission.ACCESS_NETWORK_STATE',901),('android.net.ConnectivityManager.getAllNetworkInfo()','android.permission.ACCESS_NETWORK_STATE',322),('android.net.ConnectivityManager.getNetworkInfo(int)','android.permission.ACCESS_NETWORK_STATE',633),('android.net.ConnectivityManager.requestRouteToHost(int,int)','android.permission.CHANGE_NETWORK_STATE',2),('android.net.ConnectivityManager.startUsingNetworkFeature(int,java.lang.String)','android.permission.CHANGE_NETWORK_STATE',2),('android.net.ConnectivityManager.stopUsingNetworkFeature(int,java.lang.String)','android.permission.CHANGE_NETWORK_STATE',2),('android.net.NetworkInfo.isConnectedOrConnecting()','android.permission.ACCESS_NETWORK_STATE',55),('android.net.wifi.WifiManager$WifiLock.acquire()','android.permission.WAKE_LOCK',16),('android.net.wifi.WifiManager$WifiLock.release()','android.permission.WAKE_LOCK',14),('android.net.wifi.WifiManager.addNetwork(android.net.wifi.WifiConfiguration)','android.permission.CHANGE_WIFI_STATE',3),('android.net.wifi.WifiManager.disableNetwork(int)','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.disconnect()','android.permission.CHANGE_WIFI_STATE',3),('android.net.wifi.WifiManager.enableNetwork(int,boolean)','android.permission.CHANGE_WIFI_STATE',3),('android.net.wifi.WifiManager.getConfiguredNetworks()','android.permission.ACCESS_WIFI_STATE',4),('android.net.wifi.WifiManager.getConnectionInfo()','android.permission.ACCESS_WIFI_STATE',196),('android.net.wifi.WifiManager.getScanResults()','android.permission.ACCESS_WIFI_STATE',9),('android.net.wifi.WifiManager.getWifiState()','android.permission.ACCESS_WIFI_STATE',284),('android.net.wifi.WifiManager.isWifiEnabled()','android.permission.ACCESS_WIFI_STATE',68),('android.net.wifi.WifiManager.reassociate()','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.removeNetwork(int)','android.permission.CHANGE_WIFI_STATE',3),('android.net.wifi.WifiManager.saveConfiguration()','android.permission.CHANGE_WIFI_STATE',2),('android.net.wifi.WifiManager.setWifiEnabled(boolean)','android.permission.CHANGE_WIFI_STATE',294),('android.net.wifi.WifiManager.startScan()','android.permission.CHANGE_WIFI_STATE',9),('android.os.Environment.getExternalStorageDirectory()','android.permission.WRITE_EXTERNAL_STORAGE',664),('android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)','android.permission.WRITE_EXTERNAL_STORAGE',7),('android.os.PowerManager$WakeLock.acquire()','android.permission.WAKE_LOCK',110),('android.os.PowerManager$WakeLock.acquire(long)','android.permission.WAKE_LOCK',15),('android.os.PowerManager$WakeLock.release()','android.permission.WAKE_LOCK',113),('android.os.Vibrator.cancel()','android.permission.VIBRATE',6),('android.os.Vibrator.vibrate(long)','android.permission.VIBRATE',128),('android.provider.Browser.clearHistory(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS',10),('android.provider.Browser.clearSearches(android.content.ContentResolver)','com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',10),('android.provider.Browser.getAllBookmarks(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS',1),('android.provider.Browser.getAllVisitedUrls(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS',44),('android.provider.Contacts$People.addToMyContactsGroup(android.content.ContentResolver,long)','android.permission.READ_CONTACTS',1),('android.provider.Contacts$People.createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)','android.permission.READ_CONTACTS',5),('android.provider.ContactsContract$Contacts.getLookupUri(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS',4),('android.provider.ContactsContract$Contacts.lookupContact(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS',2),('android.provider.ContactsContract$Contacts.openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS',11),('android.provider.ContactsContract$RawContacts.getContactLookupUri(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS',5),('android.provider.Settings$System.putInt(android.content.ContentResolver,java.lang.String,int)','android.permission.WRITE_SETTINGS',11),('android.provider.Settings$System.putString(android.content.ContentResolver,java.lang.String,java.lang.String)','android.permission.WRITE_SETTINGS',1),('android.speech.SpeechRecognizer.startListening(android.content.Intent)','android.permission.RECORD_AUDIO',1),('android.telephony.gsm.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)','android.permission.SEND_SMS',4),('android.telephony.gsm.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)','android.permission.SEND_SMS',151),('android.telephony.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)','android.permission.SEND_SMS',33),('android.telephony.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)','android.permission.SEND_SMS',192),('android.telephony.TelephonyManager.getCellLocation()','android.permission.ACCESS_FINE_LOCATION',254),('android.telephony.TelephonyManager.getDeviceId()','android.permission.READ_PHONE_STATE',985),('android.telephony.TelephonyManager.getDeviceSoftwareVersion()','android.permission.READ_PHONE_STATE',69),('android.telephony.TelephonyManager.getLine1Number()','android.permission.READ_PHONE_STATE',510),('android.telephony.TelephonyManager.getNeighboringCellInfo()','android.permission.ACCESS_FINE_LOCATION',2),('android.telephony.TelephonyManager.getSimSerialNumber()','android.permission.READ_PHONE_STATE',500),('android.telephony.TelephonyManager.getSubscriberId()','android.permission.READ_PHONE_STATE',844),('android.telephony.TelephonyManager.getVoiceMailAlphaTag()','android.permission.READ_PHONE_STATE',4),('android.telephony.TelephonyManager.getVoiceMailNumber()','android.permission.READ_PHONE_STATE',70),('android.telephony.TelephonyManager.listen(android.telephony.PhoneStateListener,int)','android.permission.READ_PHONE_STATE',103),('android.widget.QuickContactBadge.assignContactFromEmail(java.lang.String,boolean)','android.permission.READ_CONTACTS',3),('java.lang.Runtime.exec(java.lang.String)','android.permission.READ_LOGS',460),('java.lang.Runtime.exec(java.lang.String[])','android.permission.READ_LOGS',64),('java.net.ServerSocket.bind(java.net.SocketAddress)','android.permission.INTERNET',12),('java.net.URL.getContent()','android.permission.INTERNET',172),('java.net.URL.openConnection()','android.permission.INTERNET',1043),('java.net.URL.openConnection(java.net.Proxy)','android.permission.INTERNET',397),('java.net.URL.openStream()','android.permission.INTERNET',74),('java.net.URLConnection.connect()','android.permission.INTERNET',893),('java.net.URLConnection.getInputStream()','android.permission.INTERNET',1039),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest)','android.permission.INTERNET',168),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)','android.permission.INTERNET',2),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)','android.permission.INTERNET',6);
/*!40000 ALTER TABLE `apiPermissionMapStats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `apiPermissionMapStats-Legitimate`
--

DROP TABLE IF EXISTS `apiPermissionMapStats-Legitimate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `apiPermissionMapStats-Legitimate` (
  `apiName` varchar(100) NOT NULL,
  `permission` varchar(100) NOT NULL,
  `count` int(11) DEFAULT '0',
  PRIMARY KEY (`apiName`,`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `apiPermissionMapStats-Legitimate`
--

LOCK TABLES `apiPermissionMapStats-Legitimate` WRITE;
/*!40000 ALTER TABLE `apiPermissionMapStats-Legitimate` DISABLE KEYS */;
INSERT INTO `apiPermissionMapStats-Legitimate` VALUES ('android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account,java.lang.String,andro','android.permission.AUTHENTICATE_ACCOUNTS',2),('android.accounts.AccountManager.addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListen','android.permission.GET_ACCOUNTS',1),('android.accounts.AccountManager.blockingGetAuthToken(android.accounts.Account,java.lang.String,boole','android.permission.USE_CREDENTIALS',1),('android.accounts.AccountManager.getAccounts()','android.permission.GET_ACCOUNTS',7),('android.accounts.AccountManager.getAccountsByType(java.lang.String)','android.permission.GET_ACCOUNTS',7),('android.accounts.AccountManager.getAuthToken(android.accounts.Account,java.lang.String,boolean,andro','android.permission.USE_CREDENTIALS',1),('android.accounts.AccountManager.getPassword(android.accounts.Account)','android.permission.AUTHENTICATE_ACCOUNTS',2),('android.accounts.AccountManager.getUserData(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.accounts.AccountManager.invalidateAuthToken(java.lang.String,java.lang.String)','android.permission.MANAGE_ACCOUNTS',2),('android.accounts.AccountManager.peekAuthToken(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.accounts.AccountManager.removeAccount(android.accounts.Account,android.accounts.AccountManag','android.permission.MANAGE_ACCOUNTS',2),('android.accounts.AccountManager.setAuthToken(android.accounts.Account,java.lang.String,java.lang.Str','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.accounts.AccountManager.setPassword(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.accounts.AccountManager.setUserData(android.accounts.Account,java.lang.String,java.lang.Stri','android.permission.AUTHENTICATE_ACCOUNTS',1),('android.app.Activity.setContentView(int)','android.permission.INTERNET',87),('android.app.ActivityManager.getRecentTasks(int,int)','android.permission.GET_TASKS',1),('android.app.ActivityManager.getRunningTasks(int)','android.permission.GET_TASKS',11),('android.app.ActivityManager.killBackgroundProcesses(java.lang.String)','android.permission.RESTART_PACKAGES',2),('android.app.ActivityManager.restartPackage(java.lang.String)','android.permission.RESTART_PACKAGES',3),('android.app.KeyguardManager$KeyguardLock.disableKeyguard()','android.permission.DISABLE_KEYGUARD',3),('android.app.KeyguardManager$KeyguardLock.reenableKeyguard()','android.permission.DISABLE_KEYGUARD',2),('android.app.NotificationManager.notify(int,android.app.Notification)','android.permission.VIBRATE',49),('android.app.NotificationManager.notify(java.lang.String,int,android.app.Notification)','android.permission.VIBRATE',6),('android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)','android.permission.SET_WALLPAPER',2),('android.app.WallpaperManager.suggestDesiredDimensions(int,int)','android.permission.SET_WALLPAPER_HINTS',2),('android.bluetooth.BluetoothAdapter.disable()','android.permission.BLUETOOTH_ADMIN',2),('android.bluetooth.BluetoothAdapter.enable()','android.permission.BLUETOOTH_ADMIN',2),('android.bluetooth.BluetoothAdapter.getAddress()','android.permission.BLUETOOTH',2),('android.bluetooth.BluetoothAdapter.getState()','android.permission.BLUETOOTH',1),('android.bluetooth.BluetoothAdapter.isEnabled()','android.permission.BLUETOOTH',2),('android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUI','android.permission.BLUETOOTH',1),('android.content.ContentResolver.getIsSyncable(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS',2),('android.content.ContentResolver.getMasterSyncAutomatically()','android.permission.READ_SYNC_SETTINGS',2),('android.content.ContentResolver.getSyncAutomatically(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS',2),('android.content.ContentResolver.isSyncPending(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS',1),('android.content.ContentResolver.openFileDescriptor(android.net.Uri,java.lang.String)','android.permission.READ_CONTACTS',4),('android.content.ContentResolver.openInputStream(android.net.Uri)','android.permission.READ_CONTACTS',35),('android.content.ContentResolver.openOutputStream(android.net.Uri)','android.permission.READ_CONTACTS',9),('android.content.ContentResolver.setIsSyncable(android.accounts.Account,java.lang.String,int)','android.permission.WRITE_SYNC_SETTINGS',1),('android.content.ContentResolver.setSyncAutomatically(android.accounts.Account,java.lang.String,boole','android.permission.WRITE_SYNC_SETTINGS',2),('android.content.Context.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',1),('android.content.Context.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',3),('android.content.ContextWrapper.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',2),('android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',2),('android.content.ContextWrapper.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER',1),('android.content.ContextWrapper.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER',1),('android.content.pm.PackageManager.addPreferredActivity(android.content.IntentFilter,int,android.cont','android.permission.SET_PREFERRED_APPLICATIONS',1),('android.content.pm.PackageManager.clearPackagePreferredActivities(java.lang.String)','android.permission.SET_PREFERRED_APPLICATIONS',2),('android.content.pm.PackageManager.setComponentEnabledSetting(android.content.ComponentName,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE',7),('android.hardware.Camera.open()','android.permission.CAMERA',7),('android.location.LocationManager.addGpsStatusListener(android.location.GpsStatus$Listener)','android.permission.ACCESS_FINE_LOCATION',4),('android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)','android.permission.ACCESS_FINE_LOCATION',23),('android.location.LocationManager.getLastKnownLocation(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',36),('android.location.LocationManager.getProvider(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',7),('android.location.LocationManager.getProviders(android.location.Criteria,boolean)','android.permission.ACCESS_FINE_LOCATION',1),('android.location.LocationManager.getProviders(boolean)','android.permission.ACCESS_FINE_LOCATION',10),('android.location.LocationManager.isProviderEnabled(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',25),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.app.Pend','android.permission.ACCESS_FINE_LOCATION',2),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location','android.permission.ACCESS_FINE_LOCATION',36),('android.media.AudioManager.isBluetoothA2dpOn()','android.permission.MODIFY_AUDIO_SETTINGS',2),('android.media.AudioManager.isWiredHeadsetOn()','android.permission.MODIFY_AUDIO_SETTINGS',1),('android.media.AudioManager.setMicrophoneMute(boolean)','android.permission.MODIFY_AUDIO_SETTINGS',1),('android.media.AudioManager.setMode(int)','android.permission.MODIFY_AUDIO_SETTINGS',2),('android.media.AudioManager.setSpeakerphoneOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS',3),('android.media.MediaPlayer.start()','android.permission.WAKE_LOCK',35),('android.media.MediaPlayer.stop()','android.permission.WAKE_LOCK',23),('android.media.MediaRecorder.setAudioSource(int)','android.permission.RECORD_AUDIO',9),('android.media.MediaRecorder.setVideoSource(int)','android.permission.CAMERA',1),('android.media.RingtoneManager.setActualDefaultRingtoneUri(android.content.Context,int,android.net.Ur','android.permission.WRITE_SETTINGS',6),('android.net.ConnectivityManager.getActiveNetworkInfo()','android.permission.ACCESS_NETWORK_STATE',87),('android.net.ConnectivityManager.getAllNetworkInfo()','android.permission.ACCESS_NETWORK_STATE',8),('android.net.ConnectivityManager.getNetworkInfo(int)','android.permission.ACCESS_NETWORK_STATE',42),('android.net.ConnectivityManager.requestRouteToHost(int,int)','android.permission.CHANGE_NETWORK_STATE',2),('android.net.ConnectivityManager.startUsingNetworkFeature(int,java.lang.String)','android.permission.CHANGE_NETWORK_STATE',2),('android.net.ConnectivityManager.stopUsingNetworkFeature(int,java.lang.String)','android.permission.CHANGE_NETWORK_STATE',2),('android.net.NetworkInfo.isConnectedOrConnecting()','android.permission.ACCESS_NETWORK_STATE',22),('android.net.wifi.WifiManager$WifiLock.acquire()','android.permission.WAKE_LOCK',12),('android.net.wifi.WifiManager$WifiLock.release()','android.permission.WAKE_LOCK',12),('android.net.wifi.WifiManager.addNetwork(android.net.wifi.WifiConfiguration)','android.permission.CHANGE_WIFI_STATE',2),('android.net.wifi.WifiManager.disableNetwork(int)','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.disconnect()','android.permission.CHANGE_WIFI_STATE',2),('android.net.wifi.WifiManager.enableNetwork(int,boolean)','android.permission.CHANGE_WIFI_STATE',2),('android.net.wifi.WifiManager.getConfiguredNetworks()','android.permission.ACCESS_WIFI_STATE',3),('android.net.wifi.WifiManager.getConnectionInfo()','android.permission.ACCESS_WIFI_STATE',22),('android.net.wifi.WifiManager.getScanResults()','android.permission.ACCESS_WIFI_STATE',6),('android.net.wifi.WifiManager.getWifiState()','android.permission.ACCESS_WIFI_STATE',4),('android.net.wifi.WifiManager.isWifiEnabled()','android.permission.ACCESS_WIFI_STATE',10),('android.net.wifi.WifiManager.removeNetwork(int)','android.permission.CHANGE_WIFI_STATE',2),('android.net.wifi.WifiManager.saveConfiguration()','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.setWifiEnabled(boolean)','android.permission.CHANGE_WIFI_STATE',4),('android.net.wifi.WifiManager.startScan()','android.permission.CHANGE_WIFI_STATE',7),('android.os.Environment.getExternalStorageDirectory()','android.permission.WRITE_EXTERNAL_STORAGE',72),('android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)','android.permission.WRITE_EXTERNAL_STORAGE',7),('android.os.PowerManager$WakeLock.acquire()','android.permission.WAKE_LOCK',32),('android.os.PowerManager$WakeLock.acquire(long)','android.permission.WAKE_LOCK',14),('android.os.PowerManager$WakeLock.release()','android.permission.WAKE_LOCK',39),('android.os.Vibrator.cancel()','android.permission.VIBRATE',3),('android.os.Vibrator.vibrate(long)','android.permission.VIBRATE',20),('android.provider.Contacts$People.addToMyContactsGroup(android.content.ContentResolver,long)','android.permission.READ_CONTACTS',1),('android.provider.ContactsContract$Contacts.lookupContact(android.content.ContentResolver,android.net','android.permission.READ_CONTACTS',2),('android.provider.ContactsContract$Contacts.openContactPhotoInputStream(android.content.ContentResolv','android.permission.READ_CONTACTS',6),('android.provider.ContactsContract$RawContacts.getContactLookupUri(android.content.ContentResolver,an','android.permission.READ_CONTACTS',1),('android.provider.Settings$System.putInt(android.content.ContentResolver,java.lang.String,int)','android.permission.WRITE_SETTINGS',2),('android.telephony.gsm.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.uti','android.permission.SEND_SMS',1),('android.telephony.gsm.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,','android.permission.SEND_SMS',1),('android.telephony.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.Ar','android.permission.SEND_SMS',1),('android.telephony.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,andr','android.permission.SEND_SMS',1),('android.telephony.TelephonyManager.getCellLocation()','android.permission.ACCESS_FINE_LOCATION',4),('android.telephony.TelephonyManager.getDeviceId()','android.permission.READ_PHONE_STATE',45),('android.telephony.TelephonyManager.getLine1Number()','android.permission.READ_PHONE_STATE',8),('android.telephony.TelephonyManager.getNeighboringCellInfo()','android.permission.ACCESS_FINE_LOCATION',1),('android.telephony.TelephonyManager.getSimSerialNumber()','android.permission.READ_PHONE_STATE',4),('android.telephony.TelephonyManager.getSubscriberId()','android.permission.READ_PHONE_STATE',6),('android.telephony.TelephonyManager.listen(android.telephony.PhoneStateListener,int)','android.permission.READ_PHONE_STATE',8),('android.widget.QuickContactBadge.assignContactFromEmail(java.lang.String,boolean)','android.permission.READ_CONTACTS',1),('java.lang.Runtime.exec(java.lang.String)','android.permission.READ_LOGS',14),('java.lang.Runtime.exec(java.lang.String[])','android.permission.READ_LOGS',14),('java.net.ServerSocket.bind(java.net.SocketAddress)','android.permission.INTERNET',6),('java.net.URL.getContent()','android.permission.INTERNET',9),('java.net.URL.openConnection()','android.permission.INTERNET',75),('java.net.URL.openConnection(java.net.Proxy)','android.permission.INTERNET',3),('java.net.URL.openStream()','android.permission.INTERNET',23),('java.net.URLConnection.connect()','android.permission.INTERNET',70),('java.net.URLConnection.getInputStream()','android.permission.INTERNET',76),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest)','android.permission.INTERNET',19),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,','android.permission.INTERNET',1);
/*!40000 ALTER TABLE `apiPermissionMapStats-Legitimate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `apiPermissionMapStats-Malware`
--

DROP TABLE IF EXISTS `apiPermissionMapStats-Malware`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `apiPermissionMapStats-Malware` (
  `apiName` varchar(100) NOT NULL,
  `permission` varchar(100) NOT NULL,
  `count` int(11) DEFAULT '0',
  PRIMARY KEY (`apiName`,`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `apiPermissionMapStats-Malware`
--

LOCK TABLES `apiPermissionMapStats-Malware` WRITE;
/*!40000 ALTER TABLE `apiPermissionMapStats-Malware` DISABLE KEYS */;
INSERT INTO `apiPermissionMapStats-Malware` VALUES ('android.accounts.AccountManager.getAccounts()','android.permission.GET_ACCOUNTS',12),('android.accounts.AccountManager.getAccountsByType(java.lang.String)','android.permission.GET_ACCOUNTS',39),('android.app.Activity.setContentView(int)','android.permission.INTERNET',983),('android.app.Activity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY',1),('android.app.ActivityManager.getRecentTasks(int,int)','android.permission.GET_TASKS',1),('android.app.ActivityManager.getRunningTasks(int)','android.permission.GET_TASKS',147),('android.app.ActivityManager.killBackgroundProcesses(java.lang.String)','android.permission.RESTART_PACKAGES',9),('android.app.ActivityManager.restartPackage(java.lang.String)','android.permission.RESTART_PACKAGES',101),('android.app.KeyguardManager$KeyguardLock.disableKeyguard()','android.permission.DISABLE_KEYGUARD',59),('android.app.KeyguardManager$KeyguardLock.reenableKeyguard()','android.permission.DISABLE_KEYGUARD',16),('android.app.KeyguardManager.exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)','android.permission.DISABLE_KEYGUARD',7),('android.app.NotificationManager.notify(int,android.app.Notification)','android.permission.VIBRATE',676),('android.app.NotificationManager.notify(java.lang.String,int,android.app.Notification)','android.permission.VIBRATE',2),('android.app.StatusBarManager.expand()','android.permission.EXPAND_STATUS_BAR',41),('android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)','android.permission.SET_WALLPAPER',23),('android.bluetooth.BluetoothAdapter.disable()','android.permission.BLUETOOTH_ADMIN',4),('android.bluetooth.BluetoothAdapter.enable()','android.permission.BLUETOOTH_ADMIN',4),('android.bluetooth.BluetoothAdapter.getBondedDevices()','android.permission.BLUETOOTH',1),('android.bluetooth.BluetoothAdapter.getState()','android.permission.BLUETOOTH',3),('android.bluetooth.BluetoothAdapter.isEnabled()','android.permission.BLUETOOTH',2),('android.content.ContentResolver.getMasterSyncAutomatically()','android.permission.READ_SYNC_SETTINGS',3),('android.content.ContentResolver.getSyncAutomatically(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS',1),('android.content.ContentResolver.openFileDescriptor(android.net.Uri,java.lang.String)','android.permission.READ_CONTACTS',8),('android.content.ContentResolver.openInputStream(android.net.Uri)','android.permission.READ_CONTACTS',69),('android.content.ContentResolver.openOutputStream(android.net.Uri)','android.permission.READ_CONTACTS',81),('android.content.ContentResolver.setMasterSyncAutomatically(boolean)','android.permission.WRITE_SYNC_SETTINGS',3),('android.content.Context.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER',52),('android.content.Context.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER',50),('android.content.ContextWrapper.clearWallpaper()','android.permission.SET_WALLPAPER',4),('android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY',16),('android.content.ContextWrapper.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER',268),('android.content.ContextWrapper.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER',48),('android.content.pm.PackageManager.addPreferredActivity(android.content.IntentFilter,int,android.cont','android.permission.SET_PREFERRED_APPLICATIONS',2),('android.content.pm.PackageManager.clearPackagePreferredActivities(java.lang.String)','android.permission.SET_PREFERRED_APPLICATIONS',2),('android.content.pm.PackageManager.setComponentEnabledSetting(android.content.ComponentName,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE',7),('android.hardware.Camera.open()','android.permission.CAMERA',13),('android.location.LocationManager.addGpsStatusListener(android.location.GpsStatus$Listener)','android.permission.ACCESS_FINE_LOCATION',4),('android.location.LocationManager.addProximityAlert(double,double,float,long,android.app.PendingInten','android.permission.ACCESS_FINE_LOCATION',3),('android.location.LocationManager.addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,bo','android.permission.ACCESS_MOCK_LOCATION',3),('android.location.LocationManager.clearTestProviderEnabled(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION',3),('android.location.LocationManager.clearTestProviderLocation(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION',3),('android.location.LocationManager.clearTestProviderStatus(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION',3),('android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)','android.permission.ACCESS_FINE_LOCATION',283),('android.location.LocationManager.getLastKnownLocation(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',374),('android.location.LocationManager.getProvider(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',6),('android.location.LocationManager.getProviders(android.location.Criteria,boolean)','android.permission.ACCESS_FINE_LOCATION',3),('android.location.LocationManager.getProviders(boolean)','android.permission.ACCESS_FINE_LOCATION',10),('android.location.LocationManager.isProviderEnabled(java.lang.String)','android.permission.ACCESS_FINE_LOCATION',128),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.app.Pend','android.permission.ACCESS_FINE_LOCATION',3),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location','android.permission.ACCESS_FINE_LOCATION',312),('android.location.LocationManager.sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundl','android.permission.ACCESS_FINE_LOCATION',3),('android.media.AsyncPlayer.play(android.content.Context,android.net.Uri,boolean,int)','android.permission.WAKE_LOCK',10),('android.media.AsyncPlayer.stop()','android.permission.WAKE_LOCK',10),('android.media.AudioManager.setMicrophoneMute(boolean)','android.permission.MODIFY_AUDIO_SETTINGS',1),('android.media.AudioManager.setMode(int)','android.permission.MODIFY_AUDIO_SETTINGS',5),('android.media.AudioManager.setSpeakerphoneOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS',4),('android.media.MediaPlayer.start()','android.permission.WAKE_LOCK',217),('android.media.MediaPlayer.stop()','android.permission.WAKE_LOCK',128),('android.media.MediaRecorder.setAudioSource(int)','android.permission.RECORD_AUDIO',15),('android.media.RingtoneManager.setActualDefaultRingtoneUri(android.content.Context,int,android.net.Ur','android.permission.WRITE_SETTINGS',8),('android.net.ConnectivityManager.getActiveNetworkInfo()','android.permission.ACCESS_NETWORK_STATE',814),('android.net.ConnectivityManager.getAllNetworkInfo()','android.permission.ACCESS_NETWORK_STATE',314),('android.net.ConnectivityManager.getNetworkInfo(int)','android.permission.ACCESS_NETWORK_STATE',591),('android.net.NetworkInfo.isConnectedOrConnecting()','android.permission.ACCESS_NETWORK_STATE',33),('android.net.wifi.WifiManager$WifiLock.acquire()','android.permission.WAKE_LOCK',4),('android.net.wifi.WifiManager$WifiLock.release()','android.permission.WAKE_LOCK',2),('android.net.wifi.WifiManager.addNetwork(android.net.wifi.WifiConfiguration)','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.disconnect()','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.enableNetwork(int,boolean)','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.getConfiguredNetworks()','android.permission.ACCESS_WIFI_STATE',1),('android.net.wifi.WifiManager.getConnectionInfo()','android.permission.ACCESS_WIFI_STATE',174),('android.net.wifi.WifiManager.getScanResults()','android.permission.ACCESS_WIFI_STATE',3),('android.net.wifi.WifiManager.getWifiState()','android.permission.ACCESS_WIFI_STATE',280),('android.net.wifi.WifiManager.isWifiEnabled()','android.permission.ACCESS_WIFI_STATE',58),('android.net.wifi.WifiManager.reassociate()','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.removeNetwork(int)','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.saveConfiguration()','android.permission.CHANGE_WIFI_STATE',1),('android.net.wifi.WifiManager.setWifiEnabled(boolean)','android.permission.CHANGE_WIFI_STATE',290),('android.net.wifi.WifiManager.startScan()','android.permission.CHANGE_WIFI_STATE',2),('android.os.Environment.getExternalStorageDirectory()','android.permission.WRITE_EXTERNAL_STORAGE',592),('android.os.PowerManager$WakeLock.acquire()','android.permission.WAKE_LOCK',78),('android.os.PowerManager$WakeLock.acquire(long)','android.permission.WAKE_LOCK',1),('android.os.PowerManager$WakeLock.release()','android.permission.WAKE_LOCK',74),('android.os.Vibrator.cancel()','android.permission.VIBRATE',3),('android.os.Vibrator.vibrate(long)','android.permission.VIBRATE',108),('android.provider.Browser.clearHistory(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS',10),('android.provider.Browser.clearSearches(android.content.ContentResolver)','com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',10),('android.provider.Browser.getAllBookmarks(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS',1),('android.provider.Browser.getAllVisitedUrls(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS',44),('android.provider.Contacts$People.createPersonInMyContactsGroup(android.content.ContentResolver,andro','android.permission.READ_CONTACTS',5),('android.provider.ContactsContract$Contacts.getLookupUri(android.content.ContentResolver,android.net.','android.permission.READ_CONTACTS',4),('android.provider.ContactsContract$Contacts.openContactPhotoInputStream(android.content.ContentResolv','android.permission.READ_CONTACTS',3),('android.provider.ContactsContract$RawContacts.getContactLookupUri(android.content.ContentResolver,an','android.permission.READ_CONTACTS',4),('android.provider.Settings$System.putInt(android.content.ContentResolver,java.lang.String,int)','android.permission.WRITE_SETTINGS',9),('android.provider.Settings$System.putString(android.content.ContentResolver,java.lang.String,java.lan','android.permission.WRITE_SETTINGS',1),('android.speech.SpeechRecognizer.startListening(android.content.Intent)','android.permission.RECORD_AUDIO',1),('android.telephony.gsm.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.uti','android.permission.SEND_SMS',3),('android.telephony.gsm.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,','android.permission.SEND_SMS',150),('android.telephony.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.Ar','android.permission.SEND_SMS',32),('android.telephony.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,andr','android.permission.SEND_SMS',191),('android.telephony.TelephonyManager.getCellLocation()','android.permission.ACCESS_FINE_LOCATION',250),('android.telephony.TelephonyManager.getDeviceId()','android.permission.READ_PHONE_STATE',940),('android.telephony.TelephonyManager.getDeviceSoftwareVersion()','android.permission.READ_PHONE_STATE',69),('android.telephony.TelephonyManager.getLine1Number()','android.permission.READ_PHONE_STATE',502),('android.telephony.TelephonyManager.getNeighboringCellInfo()','android.permission.ACCESS_FINE_LOCATION',1),('android.telephony.TelephonyManager.getSimSerialNumber()','android.permission.READ_PHONE_STATE',496),('android.telephony.TelephonyManager.getSubscriberId()','android.permission.READ_PHONE_STATE',838),('android.telephony.TelephonyManager.getVoiceMailAlphaTag()','android.permission.READ_PHONE_STATE',4),('android.telephony.TelephonyManager.getVoiceMailNumber()','android.permission.READ_PHONE_STATE',70),('android.telephony.TelephonyManager.listen(android.telephony.PhoneStateListener,int)','android.permission.READ_PHONE_STATE',95),('java.lang.Runtime.exec(java.lang.String)','android.permission.READ_LOGS',446),('java.lang.Runtime.exec(java.lang.String[])','android.permission.READ_LOGS',50),('java.net.ServerSocket.bind(java.net.SocketAddress)','android.permission.INTERNET',6),('java.net.URL.getContent()','android.permission.INTERNET',163),('java.net.URL.openConnection()','android.permission.INTERNET',968),('java.net.URL.openConnection(java.net.Proxy)','android.permission.INTERNET',394),('java.net.URL.openStream()','android.permission.INTERNET',51),('java.net.URLConnection.connect()','android.permission.INTERNET',823),('java.net.URLConnection.getInputStream()','android.permission.INTERNET',963),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest)','android.permission.INTERNET',149),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,','android.permission.INTERNET',7);
/*!40000 ALTER TABLE `apiPermissionMapStats-Malware` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `helloDynamic`
--

DROP TABLE IF EXISTS `helloDynamic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `helloDynamic` (
  `apiName` varchar(600) NOT NULL,
  PRIMARY KEY (`apiName`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `helloDynamic`
--

LOCK TABLES `helloDynamic` WRITE;
/*!40000 ALTER TABLE `helloDynamic` DISABLE KEYS */;
INSERT INTO `helloDynamic` VALUES ('android.app.Activity.getMenuInflater()'),('android.app.Activity.init()'),('android.app.Activity.onCreate(android.os.Bundle)'),('android.app.Activity.setContentView(int)'),('android.content.ContextWrapper.checkCallingOrSelfPermission(java.lang.String)'),('android.content.ContextWrapper.openFileOutput(java.lang.String,int)'),('android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)'),('android.util.Log.i(java.lang.String,java.lang.String)'),('android.view.MenuInflater.inflate(int,android.view.Menu)'),('com.example.hello.HelloActivity.anotherCallInt()'),('com.example.hello.HelloActivity.iFanotherCallInt()'),('com.example.hello.HelloActivity.testPermission()'),('java.io.File.init(java.io.File,java.lang.String)'),('java.io.FileOutputStream.init(java.io.File,boolean)'),('java.io.OutputStreamWriter.close()'),('java.io.OutputStreamWriter.init(java.io.OutputStream)'),('java.io.Writer.write(java.lang.String)'),('java.lang.String.getBytes()'),('java.lang.String.init(java.lang.String)'),('java.lang.StringBuilder.append(java.lang.Object)'),('java.lang.StringBuilder.init(java.lang.String)'),('java.lang.StringBuilder.toString()'),('java.lang.Throwable.printStackTrace()');
/*!40000 ALTER TABLE `helloDynamic` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `helloManifest`
--

DROP TABLE IF EXISTS `helloManifest`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `helloManifest` (
  `permName` varchar(400) NOT NULL,
  `used` int(11) DEFAULT '0',
  PRIMARY KEY (`permName`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `helloManifest`
--

LOCK TABLES `helloManifest` WRITE;
/*!40000 ALTER TABLE `helloManifest` DISABLE KEYS */;
INSERT INTO `helloManifest` VALUES ('',0);
/*!40000 ALTER TABLE `helloManifest` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `helloStatic`
--

DROP TABLE IF EXISTS `helloStatic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `helloStatic` (
  `apiName` varchar(600) NOT NULL,
  PRIMARY KEY (`apiName`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `helloStatic`
--

LOCK TABLES `helloStatic` WRITE;
/*!40000 ALTER TABLE `helloStatic` DISABLE KEYS */;
INSERT INTO `helloStatic` VALUES ('android.accessibilityservice.AccessibilityServiceInfo.getCanRetrieveWindowContent()'),('android.accessibilityservice.AccessibilityServiceInfo.getDescription()'),('android.accessibilityservice.AccessibilityServiceInfo.getId()'),('android.accessibilityservice.AccessibilityServiceInfo.getResolveInfo()'),('android.accessibilityservice.AccessibilityServiceInfo.getSettingsActivityName()'),('android.animation.ValueAnimator.getFrameDelay()'),('android.app.Activity.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.app.Activity.findViewById(int)'),('android.app.Activity.finish()'),('android.app.Activity.getCallingActivity()'),('android.app.Activity.getCallingPackage()'),('android.app.Activity.getComponentName()'),('android.app.Activity.getIntent()'),('android.app.Activity.getLastNonConfigurationInstance()'),('android.app.Activity.getLayoutInflater()'),('android.app.Activity.getMenuInflater()'),('android.app.Activity.getParentActivityIntent()'),('android.app.Activity.getSystemService(java.lang.String)'),('android.app.Activity.getWindow()'),('android.app.Activity.init()'),('android.app.Activity.invalidateOptionsMenu()'),('android.app.Activity.isFinishing()'),('android.app.Activity.navigateUpTo(android.content.Intent)'),('android.app.Activity.onActivityResult(int,int,android.content.Intent)'),('android.app.Activity.onConfigurationChanged(android.content.res.Configuration)'),('android.app.Activity.onCreate(android.os.Bundle)'),('android.app.Activity.onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)'),('android.app.Activity.onCreatePanelMenu(int,android.view.Menu)'),('android.app.Activity.onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)'),('android.app.Activity.onDestroy()'),('android.app.Activity.onKeyDown(int,android.view.KeyEvent)'),('android.app.Activity.onLowMemory()'),('android.app.Activity.onMenuItemSelected(int,android.view.MenuItem)'),('android.app.Activity.onNewIntent(android.content.Intent)'),('android.app.Activity.onPanelClosed(int,android.view.Menu)'),('android.app.Activity.onPause()'),('android.app.Activity.onPostResume()'),('android.app.Activity.onPreparePanel(int,android.view.View,android.view.Menu)'),('android.app.Activity.onResume()'),('android.app.Activity.onSaveInstanceState(android.os.Bundle)'),('android.app.Activity.onStart()'),('android.app.Activity.onStop()'),('android.app.Activity.setContentView(int)'),('android.app.Activity.shouldUpRecreateTask(android.content.Intent)'),('android.app.Activity.startActivity(android.content.Intent)'),('android.app.Activity.startActivityForResult(android.content.Intent,int)'),('android.app.Dialog.dismiss()'),('android.app.Dialog.getContext()'),('android.app.Dialog.getWindow()'),('android.app.Dialog.hide()'),('android.app.Dialog.init(android.content.Context,int)'),('android.app.Dialog.onRestoreInstanceState(android.os.Bundle)'),('android.app.Dialog.onSaveInstanceState()'),('android.app.Dialog.requestWindowFeature(int)'),('android.app.Dialog.setCancelable(boolean)'),('android.app.Dialog.setContentView(android.view.View)'),('android.app.Dialog.setOnCancelListener(android.content.DialogInterface$OnCancelListener)'),('android.app.Dialog.setOnDismissListener(android.content.DialogInterface$OnDismissListener)'),('android.app.Dialog.setOwnerActivity(android.app.Activity)'),('android.app.Dialog.show()'),('android.app.Notification$BigPictureStyle.bigPicture(android.graphics.Bitmap)'),('android.app.Notification$BigPictureStyle.init(android.app.Notification$Builder)'),('android.app.Notification$BigPictureStyle.setBigContentTitle(java.lang.CharSequence)'),('android.app.Notification$BigPictureStyle.setSummaryText(java.lang.CharSequence)'),('android.app.Notification$BigTextStyle.bigText(java.lang.CharSequence)'),('android.app.Notification$BigTextStyle.init(android.app.Notification$Builder)'),('android.app.Notification$BigTextStyle.setBigContentTitle(java.lang.CharSequence)'),('android.app.Notification$BigTextStyle.setSummaryText(java.lang.CharSequence)'),('android.app.Notification$Builder.addAction(int,java.lang.CharSequence,android.app.PendingIntent)'),('android.app.Notification$Builder.build()'),('android.app.Notification$Builder.getNotification()'),('android.app.Notification$Builder.init(android.content.Context)'),('android.app.Notification$Builder.setAutoCancel(boolean)'),('android.app.Notification$Builder.setContent(android.widget.RemoteViews)'),('android.app.Notification$Builder.setContentInfo(java.lang.CharSequence)'),('android.app.Notification$Builder.setContentIntent(android.app.PendingIntent)'),('android.app.Notification$Builder.setContentText(java.lang.CharSequence)'),('android.app.Notification$Builder.setContentTitle(java.lang.CharSequence)'),('android.app.Notification$Builder.setDefaults(int)'),('android.app.Notification$Builder.setDeleteIntent(android.app.PendingIntent)'),('android.app.Notification$Builder.setFullScreenIntent(android.app.PendingIntent,boolean)'),('android.app.Notification$Builder.setLargeIcon(android.graphics.Bitmap)'),('android.app.Notification$Builder.setLights(int,int,int)'),('android.app.Notification$Builder.setNumber(int)'),('android.app.Notification$Builder.setOngoing(boolean)'),('android.app.Notification$Builder.setOnlyAlertOnce(boolean)'),('android.app.Notification$Builder.setPriority(int)'),('android.app.Notification$Builder.setProgress(int,int,boolean)'),('android.app.Notification$Builder.setSmallIcon(int,int)'),('android.app.Notification$Builder.setSound(android.net.Uri,int)'),('android.app.Notification$Builder.setSubText(java.lang.CharSequence)'),('android.app.Notification$Builder.setTicker(java.lang.CharSequence,android.widget.RemoteViews)'),('android.app.Notification$Builder.setUsesChronometer(boolean)'),('android.app.Notification$Builder.setVibrate(long[])'),('android.app.Notification$Builder.setWhen(long)'),('android.app.Notification$InboxStyle.addLine(java.lang.CharSequence)'),('android.app.Notification$InboxStyle.init(android.app.Notification$Builder)'),('android.app.Notification$InboxStyle.setBigContentTitle(java.lang.CharSequence)'),('android.app.Notification$InboxStyle.setSummaryText(java.lang.CharSequence)'),('android.app.Notification.init()'),('android.app.Notification.setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)'),('android.app.PendingIntent.getActivities(android.content.Context,int,android.content.Intent[],int)'),('android.app.PendingIntent.getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)'),('android.app.PendingIntent.getActivity(android.content.Context,int,android.content.Intent,int)'),('android.app.SearchManager.getSearchableInfo(android.content.ComponentName)'),('android.content.BroadcastReceiver.onReceive(android.content.Context,android.content.Intent)'),('android.content.ComponentName.getPackageName()'),('android.content.ComponentName.init(android.content.Context,java.lang.Class)'),('android.content.ComponentName.init(android.content.Context,java.lang.String)'),('android.content.ComponentName.init(java.lang.String,java.lang.String)'),('android.content.ContentResolver.query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)'),('android.content.Context.getApplicationContext()'),('android.content.Context.getClassLoader()'),('android.content.Context.getContentResolver()'),('android.content.Context.getMainLooper()'),('android.content.Context.getPackageManager()'),('android.content.Context.getPackageName()'),('android.content.Context.getResources()'),('android.content.Context.getSystemService(java.lang.String)'),('android.content.Context.getText(int)'),('android.content.Context.obtainStyledAttributes(android.util.AttributeSet,int[])'),('android.content.Context.obtainStyledAttributes(android.util.AttributeSet,int[],int,int)'),('android.content.Context.obtainStyledAttributes(int,int[])'),('android.content.Context.startActivities(android.content.Intent[])'),('android.content.Context.startActivities(android.content.Intent[],android.os.Bundle)'),('android.content.Context.startActivity(android.content.Intent)'),('android.content.ContextWrapper.checkCallingOrSelfPermission(java.lang.String)'),('android.content.ContextWrapper.getClassLoader()'),('android.content.ContextWrapper.getPackageManager()'),('android.content.ContextWrapper.getPackageName()'),('android.content.ContextWrapper.openFileOutput(java.lang.String,int)'),('android.content.Intent.addCategory(java.lang.String)'),('android.content.Intent.addFlags(int)'),('android.content.Intent.createChooser(android.content.Intent,java.lang.CharSequence)'),('android.content.Intent.getAction()'),('android.content.Intent.getCategories()'),('android.content.Intent.getCharSequenceExtra(java.lang.String)'),('android.content.Intent.getComponent()'),('android.content.Intent.getData()'),('android.content.Intent.getFlags()'),('android.content.Intent.getParcelableArrayListExtra(java.lang.String)'),('android.content.Intent.getParcelableExtra(java.lang.String)'),('android.content.Intent.getScheme()'),('android.content.Intent.getStringArrayExtra(java.lang.String)'),('android.content.Intent.getStringExtra(java.lang.String)'),('android.content.Intent.getType()'),('android.content.Intent.hasExtra(java.lang.String)'),('android.content.Intent.init()'),('android.content.Intent.init(android.content.Intent)'),('android.content.Intent.init(java.lang.String)'),('android.content.Intent.makeMainActivity(android.content.ComponentName)'),('android.content.Intent.makeMainSelectorActivity(java.lang.String,java.lang.String)'),('android.content.Intent.makeRestartActivityTask(android.content.ComponentName)'),('android.content.Intent.putExtra(java.lang.String,android.os.Parcelable)'),('android.content.Intent.putExtra(java.lang.String,java.lang.CharSequence)'),('android.content.Intent.putExtra(java.lang.String,java.lang.String)'),('android.content.Intent.putExtra(java.lang.String,java.lang.String[])'),('android.content.Intent.putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)'),('android.content.Intent.removeExtra(java.lang.String)'),('android.content.Intent.resolveActivity(android.content.pm.PackageManager)'),('android.content.Intent.resolveTypeIfNeeded(android.content.ContentResolver)'),('android.content.Intent.setAction(java.lang.String)'),('android.content.Intent.setComponent(android.content.ComponentName)'),('android.content.Intent.setType(java.lang.String)'),('android.content.IntentFilter.countActions()'),('android.content.IntentFilter.getAction(int)'),('android.content.IntentFilter.match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)'),('android.content.pm.PackageManager.getActivityIcon(android.content.ComponentName)'),('android.content.pm.PackageManager.getActivityInfo(android.content.ComponentName,int)'),('android.content.pm.PackageManager.getApplicationIcon(java.lang.String)'),('android.content.pm.PackageManager.getApplicationInfo(java.lang.String,int)'),('android.content.pm.PackageManager.getApplicationLabel(android.content.pm.ApplicationInfo)'),('android.content.res.ColorStateList.getDefaultColor()'),('android.content.res.Resources.getColor(int)'),('android.content.res.Resources.getConfiguration()'),('android.content.res.Resources.getDisplayMetrics()'),('android.content.res.Resources.getDrawable(int)'),('android.content.res.Resources.getResourceEntryName(int)'),('android.content.res.Resources.getResourceName(int)'),('android.content.res.Resources.getResourcePackageName(int)'),('android.content.res.Resources.getResourceTypeName(int)'),('android.content.res.Resources.getString(int)'),('android.content.res.Resources.getString(int,java.lang.Object[])'),('android.content.res.Resources.getText(int)'),('android.content.res.TypedArray.getBoolean(int,boolean)'),('android.content.res.TypedArray.getColor(int,int)'),('android.content.res.TypedArray.getDimensionPixelSize(int,int)'),('android.content.res.TypedArray.getInteger(int,int)'),('android.content.res.TypedArray.getResourceId(int,int)'),('android.content.res.TypedArray.getString(int)'),('android.content.res.TypedArray.hasValue(int)'),('android.content.res.TypedArray.recycle()'),('android.database.ContentObserver.init(android.os.Handler)'),('android.database.Cursor.close()'),('android.database.Cursor.getColumnIndexOrThrow(java.lang.String)'),('android.database.Cursor.getCount()'),('android.database.Cursor.getLong(int)'),('android.database.Cursor.getString(int)'),('android.database.Cursor.isClosed()'),('android.database.Cursor.moveToPosition(int)'),('android.database.Cursor.registerContentObserver(android.database.ContentObserver)'),('android.database.Cursor.registerDataSetObserver(android.database.DataSetObserver)'),('android.database.Cursor.requery()'),('android.database.Cursor.unregisterContentObserver(android.database.ContentObserver)'),('android.database.Cursor.unregisterDataSetObserver(android.database.DataSetObserver)'),('android.database.DataSetObservable.init()'),('android.database.DataSetObservable.notifyChanged()'),('android.database.DataSetObserver.init()'),('android.database.Observable.registerObserver(java.lang.Object)'),('android.database.Observable.unregisterObserver(java.lang.Object)'),('android.graphics.Canvas.drawRect(float,float,float,float,android.graphics.Paint)'),('android.graphics.Canvas.restoreToCount(int)'),('android.graphics.Canvas.rotate(float)'),('android.graphics.Canvas.save()'),('android.graphics.Canvas.translate(float,float)'),('android.graphics.drawable.Drawable.draw(android.graphics.Canvas)'),('android.graphics.drawable.Drawable.getIntrinsicHeight()'),('android.graphics.drawable.Drawable.isStateful()'),('android.graphics.drawable.Drawable.setBounds(int,int,int,int)'),('android.graphics.drawable.Drawable.setState(int[])'),('android.graphics.Paint.init()'),('android.graphics.Paint.setColor(int)'),('android.graphics.Rect.init()'),('android.graphics.Rect.set(int,int,int,int)'),('android.graphics.Rect.union(int,int,int,int)'),('android.net.ConnectivityManager.getActiveNetworkInfo()'),('android.net.ConnectivityManager.getNetworkInfo(int)'),('android.net.ConnectivityManager.isActiveNetworkMetered()'),('android.net.NetworkInfo.getType()'),('android.net.TrafficStats.clearThreadStatsTag()'),('android.net.TrafficStats.getThreadStatsTag()'),('android.net.TrafficStats.incrementOperationCount(int)'),('android.net.TrafficStats.incrementOperationCount(int,int)'),('android.net.TrafficStats.setThreadStatsTag(int)'),('android.net.TrafficStats.tagSocket(java.net.Socket)'),('android.net.TrafficStats.untagSocket(java.net.Socket)'),('android.net.Uri.parse(java.lang.String)'),('android.os.Bundle.getBoolean(java.lang.String,boolean)'),('android.os.Bundle.getBundle(java.lang.String)'),('android.os.Bundle.getInt(java.lang.String,int)'),('android.os.Bundle.getParcelable(java.lang.String)'),('android.os.Bundle.getParcelableArray(java.lang.String)'),('android.os.Bundle.getSparseParcelableArray(java.lang.String)'),('android.os.Bundle.getString(java.lang.String)'),('android.os.Bundle.init()'),('android.os.Bundle.isEmpty()'),('android.os.Bundle.keySet()'),('android.os.Bundle.putBoolean(java.lang.String,boolean)'),('android.os.Bundle.putBundle(java.lang.String,android.os.Bundle)'),('android.os.Bundle.putInt(java.lang.String,int)'),('android.os.Bundle.putParcelable(java.lang.String,android.os.Parcelable)'),('android.os.Bundle.putParcelableArray(java.lang.String,android.os.Parcelable[])'),('android.os.Bundle.putSparseParcelableArray(java.lang.String,android.util.SparseArray)'),('android.os.Bundle.setClassLoader(java.lang.ClassLoader)'),('android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)'),('android.os.Environment.getExternalStorageState()'),('android.os.Handler.getLooper()'),('android.os.Handler.handleMessage(android.os.Message)'),('android.os.Handler.hasMessages(int)'),('android.os.Handler.init()'),('android.os.Handler.init(android.os.Looper)'),('android.os.Handler.obtainMessage(int,java.lang.Object)'),('android.os.Handler.post(java.lang.Runnable)'),('android.os.Handler.postAtTime(java.lang.Runnable,long)'),('android.os.Handler.removeCallbacks(java.lang.Runnable)'),('android.os.Handler.removeMessages(int)'),('android.os.Handler.sendEmptyMessage(int)'),('android.os.Handler.sendEmptyMessageAtTime(int,long)'),('android.os.Handler.sendEmptyMessageDelayed(int,long)'),('android.os.Looper.myLooper()'),('android.os.Message.sendToTarget()'),('android.os.Parcel.createIntArray()'),('android.os.Parcel.createTypedArray(android.os.Parcelable$Creator)'),('android.os.Parcel.readBundle()'),('android.os.Parcel.readInt()'),('android.os.Parcel.readParcelable(java.lang.ClassLoader)'),('android.os.Parcel.readString()'),('android.os.Parcel.writeBundle(android.os.Bundle)'),('android.os.Parcel.writeInt(int)'),('android.os.Parcel.writeIntArray(int[])'),('android.os.Parcel.writeParcelable(android.os.Parcelable,int)'),('android.os.Parcel.writeString(java.lang.String)'),('android.os.Parcel.writeTypedArray(android.os.Parcelable[],int)'),('android.os.Parcelable$Creator.createFromParcel(android.os.Parcel)'),('android.os.Process.setThreadPriority(int)'),('android.os.SystemClock.uptimeMillis()'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl.init()'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl.init()'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl.getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl.getDescription(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl.getId(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl.getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl.getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs.getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs.getDescription(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs.getId(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs.getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs.getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)'),('android.support.v4.app.ActivityCompatHoneycomb.invalidateOptionsMenu(android.app.Activity)'),('android.support.v4.app.BackStackRecord$Op.init()'),('android.support.v4.app.BackStackRecord.addOp(android.support.v4.app.BackStackRecord$Op)'),('android.support.v4.app.BackStackRecord.bumpBackStackNesting(int)'),('android.support.v4.app.BackStackRecord.commitInternal(boolean)'),('android.support.v4.app.BackStackRecord.doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)'),('android.support.v4.app.BackStackRecord.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.support.v4.app.BackStackRecord.dump(java.lang.String,java.io.PrintWriter,boolean)'),('android.support.v4.app.BackStackRecord.getName()'),('android.support.v4.app.BackStackRecord.init(android.support.v4.app.FragmentManagerImpl)'),('android.support.v4.app.BackStackRecord.popFromBackStack(boolean)'),('android.support.v4.app.BackStackRecord.replace(int,android.support.v4.app.Fragment,java.lang.String)'),('android.support.v4.app.BackStackRecord.setCustomAnimations(int,int,int,int)'),('android.support.v4.app.BackStackRecord.toString()'),('android.support.v4.app.BackStackState$1.createFromParcel(android.os.Parcel)'),('android.support.v4.app.BackStackState$1.init()'),('android.support.v4.app.BackStackState$1.newArray(int)'),('android.support.v4.app.BackStackState.init(android.os.Parcel)'),('android.support.v4.app.BackStackState.init(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)'),('android.support.v4.app.BackStackState.instantiate(android.support.v4.app.FragmentManagerImpl)'),('android.support.v4.app.DialogFragment.dismissInternal(boolean)'),('android.support.v4.app.DialogFragment.getTheme()'),('android.support.v4.app.DialogFragment.onCreateDialog(android.os.Bundle)'),('android.support.v4.app.Fragment$1.init(android.support.v4.app.Fragment)'),('android.support.v4.app.Fragment$InstantiationException.init(java.lang.String,java.lang.Exception)'),('android.support.v4.app.Fragment$SavedState$1.createFromParcel(android.os.Parcel)'),('android.support.v4.app.Fragment$SavedState$1.init()'),('android.support.v4.app.Fragment$SavedState$1.newArray(int)'),('android.support.v4.app.Fragment$SavedState.init(android.os.Bundle)'),('android.support.v4.app.Fragment$SavedState.init(android.os.Parcel,java.lang.ClassLoader)'),('android.support.v4.app.Fragment.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.support.v4.app.Fragment.findFragmentByWho(java.lang.String)'),('android.support.v4.app.Fragment.getActivity()'),('android.support.v4.app.Fragment.getFragmentManager()'),('android.support.v4.app.Fragment.getLayoutInflater(android.os.Bundle)'),('android.support.v4.app.Fragment.getResources()'),('android.support.v4.app.Fragment.getView()'),('android.support.v4.app.Fragment.init()'),('android.support.v4.app.Fragment.initState()'),('android.support.v4.app.Fragment.instantiate(android.content.Context,java.lang.String)'),('android.support.v4.app.Fragment.instantiate(android.content.Context,java.lang.String,android.os.Bundle)'),('android.support.v4.app.Fragment.instantiateChildFragmentManager()'),('android.support.v4.app.Fragment.isAdded()'),('android.support.v4.app.Fragment.isDetached()'),('android.support.v4.app.Fragment.isHidden()'),('android.support.v4.app.Fragment.isInBackStack()'),('android.support.v4.app.Fragment.onActivityCreated(android.os.Bundle)'),('android.support.v4.app.Fragment.onActivityResult(int,int,android.content.Intent)'),('android.support.v4.app.Fragment.onAttach(android.app.Activity)'),('android.support.v4.app.Fragment.onConfigurationChanged(android.content.res.Configuration)'),('android.support.v4.app.Fragment.onContextItemSelected(android.view.MenuItem)'),('android.support.v4.app.Fragment.onCreate(android.os.Bundle)'),('android.support.v4.app.Fragment.onCreateAnimation(int,boolean,int)'),('android.support.v4.app.Fragment.onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)'),('android.support.v4.app.Fragment.onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)'),('android.support.v4.app.Fragment.onDestroy()'),('android.support.v4.app.Fragment.onDestroyOptionsMenu()'),('android.support.v4.app.Fragment.onDestroyView()'),('android.support.v4.app.Fragment.onDetach()'),('android.support.v4.app.Fragment.onHiddenChanged(boolean)'),('android.support.v4.app.Fragment.onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)'),('android.support.v4.app.Fragment.onLowMemory()'),('android.support.v4.app.Fragment.onOptionsItemSelected(android.view.MenuItem)'),('android.support.v4.app.Fragment.onOptionsMenuClosed(android.view.Menu)'),('android.support.v4.app.Fragment.onPause()'),('android.support.v4.app.Fragment.onPrepareOptionsMenu(android.view.Menu)'),('android.support.v4.app.Fragment.onResume()'),('android.support.v4.app.Fragment.onSaveInstanceState(android.os.Bundle)'),('android.support.v4.app.Fragment.onStart()'),('android.support.v4.app.Fragment.onStop()'),('android.support.v4.app.Fragment.onViewCreated(android.view.View,android.os.Bundle)'),('android.support.v4.app.Fragment.onViewStateRestored(android.os.Bundle)'),('android.support.v4.app.Fragment.performActivityCreated(android.os.Bundle)'),('android.support.v4.app.Fragment.performConfigurationChanged(android.content.res.Configuration)'),('android.support.v4.app.Fragment.performContextItemSelected(android.view.MenuItem)'),('android.support.v4.app.Fragment.performCreate(android.os.Bundle)'),('android.support.v4.app.Fragment.performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)'),('android.support.v4.app.Fragment.performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)'),('android.support.v4.app.Fragment.performDestroy()'),('android.support.v4.app.Fragment.performDestroyView()'),('android.support.v4.app.Fragment.performLowMemory()'),('android.support.v4.app.Fragment.performOptionsItemSelected(android.view.MenuItem)'),('android.support.v4.app.Fragment.performOptionsMenuClosed(android.view.Menu)'),('android.support.v4.app.Fragment.performPause()'),('android.support.v4.app.Fragment.performPrepareOptionsMenu(android.view.Menu)'),('android.support.v4.app.Fragment.performReallyStop()'),('android.support.v4.app.Fragment.performResume()'),('android.support.v4.app.Fragment.performSaveInstanceState(android.os.Bundle)'),('android.support.v4.app.Fragment.performStart()'),('android.support.v4.app.Fragment.performStop()'),('android.support.v4.app.Fragment.restoreViewState(android.os.Bundle)'),('android.support.v4.app.Fragment.setIndex(int,android.support.v4.app.Fragment)'),('android.support.v4.app.Fragment.setInitialSavedState(android.support.v4.app.Fragment$SavedState)'),('android.support.v4.app.Fragment.setMenuVisibility(boolean)'),('android.support.v4.app.Fragment.setUserVisibleHint(boolean)'),('android.support.v4.app.Fragment.toString()'),('android.support.v4.app.FragmentActivity$1.init(android.support.v4.app.FragmentActivity)'),('android.support.v4.app.FragmentActivity$2.init(android.support.v4.app.FragmentActivity)'),('android.support.v4.app.FragmentActivity$NonConfigurationInstances.init()'),('android.support.v4.app.FragmentActivity.doReallyStop(boolean)'),('android.support.v4.app.FragmentActivity.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.support.v4.app.FragmentActivity.dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)'),('android.support.v4.app.FragmentActivity.getLoaderManager(java.lang.String,boolean,boolean)'),('android.support.v4.app.FragmentActivity.invalidateSupportFragment(java.lang.String)'),('android.support.v4.app.FragmentActivity.onAttachFragment(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentActivity.onBackPressed()'),('android.support.v4.app.FragmentActivity.onCreatePanelMenu(int,android.view.Menu)'),('android.support.v4.app.FragmentActivity.onReallyStop()'),('android.support.v4.app.FragmentActivity.onResumeFragments()'),('android.support.v4.app.FragmentActivity.onRetainCustomNonConfigurationInstance()'),('android.support.v4.app.FragmentActivity.startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)'),('android.support.v4.app.FragmentActivity.supportInvalidateOptionsMenu()'),('android.support.v4.app.FragmentActivity.viewToString(android.view.View)'),('android.support.v4.app.FragmentContainer.findViewById(int)'),('android.support.v4.app.FragmentManager$OnBackStackChangedListener.onBackStackChanged()'),('android.support.v4.app.FragmentManager.beginTransaction()'),('android.support.v4.app.FragmentManager.executePendingTransactions()'),('android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)'),('android.support.v4.app.FragmentManager.getFragment(android.os.Bundle,java.lang.String)'),('android.support.v4.app.FragmentManager.init()'),('android.support.v4.app.FragmentManager.popBackStack(int,int)'),('android.support.v4.app.FragmentManager.putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManager.saveFragmentInstanceState(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl$1.init(android.support.v4.app.FragmentManagerImpl)'),('android.support.v4.app.FragmentManagerImpl$2.init(android.support.v4.app.FragmentManagerImpl)'),('android.support.v4.app.FragmentManagerImpl$3.init(android.support.v4.app.FragmentManagerImpl,java.lang.String,int)'),('android.support.v4.app.FragmentManagerImpl$4.init(android.support.v4.app.FragmentManagerImpl,int,int)'),('android.support.v4.app.FragmentManagerImpl$5.init(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.addBackStackState(android.support.v4.app.BackStackRecord)'),('android.support.v4.app.FragmentManagerImpl.addFragment(android.support.v4.app.Fragment,boolean)'),('android.support.v4.app.FragmentManagerImpl.allocBackStackIndex(android.support.v4.app.BackStackRecord)'),('android.support.v4.app.FragmentManagerImpl.attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.attachFragment(android.support.v4.app.Fragment,int,int)'),('android.support.v4.app.FragmentManagerImpl.checkStateLoss()'),('android.support.v4.app.FragmentManagerImpl.detachFragment(android.support.v4.app.Fragment,int,int)'),('android.support.v4.app.FragmentManagerImpl.dispatchActivityCreated()'),('android.support.v4.app.FragmentManagerImpl.dispatchConfigurationChanged(android.content.res.Configuration)'),('android.support.v4.app.FragmentManagerImpl.dispatchContextItemSelected(android.view.MenuItem)'),('android.support.v4.app.FragmentManagerImpl.dispatchCreate()'),('android.support.v4.app.FragmentManagerImpl.dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)'),('android.support.v4.app.FragmentManagerImpl.dispatchDestroy()'),('android.support.v4.app.FragmentManagerImpl.dispatchDestroyView()'),('android.support.v4.app.FragmentManagerImpl.dispatchLowMemory()'),('android.support.v4.app.FragmentManagerImpl.dispatchOptionsItemSelected(android.view.MenuItem)'),('android.support.v4.app.FragmentManagerImpl.dispatchOptionsMenuClosed(android.view.Menu)'),('android.support.v4.app.FragmentManagerImpl.dispatchPause()'),('android.support.v4.app.FragmentManagerImpl.dispatchPrepareOptionsMenu(android.view.Menu)'),('android.support.v4.app.FragmentManagerImpl.dispatchReallyStop()'),('android.support.v4.app.FragmentManagerImpl.dispatchResume()'),('android.support.v4.app.FragmentManagerImpl.dispatchStart()'),('android.support.v4.app.FragmentManagerImpl.dispatchStop()'),('android.support.v4.app.FragmentManagerImpl.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.support.v4.app.FragmentManagerImpl.enqueueAction(java.lang.Runnable,boolean)'),('android.support.v4.app.FragmentManagerImpl.execPendingActions()'),('android.support.v4.app.FragmentManagerImpl.executePendingTransactions()'),('android.support.v4.app.FragmentManagerImpl.findFragmentById(int)'),('android.support.v4.app.FragmentManagerImpl.findFragmentByTag(java.lang.String)'),('android.support.v4.app.FragmentManagerImpl.findFragmentByWho(java.lang.String)'),('android.support.v4.app.FragmentManagerImpl.freeBackStackIndex(int)'),('android.support.v4.app.FragmentManagerImpl.getFragment(android.os.Bundle,java.lang.String)'),('android.support.v4.app.FragmentManagerImpl.hideFragment(android.support.v4.app.Fragment,int,int)'),('android.support.v4.app.FragmentManagerImpl.init()'),('android.support.v4.app.FragmentManagerImpl.loadAnimation(android.support.v4.app.Fragment,int,boolean,int)'),('android.support.v4.app.FragmentManagerImpl.makeActive(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.makeFadeAnimation(android.content.Context,float,float)'),('android.support.v4.app.FragmentManagerImpl.makeInactive(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.makeOpenCloseAnimation(android.content.Context,float,float,float,float)'),('android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.moveToState(android.support.v4.app.Fragment,int,int,int,boolean)'),('android.support.v4.app.FragmentManagerImpl.moveToState(int,boolean)'),('android.support.v4.app.FragmentManagerImpl.moveToState(int,int,int,boolean)'),('android.support.v4.app.FragmentManagerImpl.noteStateNotSaved()'),('android.support.v4.app.FragmentManagerImpl.performPendingDeferredStart(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.popBackStackImmediate()'),('android.support.v4.app.FragmentManagerImpl.popBackStackState(android.os.Handler,java.lang.String,int,int)'),('android.support.v4.app.FragmentManagerImpl.putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.removeFragment(android.support.v4.app.Fragment,int,int)'),('android.support.v4.app.FragmentManagerImpl.reportBackStackChanged()'),('android.support.v4.app.FragmentManagerImpl.restoreAllState(android.os.Parcelable,java.util.ArrayList)'),('android.support.v4.app.FragmentManagerImpl.retainNonConfig()'),('android.support.v4.app.FragmentManagerImpl.reverseTransit(int)'),('android.support.v4.app.FragmentManagerImpl.saveAllState()'),('android.support.v4.app.FragmentManagerImpl.saveFragmentBasicState(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.saveFragmentViewState(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentManagerImpl.setBackStackIndex(int,android.support.v4.app.BackStackRecord)'),('android.support.v4.app.FragmentManagerImpl.showFragment(android.support.v4.app.Fragment,int,int)'),('android.support.v4.app.FragmentManagerImpl.startPendingDeferredFragments()'),('android.support.v4.app.FragmentManagerImpl.throwException(java.lang.RuntimeException)'),('android.support.v4.app.FragmentManagerImpl.transitToStyleIndex(int,boolean)'),('android.support.v4.app.FragmentManagerState$1.createFromParcel(android.os.Parcel)'),('android.support.v4.app.FragmentManagerState$1.init()'),('android.support.v4.app.FragmentManagerState$1.newArray(int)'),('android.support.v4.app.FragmentManagerState.init()'),('android.support.v4.app.FragmentManagerState.init(android.os.Parcel)'),('android.support.v4.app.FragmentPagerAdapter.getItem(int)'),('android.support.v4.app.FragmentPagerAdapter.getItemId(int)'),('android.support.v4.app.FragmentPagerAdapter.makeFragmentName(int,long)'),('android.support.v4.app.FragmentState$1.createFromParcel(android.os.Parcel)'),('android.support.v4.app.FragmentState$1.init()'),('android.support.v4.app.FragmentState$1.newArray(int)'),('android.support.v4.app.FragmentState.init(android.os.Parcel)'),('android.support.v4.app.FragmentState.init(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentState.instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentStatePagerAdapter.getItem(int)'),('android.support.v4.app.FragmentTabHost$DummyTabFactory.init(android.content.Context)'),('android.support.v4.app.FragmentTabHost$SavedState$1.createFromParcel(android.os.Parcel)'),('android.support.v4.app.FragmentTabHost$SavedState$1.init()'),('android.support.v4.app.FragmentTabHost$SavedState$1.newArray(int)'),('android.support.v4.app.FragmentTabHost$SavedState.init(android.os.Parcel)'),('android.support.v4.app.FragmentTabHost$SavedState.init(android.os.Parcel,android.support.v4.app.FragmentTabHost$1)'),('android.support.v4.app.FragmentTabHost$SavedState.init(android.os.Parcelable)'),('android.support.v4.app.FragmentTabHost$TabInfo.access$100(android.support.v4.app.FragmentTabHost$TabInfo)'),('android.support.v4.app.FragmentTabHost$TabInfo.access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentTabHost$TabInfo.access$200(android.support.v4.app.FragmentTabHost$TabInfo)'),('android.support.v4.app.FragmentTabHost$TabInfo.access$300(android.support.v4.app.FragmentTabHost$TabInfo)'),('android.support.v4.app.FragmentTabHost$TabInfo.access$400(android.support.v4.app.FragmentTabHost$TabInfo)'),('android.support.v4.app.FragmentTabHost$TabInfo.init(java.lang.String,java.lang.Class,android.os.Bundle)'),('android.support.v4.app.FragmentTabHost.doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction)'),('android.support.v4.app.FragmentTabHost.ensureContent()'),('android.support.v4.app.FragmentTabHost.initFragmentTabHost(android.content.Context,android.util.AttributeSet)'),('android.support.v4.app.FragmentTransaction.add(android.support.v4.app.Fragment,java.lang.String)'),('android.support.v4.app.FragmentTransaction.add(int,android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentTransaction.add(int,android.support.v4.app.Fragment,java.lang.String)'),('android.support.v4.app.FragmentTransaction.attach(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentTransaction.commit()'),('android.support.v4.app.FragmentTransaction.commitAllowingStateLoss()'),('android.support.v4.app.FragmentTransaction.detach(android.support.v4.app.Fragment)'),('android.support.v4.app.FragmentTransaction.init()'),('android.support.v4.app.FragmentTransaction.remove(android.support.v4.app.Fragment)'),('android.support.v4.app.ListFragment$1.init(android.support.v4.app.ListFragment)'),('android.support.v4.app.ListFragment$2.init(android.support.v4.app.ListFragment)'),('android.support.v4.app.ListFragment.ensureList()'),('android.support.v4.app.ListFragment.onListItemClick(android.widget.ListView,android.view.View,int,long)'),('android.support.v4.app.ListFragment.setListAdapter(android.widget.ListAdapter)'),('android.support.v4.app.ListFragment.setListShown(boolean,boolean)'),('android.support.v4.app.LoaderManager$LoaderCallbacks.onCreateLoader(int,android.os.Bundle)'),('android.support.v4.app.LoaderManager$LoaderCallbacks.onLoaderReset(android.support.v4.content.Loader)'),('android.support.v4.app.LoaderManager$LoaderCallbacks.onLoadFinished(android.support.v4.content.Loader,java.lang.Object)'),('android.support.v4.app.LoaderManager.init()'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.destroy()'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.finishRetain()'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.init(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.reportStart()'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.retain()'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.start()'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.stop()'),('android.support.v4.app.LoaderManagerImpl$LoaderInfo.toString()'),('android.support.v4.app.LoaderManagerImpl.createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)'),('android.support.v4.app.LoaderManagerImpl.createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)'),('android.support.v4.app.LoaderManagerImpl.doDestroy()'),('android.support.v4.app.LoaderManagerImpl.doReportNextStart()'),('android.support.v4.app.LoaderManagerImpl.doReportStart()'),('android.support.v4.app.LoaderManagerImpl.doRetain()'),('android.support.v4.app.LoaderManagerImpl.doStart()'),('android.support.v4.app.LoaderManagerImpl.doStop()'),('android.support.v4.app.LoaderManagerImpl.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.support.v4.app.LoaderManagerImpl.finishRetain()'),('android.support.v4.app.LoaderManagerImpl.hasRunningLoaders()'),('android.support.v4.app.LoaderManagerImpl.init(java.lang.String,android.support.v4.app.FragmentActivity,boolean)'),('android.support.v4.app.LoaderManagerImpl.installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)'),('android.support.v4.app.LoaderManagerImpl.updateActivity(android.support.v4.app.FragmentActivity)'),('android.support.v4.app.NavUtils$NavUtilsImpl.getParentActivityIntent(android.app.Activity)'),('android.support.v4.app.NavUtils$NavUtilsImpl.getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)'),('android.support.v4.app.NavUtils$NavUtilsImpl.navigateUpTo(android.app.Activity,android.content.Intent)'),('android.support.v4.app.NavUtils$NavUtilsImpl.shouldUpRecreateTask(android.app.Activity,android.content.Intent)'),('android.support.v4.app.NavUtils$NavUtilsImplBase.getParentActivityIntent(android.app.Activity)'),('android.support.v4.app.NavUtils$NavUtilsImplBase.getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)'),('android.support.v4.app.NavUtils$NavUtilsImplBase.init()'),('android.support.v4.app.NavUtils$NavUtilsImplJB.init()'),('android.support.v4.app.NavUtils$NavUtilsImplJB.superGetParentActivityIntent(android.app.Activity)'),('android.support.v4.app.NavUtils.getParentActivityIntent(android.app.Activity)'),('android.support.v4.app.NavUtils.getParentActivityIntent(android.content.Context,android.content.ComponentName)'),('android.support.v4.app.NavUtils.getParentActivityName(android.app.Activity)'),('android.support.v4.app.NavUtils.getParentActivityName(android.content.Context,android.content.ComponentName)'),('android.support.v4.app.NavUtils.navigateUpTo(android.app.Activity,android.content.Intent)'),('android.support.v4.app.NavUtilsJB.getParentActivityIntent(android.app.Activity)'),('android.support.v4.app.NavUtilsJB.getParentActivityName(android.content.pm.ActivityInfo)'),('android.support.v4.app.NavUtilsJB.navigateUpTo(android.app.Activity,android.content.Intent)'),('android.support.v4.app.NavUtilsJB.shouldUpRecreateTask(android.app.Activity,android.content.Intent)'),('android.support.v4.app.NoSaveStateFrameLayout.init(android.content.Context)'),('android.support.v4.app.NoSaveStateFrameLayout.wrap(android.view.View)'),('android.support.v4.app.NotificationCompat$Action.init(int,java.lang.CharSequence,android.app.PendingIntent)'),('android.support.v4.app.NotificationCompat$Builder.build()'),('android.support.v4.app.NotificationCompat$Builder.setFlag(int,boolean)'),('android.support.v4.app.NotificationCompat$Builder.setStyle(android.support.v4.app.NotificationCompat$Style)'),('android.support.v4.app.NotificationCompat$NotificationCompatImpl.build(android.support.v4.app.NotificationCompat$Builder)'),('android.support.v4.app.NotificationCompat$NotificationCompatImplBase.init()'),('android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb.init()'),('android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich.init()'),('android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean.init()'),('android.support.v4.app.NotificationCompat$Style.init()'),('android.support.v4.app.NotificationCompat$Style.setBuilder(android.support.v4.app.NotificationCompat$Builder)'),('android.support.v4.app.NotificationCompat.access$000()'),('android.support.v4.app.NotificationCompatHoneycomb.add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)'),('android.support.v4.app.NotificationCompatIceCreamSandwich.add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)'),('android.support.v4.app.NotificationCompatJellybean.addAction(int,java.lang.CharSequence,android.app.PendingIntent)'),('android.support.v4.app.NotificationCompatJellybean.addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap)'),('android.support.v4.app.NotificationCompatJellybean.addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence)'),('android.support.v4.app.NotificationCompatJellybean.addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList)'),('android.support.v4.app.NotificationCompatJellybean.build()'),('android.support.v4.app.NotificationCompatJellybean.init(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence)'),('android.support.v4.app.ShareCompat$IntentBuilder.combineArrayExtra(java.lang.String,java.lang.String[])'),('android.support.v4.app.ShareCompat$IntentBuilder.combineArrayExtra(java.lang.String,java.util.ArrayList)'),('android.support.v4.app.ShareCompat$IntentBuilder.createChooserIntent()'),('android.support.v4.app.ShareCompat$IntentBuilder.getActivity()'),('android.support.v4.app.ShareCompat$IntentBuilder.getIntent()'),('android.support.v4.app.ShareCompat$IntentBuilder.init(android.app.Activity)'),('android.support.v4.app.ShareCompat$IntentBuilder.setChooserTitle(java.lang.CharSequence)'),('android.support.v4.app.ShareCompat$IntentBuilder.setStream(android.net.Uri)'),('android.support.v4.app.ShareCompat$IntentBuilder.setText(java.lang.CharSequence)'),('android.support.v4.app.ShareCompat$IntentReader.getStreamCount()'),('android.support.v4.app.ShareCompat$IntentReader.getText()'),('android.support.v4.app.ShareCompat$IntentReader.init(android.app.Activity)'),('android.support.v4.app.ShareCompat$IntentReader.isMultipleShare()'),('android.support.v4.app.ShareCompat$ShareCompatImpl.configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)'),('android.support.v4.app.ShareCompat$ShareCompatImpl.escapeHtml(java.lang.CharSequence)'),('android.support.v4.app.ShareCompat$ShareCompatImplBase.init()'),('android.support.v4.app.ShareCompat$ShareCompatImplBase.withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int)'),('android.support.v4.app.ShareCompat$ShareCompatImplICS.init()'),('android.support.v4.app.ShareCompat$ShareCompatImplICS.shouldAddChooserIntent(android.view.MenuItem)'),('android.support.v4.app.ShareCompat$ShareCompatImplJB.init()'),('android.support.v4.app.ShareCompat.access$000()'),('android.support.v4.app.ShareCompat.configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)'),('android.support.v4.app.ShareCompat.getCallingActivity(android.app.Activity)'),('android.support.v4.app.ShareCompat.getCallingPackage(android.app.Activity)'),('android.support.v4.app.ShareCompatICS.configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)'),('android.support.v4.app.ShareCompatJB.escapeHtml(java.lang.CharSequence)'),('android.support.v4.app.SuperNotCalledException.init(java.lang.String)'),('android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl.getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)'),('android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase.init()'),('android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb.init()'),('android.support.v4.app.TaskStackBuilder.addNextIntent(android.content.Intent)'),('android.support.v4.app.TaskStackBuilder.addParentStack(android.content.ComponentName)'),('android.support.v4.app.TaskStackBuilder.create(android.content.Context)'),('android.support.v4.app.TaskStackBuilder.editIntentAt(int)'),('android.support.v4.app.TaskStackBuilder.getPendingIntent(int,int,android.os.Bundle)'),('android.support.v4.app.TaskStackBuilder.init(android.content.Context)'),('android.support.v4.app.TaskStackBuilder.startActivities(android.os.Bundle)'),('android.support.v4.app.TaskStackBuilderHoneycomb.getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)'),('android.support.v4.app.TaskStackBuilderJellybean.getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)'),('android.support.v4.content.AsyncTaskLoader$LoadTask.access$000(android.support.v4.content.AsyncTaskLoader$LoadTask)'),('android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(java.lang.Void[])'),('android.support.v4.content.AsyncTaskLoader$LoadTask.init(android.support.v4.content.AsyncTaskLoader)'),('android.support.v4.content.AsyncTaskLoader.cancelLoad()'),('android.support.v4.content.AsyncTaskLoader.dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)'),('android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)'),('android.support.v4.content.AsyncTaskLoader.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.support.v4.content.AsyncTaskLoader.executePendingTask()'),('android.support.v4.content.AsyncTaskLoader.init(android.content.Context)'),('android.support.v4.content.AsyncTaskLoader.loadInBackground()'),('android.support.v4.content.AsyncTaskLoader.onCanceled(java.lang.Object)'),('android.support.v4.content.AsyncTaskLoader.onLoadInBackground()'),('android.support.v4.content.ContextCompat.init()'),('android.support.v4.content.ContextCompat.startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)'),('android.support.v4.content.ContextCompatHoneycomb.startActivities(android.content.Context,android.content.Intent[])'),('android.support.v4.content.ContextCompatJellybean.startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)'),('android.support.v4.content.CursorLoader.deliverResult(android.database.Cursor)'),('android.support.v4.content.CursorLoader.loadInBackground()'),('android.support.v4.content.CursorLoader.onCanceled(android.database.Cursor)'),('android.support.v4.content.CursorLoader.onStopLoading()'),('android.support.v4.content.CursorLoader.registerContentObserver(android.database.Cursor,android.database.ContentObserver)'),('android.support.v4.content.IntentCompat$IntentCompatImpl.makeMainActivity(android.content.ComponentName)'),('android.support.v4.content.IntentCompat$IntentCompatImpl.makeMainSelectorActivity(java.lang.String,java.lang.String)'),('android.support.v4.content.IntentCompat$IntentCompatImpl.makeRestartActivityTask(android.content.ComponentName)'),('android.support.v4.content.IntentCompat$IntentCompatImplBase.init()'),('android.support.v4.content.IntentCompat$IntentCompatImplBase.makeMainActivity(android.content.ComponentName)'),('android.support.v4.content.IntentCompat$IntentCompatImplHC.init()'),('android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1.init()'),('android.support.v4.content.IntentCompat.makeMainActivity(android.content.ComponentName)'),('android.support.v4.content.IntentCompatHoneycomb.makeMainActivity(android.content.ComponentName)'),('android.support.v4.content.IntentCompatHoneycomb.makeRestartActivityTask(android.content.ComponentName)'),('android.support.v4.content.IntentCompatIcsMr1.makeMainSelectorActivity(java.lang.String,java.lang.String)'),('android.support.v4.content.Loader$ForceLoadContentObserver.init(android.support.v4.content.Loader)'),('android.support.v4.content.Loader$OnLoadCompleteListener.onLoadComplete(android.support.v4.content.Loader,java.lang.Object)'),('android.support.v4.content.Loader.abandon()'),('android.support.v4.content.Loader.dataToString(java.lang.Object)'),('android.support.v4.content.Loader.deliverResult(java.lang.Object)'),('android.support.v4.content.Loader.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])'),('android.support.v4.content.Loader.forceLoad()'),('android.support.v4.content.Loader.getContext()'),('android.support.v4.content.Loader.init(android.content.Context)'),('android.support.v4.content.Loader.isAbandoned()'),('android.support.v4.content.Loader.isReset()'),('android.support.v4.content.Loader.isStarted()'),('android.support.v4.content.Loader.onAbandon()'),('android.support.v4.content.Loader.onContentChanged()'),('android.support.v4.content.Loader.onForceLoad()'),('android.support.v4.content.Loader.onReset()'),('android.support.v4.content.Loader.onStartLoading()'),('android.support.v4.content.Loader.onStopLoading()'),('android.support.v4.content.Loader.registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)'),('android.support.v4.content.Loader.reset()'),('android.support.v4.content.Loader.startLoading()'),('android.support.v4.content.Loader.stopLoading()'),('android.support.v4.content.Loader.takeContentChanged()'),('android.support.v4.content.Loader.unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)'),('android.support.v4.content.LocalBroadcastManager$1.init(android.support.v4.content.LocalBroadcastManager,android.os.Looper)'),('android.support.v4.content.LocalBroadcastManager$BroadcastRecord.init(android.content.Intent,java.util.ArrayList)'),('android.support.v4.content.LocalBroadcastManager$ReceiverRecord.init(android.content.IntentFilter,android.content.BroadcastReceiver)'),('android.support.v4.content.LocalBroadcastManager.access$000(android.support.v4.content.LocalBroadcastManager)'),('android.support.v4.content.LocalBroadcastManager.executePendingBroadcasts()'),('android.support.v4.content.LocalBroadcastManager.init(android.content.Context)'),('android.support.v4.content.LocalBroadcastManager.sendBroadcast(android.content.Intent)'),('android.support.v4.content.ModernAsyncTask$1.init()'),('android.support.v4.content.ModernAsyncTask$2.init(android.support.v4.content.ModernAsyncTask)'),('android.support.v4.content.ModernAsyncTask$3.init(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)'),('android.support.v4.content.ModernAsyncTask$AsyncTaskResult.init(android.support.v4.content.ModernAsyncTask,java.lang.Object[])'),('android.support.v4.content.ModernAsyncTask$InternalHandler.init()'),('android.support.v4.content.ModernAsyncTask$InternalHandler.init(android.support.v4.content.ModernAsyncTask$1)'),('android.support.v4.content.ModernAsyncTask$Status.init(java.lang.String,int)'),('android.support.v4.content.ModernAsyncTask$Status.values()'),('android.support.v4.content.ModernAsyncTask$WorkerRunnable.init()'),('android.support.v4.content.ModernAsyncTask$WorkerRunnable.init(android.support.v4.content.ModernAsyncTask$1)'),('android.support.v4.content.ModernAsyncTask.access$200(android.support.v4.content.ModernAsyncTask)'),('android.support.v4.content.ModernAsyncTask.access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object)'),('android.support.v4.content.ModernAsyncTask.access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object)'),('android.support.v4.content.ModernAsyncTask.access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object)'),('android.support.v4.content.ModernAsyncTask.cancel(boolean)'),('android.support.v4.content.ModernAsyncTask.doInBackground(java.lang.Object[])'),('android.support.v4.content.ModernAsyncTask.executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])'),('android.support.v4.content.ModernAsyncTask.finish(java.lang.Object)'),('android.support.v4.content.ModernAsyncTask.init()'),('android.support.v4.content.ModernAsyncTask.isCancelled()'),('android.support.v4.content.ModernAsyncTask.onCancelled()'),('android.support.v4.content.ModernAsyncTask.onCancelled(java.lang.Object)'),('android.support.v4.content.ModernAsyncTask.onPostExecute(java.lang.Object)'),('android.support.v4.content.ModernAsyncTask.onPreExecute()'),('android.support.v4.content.ModernAsyncTask.onProgressUpdate(java.lang.Object[])'),('android.support.v4.content.ModernAsyncTask.postResult(java.lang.Object)'),('android.support.v4.content.ModernAsyncTask.postResultIfNotInvoked(java.lang.Object)'),('android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl.init()'),('android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl.isActiveNetworkMetered(android.net.ConnectivityManager)'),('android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl.init()'),('android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl.init()'),('android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl.init()'),('android.support.v4.net.ConnectivityManagerCompatGingerbread.isActiveNetworkMetered(android.net.ConnectivityManager)'),('android.support.v4.net.ConnectivityManagerCompatHoneycombMR2.isActiveNetworkMetered(android.net.ConnectivityManager)'),('android.support.v4.net.ConnectivityManagerCompatJellyBean.isActiveNetworkMetered(android.net.ConnectivityManager)'),('android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1.init(android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl)'),('android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1.initialValue()'),('android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags.init()'),('android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags.init(android.support.v4.net.TrafficStatsCompat$1)'),('android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl.init()'),('android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl.init()'),('android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl.clearThreadStatsTag()'),('android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl.getThreadStatsTag()'),('android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl.incrementOperationCount(int)'),('android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl.incrementOperationCount(int,int)'),('android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl.setThreadStatsTag(int)'),('android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl.tagSocket(java.net.Socket)'),('android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl.untagSocket(java.net.Socket)'),('android.support.v4.net.TrafficStatsCompatIcs.clearThreadStatsTag()'),('android.support.v4.net.TrafficStatsCompatIcs.getThreadStatsTag()'),('android.support.v4.net.TrafficStatsCompatIcs.incrementOperationCount(int)'),('android.support.v4.net.TrafficStatsCompatIcs.incrementOperationCount(int,int)'),('android.support.v4.net.TrafficStatsCompatIcs.setThreadStatsTag(int)'),('android.support.v4.net.TrafficStatsCompatIcs.tagSocket(java.net.Socket)'),('android.support.v4.net.TrafficStatsCompatIcs.untagSocket(java.net.Socket)'),('android.support.v4.os.ParcelableCompat$CompatCreator.init(android.support.v4.os.ParcelableCompatCreatorCallbacks)'),('android.support.v4.os.ParcelableCompat.newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks)'),('android.support.v4.os.ParcelableCompatCreatorCallbacks.createFromParcel(android.os.Parcel,java.lang.ClassLoader)'),('android.support.v4.os.ParcelableCompatCreatorCallbacks.newArray(int)'),('android.support.v4.os.ParcelableCompatCreatorHoneycombMR2.init(android.support.v4.os.ParcelableCompatCreatorCallbacks)'),('android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub.instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks)'),('android.support.v4.util.AtomicFile.openRead()'),('android.support.v4.util.AtomicFile.sync(java.io.FileOutputStream)'),('android.support.v4.util.DebugUtils.buildShortClassTag(java.lang.Object,java.lang.StringBuilder)'),('android.support.v4.util.LogWriter.flushBuilder()'),('android.support.v4.util.LogWriter.init(java.lang.String)'),('android.support.v4.util.LongSparseArray.binarySearch(long[],int,int,long)'),('android.support.v4.util.LongSparseArray.clone()'),('android.support.v4.util.LongSparseArray.delete(long)'),('android.support.v4.util.LongSparseArray.gc()'),('android.support.v4.util.LongSparseArray.get(long,java.lang.Object)'),('android.support.v4.util.LongSparseArray.idealByteArraySize(int)'),('android.support.v4.util.LongSparseArray.idealLongArraySize(int)'),('android.support.v4.util.LongSparseArray.init(int)'),('android.support.v4.util.LongSparseArray.put(long,java.lang.Object)'),('android.support.v4.util.LruCache.create(java.lang.Object)'),('android.support.v4.util.LruCache.entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)'),('android.support.v4.util.LruCache.safeSizeOf(java.lang.Object,java.lang.Object)'),('android.support.v4.util.LruCache.sizeOf(java.lang.Object,java.lang.Object)'),('android.support.v4.util.LruCache.trimToSize(int)'),('android.support.v4.util.SparseArrayCompat.binarySearch(int[],int,int,int)'),('android.support.v4.util.SparseArrayCompat.clear()'),('android.support.v4.util.SparseArrayCompat.delete(int)'),('android.support.v4.util.SparseArrayCompat.gc()'),('android.support.v4.util.SparseArrayCompat.get(int)'),('android.support.v4.util.SparseArrayCompat.get(int,java.lang.Object)'),('android.support.v4.util.SparseArrayCompat.idealByteArraySize(int)'),('android.support.v4.util.SparseArrayCompat.idealIntArraySize(int)'),('android.support.v4.util.SparseArrayCompat.indexOfKey(int)'),('android.support.v4.util.SparseArrayCompat.init()'),('android.support.v4.util.SparseArrayCompat.init(int)'),('android.support.v4.util.SparseArrayCompat.keyAt(int)'),('android.support.v4.util.SparseArrayCompat.put(int,java.lang.Object)'),('android.support.v4.util.SparseArrayCompat.remove(int)'),('android.support.v4.util.SparseArrayCompat.removeAt(int)'),('android.support.v4.util.SparseArrayCompat.size()'),('android.support.v4.util.SparseArrayCompat.valueAt(int)'),('android.support.v4.util.TimeUtils.accumField(int,int,boolean,int)'),('android.support.v4.util.TimeUtils.formatDuration(long,java.io.PrintWriter)'),('android.support.v4.util.TimeUtils.formatDuration(long,java.io.PrintWriter,int)'),('android.support.v4.util.TimeUtils.formatDuration(long,long,java.io.PrintWriter)'),('android.support.v4.util.TimeUtils.formatDurationLocked(long,int)'),('android.support.v4.util.TimeUtils.printField(char[],int,char,int,boolean,int)'),('android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl.init()'),('android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl.init()'),('android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl.appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl.getRecord(android.view.accessibility.AccessibilityEvent,int)'),('android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl.getRecordCount(android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.accessibility.AccessibilityEventCompatIcs.appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityEventCompatIcs.getRecord(android.view.accessibility.AccessibilityEvent,int)'),('android.support.v4.view.accessibility.AccessibilityEventCompatIcs.getRecordCount(android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1.init(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl.init()'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl.init()'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl.addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl.getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl.getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl.isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl.newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl.removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat.onAccessibilityStateChanged(boolean)'),('android.support.v4.view.accessibility.AccessibilityManagerCompat.access$000()'),('android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1.init(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge)'),('android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge.onAccessibilityStateChanged(boolean)'),('android.support.v4.view.accessibility.AccessibilityManagerCompatIcs.addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityManagerCompatIcs.getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)'),('android.support.v4.view.accessibility.AccessibilityManagerCompatIcs.getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)'),('android.support.v4.view.accessibility.AccessibilityManagerCompatIcs.isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)'),('android.support.v4.view.accessibility.AccessibilityManagerCompatIcs.newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge)'),('android.support.v4.view.accessibility.AccessibilityManagerCompatIcs.removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl.init()'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.addAction(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.addChild(java.lang.Object,android.view.View)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.addChild(java.lang.Object,android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.findFocus(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.focusSearch(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getActions(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getBoundsInParent(java.lang.Object,android.graphics.Rect)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getBoundsInScreen(java.lang.Object,android.graphics.Rect)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getChild(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getChildCount(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getClassName(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getContentDescription(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getMovementGranularities(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getPackageName(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getParent(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getText(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.getWindowId(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isAccessibilityFocused(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isCheckable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isChecked(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isClickable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isEnabled(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isFocusable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isFocused(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isLongClickable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isPassword(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isScrollable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isSelected(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.isVisibleToUser(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.obtain()'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.obtain(android.view.View)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.obtain(android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.obtain(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.performAction(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.performAction(java.lang.Object,int,android.os.Bundle)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.recycle(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setAccessibilityFocused(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setBoundsInParent(java.lang.Object,android.graphics.Rect)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setBoundsInScreen(java.lang.Object,android.graphics.Rect)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setCheckable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setChecked(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setClassName(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setClickable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setContentDescription(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setEnabled(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setFocusable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setFocused(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setLongClickable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setMovementGranularities(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setPackageName(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setParent(java.lang.Object,android.view.View)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setParent(java.lang.Object,android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setPassword(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setScrollable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setSelected(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setSource(java.lang.Object,android.view.View)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setSource(java.lang.Object,android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setText(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl.setVisibleToUser(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl.init()'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl.init()'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.addAction(int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.getInfo()'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.init(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.wrapNonNullInstance(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.addAction(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.addChild(java.lang.Object,android.view.View)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getActions(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getBoundsInParent(java.lang.Object,android.graphics.Rect)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getBoundsInScreen(java.lang.Object,android.graphics.Rect)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getChild(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getChildCount(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getClassName(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getContentDescription(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getPackageName(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getParent(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getText(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.getWindowId(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isCheckable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isChecked(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isClickable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isEnabled(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isFocusable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isFocused(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isLongClickable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isPassword(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isScrollable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.isSelected(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.obtain()'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.obtain(android.view.View)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.obtain(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.performAction(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.recycle(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setBoundsInParent(java.lang.Object,android.graphics.Rect)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setBoundsInScreen(java.lang.Object,android.graphics.Rect)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setCheckable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setChecked(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setClassName(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setClickable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setContentDescription(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setEnabled(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setFocusable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setFocused(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setLongClickable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setPackageName(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setParent(java.lang.Object,android.view.View)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setPassword(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setScrollable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setSelected(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setSource(java.lang.Object,android.view.View)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs.setText(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.addChild(java.lang.Object,android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.findFocus(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.focusSearch(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.getMovementGranularities(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.isAccessibilityFocused(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.isVisibleToUser(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.obtain(android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.performAction(java.lang.Object,int,android.os.Bundle)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setAccesibilityFocused(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setMovementGranularities(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setParent(java.lang.Object,android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setSource(java.lang.Object,android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean.setVisibleToUser(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl.newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1.init(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl,android.support.v4.view.accessibility.AccessibilityNodeProviderCompat)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl.init()'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl.init()'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.createAccessibilityNodeInfo(int)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.findAccessibilityNodeInfosByText(java.lang.String,int)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.getProvider()'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.init(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompat.performAction(int,int,android.os.Bundle)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1.init(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge.createAccessibilityNodeInfo(int)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge.findAccessibilityNodeInfosByText(java.lang.String,int)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge.performAction(int,int,android.os.Bundle)'),('android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean.newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl.init()'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl.init()'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getAddedCount(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getBeforeText(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getClassName(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getContentDescription(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getCurrentItemIndex(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getFromIndex(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getItemCount(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getMaxScrollX(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getMaxScrollY(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getParcelableData(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getRemovedCount(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getScrollX(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getScrollY(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getSource(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getText(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getToIndex(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.getWindowId(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.isChecked(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.isEnabled(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.isFullScreen(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.isPassword(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.isScrollable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.obtain()'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.obtain(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.recycle(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setAddedCount(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setBeforeText(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setChecked(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setClassName(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setContentDescription(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setCurrentItemIndex(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setEnabled(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setFromIndex(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setFullScreen(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setItemCount(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setMaxScrollX(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setMaxScrollY(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setParcelableData(java.lang.Object,android.os.Parcelable)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setPassword(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setRemovedCount(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setScrollable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setScrollX(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setScrollY(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setSource(java.lang.Object,android.view.View)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setSource(java.lang.Object,android.view.View,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl.setToIndex(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl.init()'),('android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl.init()'),('android.support.v4.view.accessibility.AccessibilityRecordCompat.getImpl()'),('android.support.v4.view.accessibility.AccessibilityRecordCompat.init(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getAddedCount(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getBeforeText(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getClassName(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getContentDescription(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getCurrentItemIndex(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getFromIndex(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getItemCount(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getParcelableData(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getRemovedCount(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getScrollX(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getScrollY(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getSource(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getText(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getToIndex(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.getWindowId(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.isChecked(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.isEnabled(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.isFullScreen(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.isPassword(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.isScrollable(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.obtain()'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.obtain(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.recycle(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setAddedCount(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setBeforeText(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setChecked(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setClassName(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setContentDescription(java.lang.Object,java.lang.CharSequence)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setCurrentItemIndex(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setEnabled(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setFromIndex(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setFullScreen(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setItemCount(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setParcelableData(java.lang.Object,android.os.Parcelable)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setPassword(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setRemovedCount(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setScrollable(java.lang.Object,boolean)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setScrollX(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setScrollY(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setSource(java.lang.Object,android.view.View)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcs.setToIndex(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1.getMaxScrollX(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1.getMaxScrollY(java.lang.Object)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1.setMaxScrollX(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1.setMaxScrollY(java.lang.Object,int)'),('android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean.setSource(java.lang.Object,android.view.View,int)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1.init(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl.init()'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.getAccessibilityNodeProvider(java.lang.Object,android.view.View)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.newAccessiblityDelegateDefaultImpl()'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.sendAccessibilityEvent(java.lang.Object,android.view.View,int)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl.sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1.init(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat)'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl.init()'),('android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl.init()'),('android.support.v4.view.AccessibilityDelegateCompat.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat.getAccessibilityNodeProvider(android.view.View)'),('android.support.v4.view.AccessibilityDelegateCompat.getBridge()'),('android.support.v4.view.AccessibilityDelegateCompat.init()'),('android.support.v4.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)'),('android.support.v4.view.AccessibilityDelegateCompat.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompat.performAccessibilityAction(android.view.View,int,android.os.Bundle)'),('android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEvent(android.view.View,int)'),('android.support.v4.view.AccessibilityDelegateCompat.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs$1.init(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)'),('android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge.onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)'),('android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge.sendAccessibilityEvent(android.view.View,int)'),('android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs.dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs.newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)'),('android.support.v4.view.AccessibilityDelegateCompatIcs.newAccessibilityDelegateDefaultImpl()'),('android.support.v4.view.AccessibilityDelegateCompatIcs.onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs.onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object)'),('android.support.v4.view.AccessibilityDelegateCompatIcs.onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs.onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatIcs.sendAccessibilityEvent(java.lang.Object,android.view.View,int)'),('android.support.v4.view.AccessibilityDelegateCompatIcs.sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$1.init(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.getAccessibilityNodeProvider(android.view.View)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.performAccessibilityAction(android.view.View,int,android.os.Bundle)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.sendAccessibilityEvent(android.view.View,int)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean.getAccessibilityNodeProvider(java.lang.Object,android.view.View)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean.newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)'),('android.support.v4.view.AccessibilityDelegateCompatJellyBean.performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl.isLongpressEnabled()'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl.onTouchEvent(android.view.MotionEvent)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl.setIsLongpressEnabled(boolean)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl.setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler.init(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler.init(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.cancel()'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.cancelTaps()'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.dispatchLongPress()'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.init(android.content.Context)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.init(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase.setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)'),('android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1.init(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)'),('android.support.v4.view.GestureDetectorCompat.init(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)'),('android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl.init()'),('android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl.metaStateFilterDirectionalModifiers(int,int,int,int,int)'),('android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl.normalizeMetaState(int)'),('android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl.init()'),('android.support.v4.view.KeyEventCompat$KeyEventVersionImpl.metaStateHasModifiers(int,int)'),('android.support.v4.view.KeyEventCompat$KeyEventVersionImpl.metaStateHasNoModifiers(int)'),('android.support.v4.view.KeyEventCompat$KeyEventVersionImpl.normalizeMetaState(int)'),('android.support.v4.view.KeyEventCompat.hasModifiers(android.view.KeyEvent,int)'),('android.support.v4.view.KeyEventCompat.hasNoModifiers(android.view.KeyEvent)'),('android.support.v4.view.KeyEventCompatHoneycomb.metaStateHasModifiers(int,int)'),('android.support.v4.view.KeyEventCompatHoneycomb.metaStateHasNoModifiers(int)'),('android.support.v4.view.KeyEventCompatHoneycomb.normalizeMetaState(int)'),('android.support.v4.view.MenuCompat$BaseMenuVersionImpl.init()'),('android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl.init()'),('android.support.v4.view.MenuCompat$MenuVersionImpl.setShowAsAction(android.view.MenuItem,int)'),('android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl.init()'),('android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl.init()'),('android.support.v4.view.MenuItemCompat$MenuVersionImpl.setActionView(android.view.MenuItem,android.view.View)'),('android.support.v4.view.MenuItemCompat$MenuVersionImpl.setShowAsAction(android.view.MenuItem,int)'),('android.support.v4.view.MenuItemCompatHoneycomb.setActionView(android.view.MenuItem,android.view.View)'),('android.support.v4.view.MenuItemCompatHoneycomb.setShowAsAction(android.view.MenuItem,int)'),('android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl.init()'),('android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl.init()'),('android.support.v4.view.MotionEventCompat$MotionEventVersionImpl.findPointerIndex(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompat$MotionEventVersionImpl.getPointerCount(android.view.MotionEvent)'),('android.support.v4.view.MotionEventCompat$MotionEventVersionImpl.getPointerId(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompat$MotionEventVersionImpl.getX(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompat$MotionEventVersionImpl.getY(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompat.findPointerIndex(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompat.getActionIndex(android.view.MotionEvent)'),('android.support.v4.view.MotionEventCompat.getPointerCount(android.view.MotionEvent)'),('android.support.v4.view.MotionEventCompat.getPointerId(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompat.getX(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompat.getY(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompatEclair.findPointerIndex(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompatEclair.getPointerCount(android.view.MotionEvent)'),('android.support.v4.view.MotionEventCompatEclair.getPointerId(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompatEclair.getX(android.view.MotionEvent,int)'),('android.support.v4.view.MotionEventCompatEclair.getY(android.view.MotionEvent,int)'),('android.support.v4.view.PagerAdapter.destroyItem(android.view.View,int,java.lang.Object)'),('android.support.v4.view.PagerAdapter.destroyItem(android.view.ViewGroup,int,java.lang.Object)'),('android.support.v4.view.PagerAdapter.finishUpdate(android.view.View)'),('android.support.v4.view.PagerAdapter.finishUpdate(android.view.ViewGroup)'),('android.support.v4.view.PagerAdapter.getCount()'),('android.support.v4.view.PagerAdapter.getItemPosition(java.lang.Object)'),('android.support.v4.view.PagerAdapter.getPageTitle(int)'),('android.support.v4.view.PagerAdapter.getPageWidth(int)'),('android.support.v4.view.PagerAdapter.init()'),('android.support.v4.view.PagerAdapter.instantiateItem(android.view.View,int)'),('android.support.v4.view.PagerAdapter.instantiateItem(android.view.ViewGroup,int)'),('android.support.v4.view.PagerAdapter.isViewFromObject(android.view.View,java.lang.Object)'),('android.support.v4.view.PagerAdapter.registerDataSetObserver(android.database.DataSetObserver)'),('android.support.v4.view.PagerAdapter.restoreState(android.os.Parcelable,java.lang.ClassLoader)'),('android.support.v4.view.PagerAdapter.saveState()'),('android.support.v4.view.PagerAdapter.setPrimaryItem(android.view.View,int,java.lang.Object)'),('android.support.v4.view.PagerAdapter.setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)'),('android.support.v4.view.PagerAdapter.startUpdate(android.view.View)'),('android.support.v4.view.PagerAdapter.startUpdate(android.view.ViewGroup)'),('android.support.v4.view.PagerAdapter.unregisterDataSetObserver(android.database.DataSetObserver)'),('android.support.v4.view.PagerTabStrip$1.init(android.support.v4.view.PagerTabStrip)'),('android.support.v4.view.PagerTabStrip$2.init(android.support.v4.view.PagerTabStrip)'),('android.support.v4.view.PagerTabStrip.init(android.content.Context,android.util.AttributeSet)'),('android.support.v4.view.PagerTabStrip.setPadding(int,int,int,int)'),('android.support.v4.view.PagerTabStrip.setTabIndicatorColor(int)'),('android.support.v4.view.PagerTabStrip.setTextSpacing(int)'),('android.support.v4.view.PagerTitleStrip$PageListener.init(android.support.v4.view.PagerTitleStrip)'),('android.support.v4.view.PagerTitleStrip$PageListener.init(android.support.v4.view.PagerTitleStrip,android.support.v4.view.PagerTitleStrip$1)'),('android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl.setSingleLineAllCaps(android.widget.TextView)'),('android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase.init()'),('android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs.init()'),('android.support.v4.view.PagerTitleStrip.access$100(android.support.v4.view.PagerTitleStrip)'),('android.support.v4.view.PagerTitleStrip.getMinHeight()'),('android.support.v4.view.PagerTitleStrip.getTextSpacing()'),('android.support.v4.view.PagerTitleStrip.init(android.content.Context,android.util.AttributeSet)'),('android.support.v4.view.PagerTitleStrip.requestLayout()'),('android.support.v4.view.PagerTitleStrip.setNonPrimaryAlpha(float)'),('android.support.v4.view.PagerTitleStrip.setSingleLineAllCaps(android.widget.TextView)'),('android.support.v4.view.PagerTitleStrip.setTextSize(int,float)'),('android.support.v4.view.PagerTitleStrip.setTextSpacing(int)'),('android.support.v4.view.PagerTitleStrip.updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)'),('android.support.v4.view.PagerTitleStrip.updateText(int,android.support.v4.view.PagerAdapter)'),('android.support.v4.view.PagerTitleStrip.updateTextPositions(int,float,boolean)'),('android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform.init(android.content.Context)'),('android.support.v4.view.PagerTitleStripIcs.setSingleLineAllCaps(android.widget.TextView)'),('android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl.init()'),('android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl.init()'),('android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl.getXVelocity(android.view.VelocityTracker,int)'),('android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl.getYVelocity(android.view.VelocityTracker,int)'),('android.support.v4.view.VelocityTrackerCompat.getXVelocity(android.view.VelocityTracker,int)'),('android.support.v4.view.VelocityTrackerCompat.getYVelocity(android.view.VelocityTracker,int)'),('android.support.v4.view.VelocityTrackerCompatHoneycomb.getXVelocity(android.view.VelocityTracker,int)'),('android.support.v4.view.VelocityTrackerCompatHoneycomb.getYVelocity(android.view.VelocityTracker,int)'),('android.support.v4.view.ViewCompat$BaseViewCompatImpl.getFrameTime()'),('android.support.v4.view.ViewCompat$BaseViewCompatImpl.init()'),('android.support.v4.view.ViewCompat$GBViewCompatImpl.init()'),('android.support.v4.view.ViewCompat$HCViewCompatImpl.init()'),('android.support.v4.view.ViewCompat$ICSViewCompatImpl.init()'),('android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl.init()'),('android.support.v4.view.ViewCompat$JBViewCompatImpl.init()'),('android.support.v4.view.ViewCompat$ViewCompatImpl.canScrollHorizontally(android.view.View,int)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.canScrollVertically(android.view.View,int)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.getAccessibilityNodeProvider(android.view.View)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.getImportantForAccessibility(android.view.View)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.getLabelFor(android.view.View)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.getLayerType(android.view.View)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.getOverScrollMode(android.view.View)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.hasTransientState(android.view.View)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.performAccessibilityAction(android.view.View,int,android.os.Bundle)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.postInvalidateOnAnimation(android.view.View)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.postInvalidateOnAnimation(android.view.View,int,int,int,int)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.postOnAnimation(android.view.View,java.lang.Runnable)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.setHasTransientState(android.view.View,boolean)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.setImportantForAccessibility(android.view.View,int)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.setLabelFor(android.view.View,int)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.setLayerType(android.view.View,int,android.graphics.Paint)'),('android.support.v4.view.ViewCompat$ViewCompatImpl.setOverScrollMode(android.view.View,int)'),('android.support.v4.view.ViewCompat.canScrollHorizontally(android.view.View,int)'),('android.support.v4.view.ViewCompat.getImportantForAccessibility(android.view.View)'),('android.support.v4.view.ViewCompat.getOverScrollMode(android.view.View)'),('android.support.v4.view.ViewCompat.postInvalidateOnAnimation(android.view.View)'),('android.support.v4.view.ViewCompat.postOnAnimation(android.view.View,java.lang.Runnable)'),('android.support.v4.view.ViewCompat.setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)'),('android.support.v4.view.ViewCompat.setImportantForAccessibility(android.view.View,int)'),('android.support.v4.view.ViewCompat.setLayerType(android.view.View,int,android.graphics.Paint)'),('android.support.v4.view.ViewCompatGingerbread.getOverScrollMode(android.view.View)'),('android.support.v4.view.ViewCompatGingerbread.setOverScrollMode(android.view.View,int)'),('android.support.v4.view.ViewCompatHC.getFrameTime()'),('android.support.v4.view.ViewCompatHC.getLayerType(android.view.View)'),('android.support.v4.view.ViewCompatHC.setLayerType(android.view.View,int,android.graphics.Paint)'),('android.support.v4.view.ViewCompatICS.canScrollHorizontally(android.view.View,int)'),('android.support.v4.view.ViewCompatICS.canScrollVertically(android.view.View,int)'),('android.support.v4.view.ViewCompatICS.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.ViewCompatICS.onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object)'),('android.support.v4.view.ViewCompatICS.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.ViewCompatICS.setAccessibilityDelegate(android.view.View,java.lang.Object)'),('android.support.v4.view.ViewCompatJB.getAccessibilityNodeProvider(android.view.View)'),('android.support.v4.view.ViewCompatJB.getImportantForAccessibility(android.view.View)'),('android.support.v4.view.ViewCompatJB.hasTransientState(android.view.View)'),('android.support.v4.view.ViewCompatJB.performAccessibilityAction(android.view.View,int,android.os.Bundle)'),('android.support.v4.view.ViewCompatJB.postInvalidateOnAnimation(android.view.View)'),('android.support.v4.view.ViewCompatJB.postInvalidateOnAnimation(android.view.View,int,int,int,int)'),('android.support.v4.view.ViewCompatJB.postOnAnimation(android.view.View,java.lang.Runnable)'),('android.support.v4.view.ViewCompatJB.postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)'),('android.support.v4.view.ViewCompatJB.setHasTransientState(android.view.View,boolean)'),('android.support.v4.view.ViewCompatJB.setImportantForAccessibility(android.view.View,int)'),('android.support.v4.view.ViewCompatJellybeanMr1.getLabelFor(android.view.View)'),('android.support.v4.view.ViewCompatJellybeanMr1.setLabelFor(android.view.View,int)'),('android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl.init()'),('android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl.init()'),('android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl.getScaledPagingTouchSlop(android.view.ViewConfiguration)'),('android.support.v4.view.ViewConfigurationCompat.getScaledPagingTouchSlop(android.view.ViewConfiguration)'),('android.support.v4.view.ViewConfigurationCompatFroyo.getScaledPagingTouchSlop(android.view.ViewConfiguration)'),('android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl.init()'),('android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl.init()'),('android.support.v4.view.ViewGroupCompatIcs.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.support.v4.view.ViewPager$1.compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo)'),('android.support.v4.view.ViewPager$1.init()'),('android.support.v4.view.ViewPager$2.init()'),('android.support.v4.view.ViewPager$3.init(android.support.v4.view.ViewPager)'),('android.support.v4.view.ViewPager$ItemInfo.init()'),('android.support.v4.view.ViewPager$LayoutParams.init()'),('android.support.v4.view.ViewPager$LayoutParams.init(android.content.Context,android.util.AttributeSet)'),('android.support.v4.view.ViewPager$MyAccessibilityDelegate.init(android.support.v4.view.ViewPager)'),('android.support.v4.view.ViewPager$OnAdapterChangeListener.onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)'),('android.support.v4.view.ViewPager$OnPageChangeListener.onPageScrolled(int,float,int)'),('android.support.v4.view.ViewPager$OnPageChangeListener.onPageScrollStateChanged(int)'),('android.support.v4.view.ViewPager$OnPageChangeListener.onPageSelected(int)'),('android.support.v4.view.ViewPager$PagerObserver.init(android.support.v4.view.ViewPager)'),('android.support.v4.view.ViewPager$PagerObserver.init(android.support.v4.view.ViewPager,android.support.v4.view.ViewPager$1)'),('android.support.v4.view.ViewPager$PageTransformer.transformPage(android.view.View,float)'),('android.support.v4.view.ViewPager$SavedState$1.createFromParcel(android.os.Parcel,java.lang.ClassLoader)'),('android.support.v4.view.ViewPager$SavedState$1.init()'),('android.support.v4.view.ViewPager$SavedState$1.newArray(int)'),('android.support.v4.view.ViewPager$SavedState.init(android.os.Parcel,java.lang.ClassLoader)'),('android.support.v4.view.ViewPager$SavedState.init(android.os.Parcelable)'),('android.support.v4.view.ViewPager$ViewPositionComparator.compare(android.view.View,android.view.View)'),('android.support.v4.view.ViewPager$ViewPositionComparator.init()'),('android.support.v4.view.ViewPager.access$000(android.support.v4.view.ViewPager,int)'),('android.support.v4.view.ViewPager.access$200(android.support.v4.view.ViewPager)'),('android.support.v4.view.ViewPager.access$300(android.support.v4.view.ViewPager)'),('android.support.v4.view.ViewPager.access$400()'),('android.support.v4.view.ViewPager.addNewItem(int,int)'),('android.support.v4.view.ViewPager.arrowScroll(int)'),('android.support.v4.view.ViewPager.calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)'),('android.support.v4.view.ViewPager.canScroll(android.view.View,boolean,int,int,int)'),('android.support.v4.view.ViewPager.checkLayoutParams(android.view.ViewGroup$LayoutParams)'),('android.support.v4.view.ViewPager.completeScroll(boolean)'),('android.support.v4.view.ViewPager.dataSetChanged()'),('android.support.v4.view.ViewPager.determineTargetPage(int,float,int,int)'),('android.support.v4.view.ViewPager.distanceInfluenceForSnapDuration(float)'),('android.support.v4.view.ViewPager.enableLayers(boolean)'),('android.support.v4.view.ViewPager.endDrag()'),('android.support.v4.view.ViewPager.executeKeyEvent(android.view.KeyEvent)'),('android.support.v4.view.ViewPager.generateDefaultLayoutParams()'),('android.support.v4.view.ViewPager.generateLayoutParams(android.view.ViewGroup$LayoutParams)'),('android.support.v4.view.ViewPager.getAdapter()'),('android.support.v4.view.ViewPager.getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)'),('android.support.v4.view.ViewPager.getCurrentItem()'),('android.support.v4.view.ViewPager.infoForAnyChild(android.view.View)'),('android.support.v4.view.ViewPager.infoForChild(android.view.View)'),('android.support.v4.view.ViewPager.infoForCurrentScrollPosition()'),('android.support.v4.view.ViewPager.infoForPosition(int)'),('android.support.v4.view.ViewPager.initViewPager()'),('android.support.v4.view.ViewPager.isGutterDrag(float,float)'),('android.support.v4.view.ViewPager.onPageScrolled(int,float,int)'),('android.support.v4.view.ViewPager.onSecondaryPointerUp(android.view.MotionEvent)'),('android.support.v4.view.ViewPager.pageLeft()'),('android.support.v4.view.ViewPager.pageRight()'),('android.support.v4.view.ViewPager.pageScrolled(int)'),('android.support.v4.view.ViewPager.performDrag(float)'),('android.support.v4.view.ViewPager.populate()'),('android.support.v4.view.ViewPager.populate(int)'),('android.support.v4.view.ViewPager.recomputeScrollPosition(int,int,int,int)'),('android.support.v4.view.ViewPager.removeNonDecorViews()'),('android.support.v4.view.ViewPager.scrollToItem(int,boolean,int,boolean)'),('android.support.v4.view.ViewPager.setChildrenDrawingOrderEnabledCompat(boolean)'),('android.support.v4.view.ViewPager.setCurrentItem(int)'),('android.support.v4.view.ViewPager.setCurrentItem(int,boolean)'),('android.support.v4.view.ViewPager.setCurrentItemInternal(int,boolean,boolean)'),('android.support.v4.view.ViewPager.setCurrentItemInternal(int,boolean,boolean,int)'),('android.support.v4.view.ViewPager.setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)'),('android.support.v4.view.ViewPager.setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)'),('android.support.v4.view.ViewPager.setPageMarginDrawable(android.graphics.drawable.Drawable)'),('android.support.v4.view.ViewPager.setScrollingCacheEnabled(boolean)'),('android.support.v4.view.ViewPager.setScrollState(int)'),('android.support.v4.view.ViewPager.smoothScrollTo(int,int,int)'),('android.support.v4.widget.CursorAdapter$ChangeObserver.init(android.support.v4.widget.CursorAdapter)'),('android.support.v4.widget.CursorAdapter$MyDataSetObserver.init(android.support.v4.widget.CursorAdapter)'),('android.support.v4.widget.CursorAdapter$MyDataSetObserver.init(android.support.v4.widget.CursorAdapter,android.support.v4.widget.CursorAdapter$1)'),('android.support.v4.widget.CursorAdapter.bindView(android.view.View,android.content.Context,android.database.Cursor)'),('android.support.v4.widget.CursorAdapter.changeCursor(android.database.Cursor)'),('android.support.v4.widget.CursorAdapter.convertToString(android.database.Cursor)'),('android.support.v4.widget.CursorAdapter.init(android.content.Context,android.database.Cursor)'),('android.support.v4.widget.CursorAdapter.init(android.content.Context,android.database.Cursor,boolean)'),('android.support.v4.widget.CursorAdapter.init(android.content.Context,android.database.Cursor,int)'),('android.support.v4.widget.CursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)'),('android.support.v4.widget.CursorAdapter.newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)'),('android.support.v4.widget.CursorAdapter.onContentChanged()'),('android.support.v4.widget.CursorAdapter.swapCursor(android.database.Cursor)'),('android.support.v4.widget.CursorFilter$CursorFilterClient.changeCursor(android.database.Cursor)'),('android.support.v4.widget.CursorFilter$CursorFilterClient.convertToString(android.database.Cursor)'),('android.support.v4.widget.CursorFilter$CursorFilterClient.getCursor()'),('android.support.v4.widget.CursorFilter$CursorFilterClient.runQueryOnBackgroundThread(java.lang.CharSequence)'),('android.support.v4.widget.CursorFilter.init(android.support.v4.widget.CursorFilter$CursorFilterClient)'),('android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl.init()'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl.init()'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl.draw(java.lang.Object,android.graphics.Canvas)'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl.finish(java.lang.Object)'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl.isFinished(java.lang.Object)'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl.newEdgeEffect(android.content.Context)'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl.onAbsorb(java.lang.Object,int)'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl.onPull(java.lang.Object,float)'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl.onRelease(java.lang.Object)'),('android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl.setSize(java.lang.Object,int,int)'),('android.support.v4.widget.EdgeEffectCompat.draw(android.graphics.Canvas)'),('android.support.v4.widget.EdgeEffectCompat.finish()'),('android.support.v4.widget.EdgeEffectCompat.init(android.content.Context)'),('android.support.v4.widget.EdgeEffectCompat.isFinished()'),('android.support.v4.widget.EdgeEffectCompat.onPull(float)'),('android.support.v4.widget.EdgeEffectCompat.onRelease()'),('android.support.v4.widget.EdgeEffectCompat.setSize(int,int)'),('android.support.v4.widget.EdgeEffectCompatIcs.draw(java.lang.Object,android.graphics.Canvas)'),('android.support.v4.widget.EdgeEffectCompatIcs.finish(java.lang.Object)'),('android.support.v4.widget.EdgeEffectCompatIcs.isFinished(java.lang.Object)'),('android.support.v4.widget.EdgeEffectCompatIcs.newEdgeEffect(android.content.Context)'),('android.support.v4.widget.EdgeEffectCompatIcs.onAbsorb(java.lang.Object,int)'),('android.support.v4.widget.EdgeEffectCompatIcs.onPull(java.lang.Object,float)'),('android.support.v4.widget.EdgeEffectCompatIcs.onRelease(java.lang.Object)'),('android.support.v4.widget.EdgeEffectCompatIcs.setSize(java.lang.Object,int,int)'),('android.support.v4.widget.ResourceCursorAdapter.init(android.content.Context,int,android.database.Cursor)'),('android.support.v4.widget.ResourceCursorAdapter.init(android.content.Context,int,android.database.Cursor,int)'),('android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs.init(android.content.Context)'),('android.support.v4.widget.ScrollerCompat.init(android.content.Context)'),('android.support.v4.widget.ScrollerCompatIcs.getCurrVelocity(android.widget.Scroller)'),('android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat.onClose()'),('android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat.onQueryTextChange(java.lang.String)'),('android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat.onQueryTextSubmit(java.lang.String)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1.init(android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2.init(android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl.init()'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl.init()'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.getQuery(android.view.View)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.isIconified(android.view.View)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.isQueryRefinementEnabled(android.view.View)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.isSubmitButtonEnabled(android.view.View)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.newSearchView(android.content.Context)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setIconified(android.view.View,boolean)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setImeOptions(android.view.View,int)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setInputType(android.view.View,int)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setMaxWidth(android.view.View,int)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setOnCloseListener(java.lang.Object,java.lang.Object)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setOnQueryTextListener(java.lang.Object,java.lang.Object)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setQuery(android.view.View,java.lang.CharSequence,boolean)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setQueryHint(android.view.View,java.lang.CharSequence)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setQueryRefinementEnabled(android.view.View,boolean)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setSearchableInfo(android.view.View,android.content.ComponentName)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl.setSubmitButtonEnabled(android.view.View,boolean)'),('android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl.init()'),('android.support.v4.widget.SearchViewCompat.access$000()'),('android.support.v4.widget.SearchViewCompatHoneycomb$1.init(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge)'),('android.support.v4.widget.SearchViewCompatHoneycomb$2.init(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge)'),('android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge.onClose()'),('android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge.onQueryTextChange(java.lang.String)'),('android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge.onQueryTextSubmit(java.lang.String)'),('android.support.v4.widget.SearchViewCompatHoneycomb.getQuery(android.view.View)'),('android.support.v4.widget.SearchViewCompatHoneycomb.isIconified(android.view.View)'),('android.support.v4.widget.SearchViewCompatHoneycomb.isQueryRefinementEnabled(android.view.View)'),('android.support.v4.widget.SearchViewCompatHoneycomb.isSubmitButtonEnabled(android.view.View)'),('android.support.v4.widget.SearchViewCompatHoneycomb.newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge)'),('android.support.v4.widget.SearchViewCompatHoneycomb.newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge)'),('android.support.v4.widget.SearchViewCompatHoneycomb.newSearchView(android.content.Context)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setIconified(android.view.View,boolean)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setMaxWidth(android.view.View,int)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setOnCloseListener(java.lang.Object,java.lang.Object)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setOnQueryTextListener(java.lang.Object,java.lang.Object)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setQuery(android.view.View,java.lang.CharSequence,boolean)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setQueryHint(android.view.View,java.lang.CharSequence)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setQueryRefinementEnabled(android.view.View,boolean)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setSearchableInfo(android.view.View,android.content.ComponentName)'),('android.support.v4.widget.SearchViewCompatHoneycomb.setSubmitButtonEnabled(android.view.View,boolean)'),('android.support.v4.widget.SearchViewCompatIcs$MySearchView.init(android.content.Context)'),('android.support.v4.widget.SearchViewCompatIcs.newSearchView(android.content.Context)'),('android.support.v4.widget.SearchViewCompatIcs.setImeOptions(android.view.View,int)'),('android.support.v4.widget.SearchViewCompatIcs.setInputType(android.view.View,int)'),('android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter.convertToString(android.database.Cursor)'),('android.support.v4.widget.SimpleCursorAdapter$ViewBinder.setViewValue(android.view.View,android.database.Cursor,int)'),('android.support.v4.widget.SimpleCursorAdapter.findColumns(java.lang.String[])'),('android.support.v4.widget.SimpleCursorAdapter.setViewImage(android.widget.ImageView,java.lang.String)'),('android.support.v4.widget.SimpleCursorAdapter.setViewText(android.widget.TextView,java.lang.String)'),('android.text.Html.escapeHtml(java.lang.CharSequence)'),('android.text.Html.fromHtml(java.lang.String)'),('android.text.Html.toHtml(android.text.Spanned)'),('android.text.method.ReplacementTransformationMethod.getTransformation(java.lang.CharSequence,android.view.View)'),('android.text.method.SingleLineTransformationMethod.init()'),('android.text.TextUtils.isEmpty(java.lang.CharSequence)'),('android.text.TextUtils.writeToParcel(java.lang.CharSequence,android.os.Parcel,int)'),('android.util.AndroidRuntimeException.init(java.lang.String)'),('android.util.AttributeSet.getAttributeValue(java.lang.String,java.lang.String)'),('android.util.AttributeSet.getPositionDescription()'),('android.util.Log.d(java.lang.String,java.lang.String)'),('android.util.Log.e(java.lang.String,java.lang.String)'),('android.util.Log.e(java.lang.String,java.lang.String,java.lang.Throwable)'),('android.util.Log.i(java.lang.String,java.lang.String)'),('android.util.Log.v(java.lang.String,java.lang.String)'),('android.util.Log.w(java.lang.String,java.lang.String)'),('android.util.Log.w(java.lang.String,java.lang.String,java.lang.Throwable)'),('android.util.Log.w(java.lang.String,java.lang.Throwable)'),('android.util.SparseArray.clear()'),('android.util.SparseArray.init()'),('android.util.SparseArray.size()'),('android.view.AbsSavedState.getSuperState()'),('android.view.AbsSavedState.writeToParcel(android.os.Parcel,int)'),('android.view.accessibility.AccessibilityEvent.appendRecord(android.view.accessibility.AccessibilityRecord)'),('android.view.accessibility.AccessibilityEvent.getRecord(int)'),('android.view.accessibility.AccessibilityEvent.getRecordCount()'),('android.view.accessibility.AccessibilityManager.addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)'),('android.view.accessibility.AccessibilityManager.getEnabledAccessibilityServiceList(int)'),('android.view.accessibility.AccessibilityManager.getInstalledAccessibilityServiceList()'),('android.view.accessibility.AccessibilityManager.isTouchExplorationEnabled()'),('android.view.accessibility.AccessibilityManager.removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)'),('android.view.accessibility.AccessibilityNodeInfo.addAction(int)'),('android.view.accessibility.AccessibilityNodeInfo.addChild(android.view.View)'),('android.view.accessibility.AccessibilityNodeInfo.addChild(android.view.View,int)'),('android.view.accessibility.AccessibilityNodeInfo.findAccessibilityNodeInfosByText(java.lang.String)'),('android.view.accessibility.AccessibilityNodeInfo.findFocus(int)'),('android.view.accessibility.AccessibilityNodeInfo.focusSearch(int)'),('android.view.accessibility.AccessibilityNodeInfo.getActions()'),('android.view.accessibility.AccessibilityNodeInfo.getBoundsInParent(android.graphics.Rect)'),('android.view.accessibility.AccessibilityNodeInfo.getBoundsInScreen(android.graphics.Rect)'),('android.view.accessibility.AccessibilityNodeInfo.getChild(int)'),('android.view.accessibility.AccessibilityNodeInfo.getChildCount()'),('android.view.accessibility.AccessibilityNodeInfo.getClassName()'),('android.view.accessibility.AccessibilityNodeInfo.getContentDescription()'),('android.view.accessibility.AccessibilityNodeInfo.getMovementGranularities()'),('android.view.accessibility.AccessibilityNodeInfo.getPackageName()'),('android.view.accessibility.AccessibilityNodeInfo.getParent()'),('android.view.accessibility.AccessibilityNodeInfo.getText()'),('android.view.accessibility.AccessibilityNodeInfo.getWindowId()'),('android.view.accessibility.AccessibilityNodeInfo.isAccessibilityFocused()'),('android.view.accessibility.AccessibilityNodeInfo.isCheckable()'),('android.view.accessibility.AccessibilityNodeInfo.isChecked()'),('android.view.accessibility.AccessibilityNodeInfo.isClickable()'),('android.view.accessibility.AccessibilityNodeInfo.isEnabled()'),('android.view.accessibility.AccessibilityNodeInfo.isFocusable()'),('android.view.accessibility.AccessibilityNodeInfo.isFocused()'),('android.view.accessibility.AccessibilityNodeInfo.isLongClickable()'),('android.view.accessibility.AccessibilityNodeInfo.isPassword()'),('android.view.accessibility.AccessibilityNodeInfo.isScrollable()'),('android.view.accessibility.AccessibilityNodeInfo.isSelected()'),('android.view.accessibility.AccessibilityNodeInfo.isVisibleToUser()'),('android.view.accessibility.AccessibilityNodeInfo.obtain()'),('android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.accessibility.AccessibilityNodeInfo)'),('android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.View)'),('android.view.accessibility.AccessibilityNodeInfo.obtain(android.view.View,int)'),('android.view.accessibility.AccessibilityNodeInfo.performAction(int)'),('android.view.accessibility.AccessibilityNodeInfo.performAction(int,android.os.Bundle)'),('android.view.accessibility.AccessibilityNodeInfo.recycle()'),('android.view.accessibility.AccessibilityNodeInfo.setAccessibilityFocused(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setBoundsInParent(android.graphics.Rect)'),('android.view.accessibility.AccessibilityNodeInfo.setBoundsInScreen(android.graphics.Rect)'),('android.view.accessibility.AccessibilityNodeInfo.setCheckable(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setChecked(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setClassName(java.lang.CharSequence)'),('android.view.accessibility.AccessibilityNodeInfo.setClickable(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setContentDescription(java.lang.CharSequence)'),('android.view.accessibility.AccessibilityNodeInfo.setEnabled(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setFocusable(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setFocused(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setLongClickable(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setMovementGranularities(int)'),('android.view.accessibility.AccessibilityNodeInfo.setPackageName(java.lang.CharSequence)'),('android.view.accessibility.AccessibilityNodeInfo.setParent(android.view.View)'),('android.view.accessibility.AccessibilityNodeInfo.setParent(android.view.View,int)'),('android.view.accessibility.AccessibilityNodeInfo.setPassword(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setScrollable(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setSelected(boolean)'),('android.view.accessibility.AccessibilityNodeInfo.setSource(android.view.View)'),('android.view.accessibility.AccessibilityNodeInfo.setSource(android.view.View,int)'),('android.view.accessibility.AccessibilityNodeInfo.setText(java.lang.CharSequence)'),('android.view.accessibility.AccessibilityNodeInfo.setVisibleToUser(boolean)'),('android.view.accessibility.AccessibilityNodeProvider.init()'),('android.view.accessibility.AccessibilityRecord.getAddedCount()'),('android.view.accessibility.AccessibilityRecord.getBeforeText()'),('android.view.accessibility.AccessibilityRecord.getClassName()'),('android.view.accessibility.AccessibilityRecord.getContentDescription()'),('android.view.accessibility.AccessibilityRecord.getCurrentItemIndex()'),('android.view.accessibility.AccessibilityRecord.getFromIndex()'),('android.view.accessibility.AccessibilityRecord.getItemCount()'),('android.view.accessibility.AccessibilityRecord.getMaxScrollX()'),('android.view.accessibility.AccessibilityRecord.getMaxScrollY()'),('android.view.accessibility.AccessibilityRecord.getParcelableData()'),('android.view.accessibility.AccessibilityRecord.getRemovedCount()'),('android.view.accessibility.AccessibilityRecord.getScrollX()'),('android.view.accessibility.AccessibilityRecord.getScrollY()'),('android.view.accessibility.AccessibilityRecord.getSource()'),('android.view.accessibility.AccessibilityRecord.getText()'),('android.view.accessibility.AccessibilityRecord.getToIndex()'),('android.view.accessibility.AccessibilityRecord.getWindowId()'),('android.view.accessibility.AccessibilityRecord.isChecked()'),('android.view.accessibility.AccessibilityRecord.isEnabled()'),('android.view.accessibility.AccessibilityRecord.isFullScreen()'),('android.view.accessibility.AccessibilityRecord.isPassword()'),('android.view.accessibility.AccessibilityRecord.isScrollable()'),('android.view.accessibility.AccessibilityRecord.obtain()'),('android.view.accessibility.AccessibilityRecord.obtain(android.view.accessibility.AccessibilityRecord)'),('android.view.accessibility.AccessibilityRecord.recycle()'),('android.view.accessibility.AccessibilityRecord.setAddedCount(int)'),('android.view.accessibility.AccessibilityRecord.setBeforeText(java.lang.CharSequence)'),('android.view.accessibility.AccessibilityRecord.setChecked(boolean)'),('android.view.accessibility.AccessibilityRecord.setClassName(java.lang.CharSequence)'),('android.view.accessibility.AccessibilityRecord.setContentDescription(java.lang.CharSequence)'),('android.view.accessibility.AccessibilityRecord.setCurrentItemIndex(int)'),('android.view.accessibility.AccessibilityRecord.setEnabled(boolean)'),('android.view.accessibility.AccessibilityRecord.setFromIndex(int)'),('android.view.accessibility.AccessibilityRecord.setFullScreen(boolean)'),('android.view.accessibility.AccessibilityRecord.setItemCount(int)'),('android.view.accessibility.AccessibilityRecord.setMaxScrollX(int)'),('android.view.accessibility.AccessibilityRecord.setMaxScrollY(int)'),('android.view.accessibility.AccessibilityRecord.setParcelableData(android.os.Parcelable)'),('android.view.accessibility.AccessibilityRecord.setPassword(boolean)'),('android.view.accessibility.AccessibilityRecord.setRemovedCount(int)'),('android.view.accessibility.AccessibilityRecord.setScrollable(boolean)'),('android.view.accessibility.AccessibilityRecord.setScrollX(int)'),('android.view.accessibility.AccessibilityRecord.setScrollY(int)'),('android.view.accessibility.AccessibilityRecord.setSource(android.view.View)'),('android.view.accessibility.AccessibilityRecord.setSource(android.view.View,int)'),('android.view.accessibility.AccessibilityRecord.setToIndex(int)'),('android.view.animation.AccelerateInterpolator.init(float)'),('android.view.animation.AlphaAnimation.init(float,float)'),('android.view.animation.Animation.setAnimationListener(android.view.animation.Animation$AnimationListener)'),('android.view.animation.Animation.setDuration(long)'),('android.view.animation.Animation.setInterpolator(android.view.animation.Interpolator)'),('android.view.animation.AnimationSet.addAnimation(android.view.animation.Animation)'),('android.view.animation.AnimationSet.init(boolean)'),('android.view.animation.AnimationUtils.loadAnimation(android.content.Context,int)'),('android.view.animation.DecelerateInterpolator.init(float)'),('android.view.animation.ScaleAnimation.init(float,float,float,float,int,float,int,float)'),('android.view.ContextThemeWrapper.getResources()'),('android.view.FocusFinder.findNextFocus(android.view.ViewGroup,android.view.View,int)'),('android.view.FocusFinder.getInstance()'),('android.view.GestureDetector$OnDoubleTapListener.onDoubleTap(android.view.MotionEvent)'),('android.view.GestureDetector$OnDoubleTapListener.onDoubleTapEvent(android.view.MotionEvent)'),('android.view.GestureDetector$OnDoubleTapListener.onSingleTapConfirmed(android.view.MotionEvent)'),('android.view.GestureDetector$OnGestureListener.onDown(android.view.MotionEvent)'),('android.view.GestureDetector$OnGestureListener.onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)'),('android.view.GestureDetector$OnGestureListener.onLongPress(android.view.MotionEvent)'),('android.view.GestureDetector$OnGestureListener.onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)'),('android.view.GestureDetector$OnGestureListener.onShowPress(android.view.MotionEvent)'),('android.view.GestureDetector$OnGestureListener.onSingleTapUp(android.view.MotionEvent)'),('android.view.GestureDetector.init(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)'),('android.view.GestureDetector.isLongpressEnabled()'),('android.view.GestureDetector.onTouchEvent(android.view.MotionEvent)'),('android.view.GestureDetector.setIsLongpressEnabled(boolean)'),('android.view.GestureDetector.setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)'),('android.view.KeyEvent.getAction()'),('android.view.KeyEvent.getKeyCode()'),('android.view.KeyEvent.getMetaState()'),('android.view.KeyEvent.getRepeatCount()'),('android.view.KeyEvent.metaStateHasModifiers(int,int)'),('android.view.KeyEvent.metaStateHasNoModifiers(int)'),('android.view.KeyEvent.normalizeMetaState(int)'),('android.view.LayoutInflater.getFactory()'),('android.view.LayoutInflater.inflate(int,android.view.ViewGroup,boolean)'),('android.view.LayoutInflater.setFactory(android.view.LayoutInflater$Factory)'),('android.view.Menu.clear()'),('android.view.Menu.findItem(int)'),('android.view.Menu.hasVisibleItems()'),('android.view.MenuInflater.inflate(int,android.view.Menu)'),('android.view.MenuItem.getActionProvider()'),('android.view.MenuItem.hasSubMenu()'),('android.view.MenuItem.setActionProvider(android.view.ActionProvider)'),('android.view.MenuItem.setActionView(android.view.View)'),('android.view.MenuItem.setIntent(android.content.Intent)'),('android.view.MenuItem.setShowAsAction(int)'),('android.view.MotionEvent.findPointerIndex(int)'),('android.view.MotionEvent.getAction()'),('android.view.MotionEvent.getDownTime()'),('android.view.MotionEvent.getEdgeFlags()'),('android.view.MotionEvent.getEventTime()'),('android.view.MotionEvent.getPointerCount()'),('android.view.MotionEvent.getPointerId(int)'),('android.view.MotionEvent.getX()'),('android.view.MotionEvent.getX(int)'),('android.view.MotionEvent.getY()'),('android.view.MotionEvent.getY(int)'),('android.view.MotionEvent.obtain(android.view.MotionEvent)'),('android.view.MotionEvent.obtain(long,long,int,float,float,int)'),('android.view.MotionEvent.recycle()'),('android.view.SoundEffectConstants.getContantForFocusDirection(int)'),('android.view.VelocityTracker.addMovement(android.view.MotionEvent)'),('android.view.VelocityTracker.clear()'),('android.view.VelocityTracker.computeCurrentVelocity(int,float)'),('android.view.VelocityTracker.getXVelocity()'),('android.view.VelocityTracker.getXVelocity(int)'),('android.view.VelocityTracker.getYVelocity()'),('android.view.VelocityTracker.getYVelocity(int)'),('android.view.VelocityTracker.obtain()'),('android.view.VelocityTracker.recycle()'),('android.view.View$AccessibilityDelegate.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.view.View$AccessibilityDelegate.getAccessibilityNodeProvider(android.view.View)'),('android.view.View$AccessibilityDelegate.init()'),('android.view.View$AccessibilityDelegate.onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.view.View$AccessibilityDelegate.onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)'),('android.view.View$AccessibilityDelegate.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.view.View$AccessibilityDelegate.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.view.View$AccessibilityDelegate.performAccessibilityAction(android.view.View,int,android.os.Bundle)'),('android.view.View$AccessibilityDelegate.sendAccessibilityEvent(android.view.View,int)'),('android.view.View$AccessibilityDelegate.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.view.View$BaseSavedState.init(android.os.Parcel)'),('android.view.View$BaseSavedState.init(android.os.Parcelable)'),('android.view.View$MeasureSpec.getMode(int)'),('android.view.View$MeasureSpec.getSize(int)'),('android.view.View$MeasureSpec.makeMeasureSpec(int,int)'),('android.view.View.addFocusables(java.util.ArrayList,int,int)'),('android.view.View.addTouchables(java.util.ArrayList)'),('android.view.View.canScrollHorizontally(int)'),('android.view.View.canScrollVertically(int)'),('android.view.View.clearAnimation()'),('android.view.View.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)'),('android.view.View.draw(android.graphics.Canvas)'),('android.view.View.findViewById(int)'),('android.view.View.getAccessibilityNodeProvider()'),('android.view.View.getBackground()'),('android.view.View.getBottom()'),('android.view.View.getContext()'),('android.view.View.getDefaultSize(int,int)'),('android.view.View.getDrawableState()'),('android.view.View.getHeight()'),('android.view.View.getId()'),('android.view.View.getImportantForAccessibility()'),('android.view.View.getLabelFor()'),('android.view.View.getLayerType()'),('android.view.View.getLayoutParams()'),('android.view.View.getLeft()'),('android.view.View.getMeasuredHeight()'),('android.view.View.getMeasuredWidth()'),('android.view.View.getOverScrollMode()'),('android.view.View.getPaddingBottom()'),('android.view.View.getPaddingLeft()'),('android.view.View.getPaddingRight()'),('android.view.View.getPaddingTop()'),('android.view.View.getParent()'),('android.view.View.getResources()'),('android.view.View.getRight()'),('android.view.View.getScrollX()'),('android.view.View.getScrollY()'),('android.view.View.getTag()'),('android.view.View.getTop()'),('android.view.View.getVisibility()'),('android.view.View.getWidth()'),('android.view.View.getWindowToken()'),('android.view.View.hasTransientState()'),('android.view.View.init(android.content.Context)'),('android.view.View.invalidate()'),('android.view.View.invalidate(android.graphics.Rect)'),('android.view.View.isClickable()'),('android.view.View.isEnabled()'),('android.view.View.isFocusable()'),('android.view.View.isFocusableInTouchMode()'),('android.view.View.isFocused()'),('android.view.View.isHorizontalScrollBarEnabled()'),('android.view.View.isInTouchMode()'),('android.view.View.isLongClickable()'),('android.view.View.isPressed()'),('android.view.View.isSelected()'),('android.view.View.isVerticalScrollBarEnabled()'),('android.view.View.layout(int,int,int,int)'),('android.view.View.measure(int,int)'),('android.view.View.offsetLeftAndRight(int)'),('android.view.View.onAttachedToWindow()'),('android.view.View.onDetachedFromWindow()'),('android.view.View.onDraw(android.graphics.Canvas)'),('android.view.View.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)'),('android.view.View.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)'),('android.view.View.onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)'),('android.view.View.onRestoreInstanceState(android.os.Parcelable)'),('android.view.View.onSaveInstanceState()'),('android.view.View.onSizeChanged(int,int,int,int)'),('android.view.View.performAccessibilityAction(int,android.os.Bundle)'),('android.view.View.playSoundEffect(int)'),('android.view.View.postDelayed(java.lang.Runnable,long)'),('android.view.View.postInvalidate(int,int,int,int)'),('android.view.View.postInvalidateDelayed(long)'),('android.view.View.postInvalidateDelayed(long,int,int,int,int)'),('android.view.View.postInvalidateOnAnimation()'),('android.view.View.postOnAnimation(java.lang.Runnable)'),('android.view.View.postOnAnimationDelayed(java.lang.Runnable,long)'),('android.view.View.refreshDrawableState()'),('android.view.View.removeCallbacks(java.lang.Runnable)'),('android.view.View.requestFocus()'),('android.view.View.requestFocus(int)'),('android.view.View.requestFocus(int,android.graphics.Rect)'),('android.view.View.requestLayout()'),('android.view.View.restoreHierarchyState(android.util.SparseArray)'),('android.view.View.saveHierarchyState(android.util.SparseArray)'),('android.view.View.scrollTo(int,int)'),('android.view.View.setAccessibilityDelegate(android.view.View$AccessibilityDelegate)'),('android.view.View.setBackgroundColor(int)'),('android.view.View.setBackgroundDrawable(android.graphics.drawable.Drawable)'),('android.view.View.setBackgroundResource(int)'),('android.view.View.setFocusable(boolean)'),('android.view.View.setHasTransientState(boolean)'),('android.view.View.setId(int)'),('android.view.View.setImportantForAccessibility(int)'),('android.view.View.setLabelFor(int)'),('android.view.View.setLayerType(int,android.graphics.Paint)'),('android.view.View.setLayoutParams(android.view.ViewGroup$LayoutParams)'),('android.view.View.setMeasuredDimension(int,int)'),('android.view.View.setMinimumHeight(int)'),('android.view.View.setMinimumWidth(int)'),('android.view.View.setOnClickListener(android.view.View$OnClickListener)'),('android.view.View.setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)'),('android.view.View.setOverScrollMode(int)'),('android.view.View.setPadding(int,int,int,int)'),('android.view.View.setTag(java.lang.Object)'),('android.view.View.setVisibility(int)'),('android.view.View.setWillNotDraw(boolean)'),('android.view.View.startAnimation(android.view.animation.Animation)'),('android.view.View.verifyDrawable(android.graphics.drawable.Drawable)'),('android.view.View.willNotDraw()'),('android.view.ViewConfiguration.get(android.content.Context)'),('android.view.ViewConfiguration.getDoubleTapTimeout()'),('android.view.ViewConfiguration.getLongPressTimeout()'),('android.view.ViewConfiguration.getScaledDoubleTapSlop()'),('android.view.ViewConfiguration.getScaledMaximumFlingVelocity()'),('android.view.ViewConfiguration.getScaledMinimumFlingVelocity()'),('android.view.ViewConfiguration.getScaledPagingTouchSlop()'),('android.view.ViewConfiguration.getScaledTouchSlop()'),('android.view.ViewConfiguration.getTapTimeout()'),('android.view.ViewGroup$LayoutParams.init(android.content.Context,android.util.AttributeSet)'),('android.view.ViewGroup$LayoutParams.init(int,int)'),('android.view.ViewGroup.addView(android.view.View)'),('android.view.ViewGroup.addView(android.view.View,android.view.ViewGroup$LayoutParams)'),('android.view.ViewGroup.addView(android.view.View,int,android.view.ViewGroup$LayoutParams)'),('android.view.ViewGroup.addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)'),('android.view.ViewGroup.checkLayoutParams(android.view.ViewGroup$LayoutParams)'),('android.view.ViewGroup.dispatchFreezeSelfOnly(android.util.SparseArray)'),('android.view.ViewGroup.dispatchKeyEvent(android.view.KeyEvent)'),('android.view.ViewGroup.dispatchThawSelfOnly(android.util.SparseArray)'),('android.view.ViewGroup.drawableStateChanged()'),('android.view.ViewGroup.findFocus()'),('android.view.ViewGroup.focusableViewAvailable(android.view.View)'),('android.view.ViewGroup.getChildAt(int)'),('android.view.ViewGroup.getChildCount()'),('android.view.ViewGroup.getDescendantFocusability()'),('android.view.ViewGroup.hasFocus()'),('android.view.ViewGroup.init(android.content.Context)'),('android.view.ViewGroup.init(android.content.Context,android.util.AttributeSet)'),('android.view.ViewGroup.onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)'),('android.view.ViewGroup.removeView(android.view.View)'),('android.view.ViewGroup.removeViewAt(int)'),('android.view.ViewGroup.removeViewInLayout(android.view.View)'),('android.view.ViewGroup.setDescendantFocusability(int)'),('android.view.Window.addFlags(int)'),('android.view.Window.getAttributes()'),('android.view.Window.getDecorView()'),('android.widget.AbsListView.setDrawSelectorOnTop(boolean)'),('android.widget.AdapterView.getSelectedItemId()'),('android.widget.AdapterView.getSelectedItemPosition()'),('android.widget.AdapterView.setEmptyView(android.view.View)'),('android.widget.AdapterView.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)'),('android.widget.BaseAdapter.init()'),('android.widget.BaseAdapter.notifyDataSetChanged()'),('android.widget.BaseAdapter.notifyDataSetInvalidated()'),('android.widget.EdgeEffect.draw(android.graphics.Canvas)'),('android.widget.EdgeEffect.finish()'),('android.widget.EdgeEffect.init(android.content.Context)'),('android.widget.EdgeEffect.isFinished()'),('android.widget.EdgeEffect.onAbsorb(int)'),('android.widget.EdgeEffect.onPull(float)'),('android.widget.EdgeEffect.onRelease()'),('android.widget.EdgeEffect.setSize(int,int)'),('android.widget.Filter$FilterResults.init()'),('android.widget.Filter.init()'),('android.widget.FilterQueryProvider.runQuery(java.lang.CharSequence)'),('android.widget.FrameLayout$LayoutParams.init(int,int)'),('android.widget.FrameLayout.init(android.content.Context)'),('android.widget.ImageView.setImageResource(int)'),('android.widget.ImageView.setImageURI(android.net.Uri)'),('android.widget.LinearLayout$LayoutParams.init(int,int,float)'),('android.widget.LinearLayout.init(android.content.Context)'),('android.widget.LinearLayout.setGravity(int)'),('android.widget.LinearLayout.setOrientation(int)'),('android.widget.ListView.init(android.content.Context)'),('android.widget.ListView.setAdapter(android.widget.ListAdapter)'),('android.widget.ListView.setSelection(int)'),('android.widget.ProgressBar.init(android.content.Context,android.util.AttributeSet,int)'),('android.widget.Scroller.abortAnimation()'),('android.widget.Scroller.computeScrollOffset()'),('android.widget.Scroller.fling(int,int,int,int,int,int,int,int)'),('android.widget.Scroller.getCurrVelocity()'),('android.widget.Scroller.getCurrX()'),('android.widget.Scroller.getCurrY()'),('android.widget.Scroller.getDuration()'),('android.widget.Scroller.getFinalX()'),('android.widget.Scroller.init(android.content.Context)'),('android.widget.Scroller.init(android.content.Context,android.view.animation.Interpolator)'),('android.widget.Scroller.isFinished()'),('android.widget.Scroller.startScroll(int,int,int,int)'),('android.widget.Scroller.startScroll(int,int,int,int,int)'),('android.widget.Scroller.timePassed()'),('android.widget.SearchView.getQuery()'),('android.widget.SearchView.init(android.content.Context)'),('android.widget.SearchView.isIconified()'),('android.widget.SearchView.isQueryRefinementEnabled()'),('android.widget.SearchView.isSubmitButtonEnabled()'),('android.widget.SearchView.onActionViewCollapsed()'),('android.widget.SearchView.setIconified(boolean)'),('android.widget.SearchView.setImeOptions(int)'),('android.widget.SearchView.setInputType(int)'),('android.widget.SearchView.setMaxWidth(int)'),('android.widget.SearchView.setOnCloseListener(android.widget.SearchView$OnCloseListener)'),('android.widget.SearchView.setOnQueryTextListener(android.widget.SearchView$OnQueryTextListener)'),('android.widget.SearchView.setQuery(java.lang.CharSequence,boolean)'),('android.widget.SearchView.setQueryHint(java.lang.CharSequence)'),('android.widget.SearchView.setQueryRefinementEnabled(boolean)'),('android.widget.SearchView.setSearchableInfo(android.app.SearchableInfo)'),('android.widget.SearchView.setSubmitButtonEnabled(boolean)'),('android.widget.ShareActionProvider.init(android.content.Context)'),('android.widget.ShareActionProvider.setShareHistoryFileName(java.lang.String)'),('android.widget.ShareActionProvider.setShareIntent(android.content.Intent)'),('android.widget.TabHost$OnTabChangeListener.onTabChanged(java.lang.String)'),('android.widget.TabHost$TabSpec.getTag()'),('android.widget.TabHost$TabSpec.setContent(android.widget.TabHost$TabContentFactory)'),('android.widget.TabHost.addTab(android.widget.TabHost$TabSpec)'),('android.widget.TabHost.getCurrentTabTag()'),('android.widget.TabHost.init(android.content.Context,android.util.AttributeSet)'),('android.widget.TabHost.onAttachedToWindow()'),('android.widget.TabHost.onDetachedFromWindow()'),('android.widget.TabHost.setCurrentTabByTag(java.lang.String)'),('android.widget.TabHost.setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)'),('android.widget.TabHost.setup()'),('android.widget.TabWidget.init(android.content.Context)'),('android.widget.TextView.getBaseline()'),('android.widget.TextView.getTextColors()'),('android.widget.TextView.init(android.content.Context)'),('android.widget.TextView.setEllipsize(android.text.TextUtils$TruncateAt)'),('android.widget.TextView.setGravity(int)'),('android.widget.TextView.setSingleLine()'),('android.widget.TextView.setText(java.lang.CharSequence)'),('android.widget.TextView.setTextAppearance(android.content.Context,int)'),('android.widget.TextView.setTextColor(int)'),('android.widget.TextView.setTextSize(int,float)'),('android.widget.TextView.setTransformationMethod(android.text.method.TransformationMethod)'),('com.example.hello.HelloActivity.anotherCallInt()'),('com.example.hello.HelloActivity.iFanotherCallInt()'),('com.example.hello.HelloActivity.testPermission()'),('java.io.File.delete()'),('java.io.File.exists()'),('java.io.File.getParentFile()'),('java.io.File.getPath()'),('java.io.File.init(java.io.File,java.lang.String)'),('java.io.File.init(java.lang.String)'),('java.io.File.mkdir()'),('java.io.File.renameTo(java.io.File)'),('java.io.FileDescriptor.sync()'),('java.io.FileInputStream.available()'),('java.io.FileInputStream.close()'),('java.io.FileInputStream.init(java.io.File)'),('java.io.FileInputStream.read(byte[],int,int)'),('java.io.FileOutputStream.close()'),('java.io.FileOutputStream.getFD()'),('java.io.FileOutputStream.init(java.io.File)'),('java.io.FileOutputStream.init(java.io.File,boolean)'),('java.io.IOException.init(java.lang.String)'),('java.io.OutputStream.write(byte[])'),('java.io.OutputStreamWriter.close()'),('java.io.OutputStreamWriter.init(java.io.OutputStream)'),('java.io.PrintWriter.init(java.io.Writer)'),('java.io.PrintWriter.print(boolean)'),('java.io.PrintWriter.print(int)'),('java.io.PrintWriter.print(java.lang.Object)'),('java.io.PrintWriter.print(java.lang.String)'),('java.io.PrintWriter.println()'),('java.io.PrintWriter.println(boolean)'),('java.io.PrintWriter.println(int)'),('java.io.PrintWriter.println(java.lang.Object)'),('java.io.PrintWriter.println(java.lang.String)'),('java.io.Writer.init()'),('java.io.Writer.write(java.lang.String)'),('java.lang.Boolean.valueOf(boolean)'),('java.lang.CharSequence.charAt(int)'),('java.lang.CharSequence.length()'),('java.lang.Class.getClassLoader()'),('java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class[])'),('java.lang.Class.getModifiers()'),('java.lang.Class.getName()'),('java.lang.Class.getSimpleName()'),('java.lang.Class.isMemberClass()'),('java.lang.Class.newInstance()'),('java.lang.ClassLoader.loadClass(java.lang.String)'),('java.lang.Enum.init(java.lang.String,int)'),('java.lang.Enum.ordinal()'),('java.lang.Enum.valueOf(java.lang.Class,java.lang.String)'),('java.lang.IllegalArgumentException.init(java.lang.String)'),('java.lang.IllegalArgumentException.init(java.lang.Throwable)'),('java.lang.IllegalStateException.init(java.lang.String)'),('java.lang.IndexOutOfBoundsException.init(java.lang.String)'),('java.lang.Integer.intValue()'),('java.lang.Integer.numberOfTrailingZeros(int)'),('java.lang.Integer.parseInt(java.lang.String)'),('java.lang.Integer.toHexString(int)'),('java.lang.Integer.valueOf(int)'),('java.lang.Iterable.iterator()'),('java.lang.Math.abs(float)'),('java.lang.Math.abs(int)'),('java.lang.Math.floor(double)'),('java.lang.Math.max(float,float)'),('java.lang.Math.max(int,int)'),('java.lang.Math.min(float,float)'),('java.lang.Math.min(int,int)'),('java.lang.Math.round(float)'),('java.lang.Math.sin(double)'),('java.lang.NullPointerException.init(java.lang.String)'),('java.lang.Object.clone()'),('java.lang.Object.equals(java.lang.Object)'),('java.lang.Object.getClass()'),('java.lang.Object.hashCode()'),('java.lang.Object.init()'),('java.lang.Object.toString()'),('java.lang.ref.Reference.get()'),('java.lang.ref.WeakReference.init(java.lang.Object)'),('java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])'),('java.lang.reflect.Modifier.isStatic(int)'),('java.lang.Runnable.run()'),('java.lang.RuntimeException.init(java.lang.String)'),('java.lang.RuntimeException.init(java.lang.String,java.lang.Throwable)'),('java.lang.String.charAt(int)'),('java.lang.String.equals(java.lang.Object)'),('java.lang.String.format(java.lang.String,java.lang.Object[])'),('java.lang.String.getBytes()'),('java.lang.String.init(char[],int,int)'),('java.lang.String.init(java.lang.String)'),('java.lang.String.lastIndexOf(int)'),('java.lang.String.length()'),('java.lang.String.startsWith(java.lang.String)'),('java.lang.String.substring(int)'),('java.lang.String.toUpperCase(java.util.Locale)'),('java.lang.StringBuilder.append(char)'),('java.lang.StringBuilder.append(char[],int,int)'),('java.lang.StringBuilder.append(int)'),('java.lang.StringBuilder.append(java.lang.Object)'),('java.lang.StringBuilder.append(java.lang.String)'),('java.lang.StringBuilder.append(long)'),('java.lang.StringBuilder.delete(int,int)'),('java.lang.StringBuilder.init()'),('java.lang.StringBuilder.init(int)'),('java.lang.StringBuilder.init(java.lang.String)'),('java.lang.StringBuilder.length()'),('java.lang.StringBuilder.toString()'),('java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)'),('java.lang.System.currentTimeMillis()'),('java.lang.System.identityHashCode(java.lang.Object)'),('java.lang.Thread.init(java.lang.Runnable,java.lang.String)'),('java.lang.ThreadLocal.get()'),('java.lang.ThreadLocal.init()'),('java.lang.Throwable.fillInStackTrace()'),('java.lang.Throwable.getCause()'),('java.lang.Throwable.getMessage()'),('java.lang.Throwable.printStackTrace()'),('java.lang.UnsupportedOperationException.init(java.lang.String)'),('java.util.ArrayList.add(int,java.lang.Object)'),('java.util.ArrayList.add(java.lang.Object)'),('java.util.ArrayList.clear()'),('java.util.ArrayList.contains(java.lang.Object)'),('java.util.ArrayList.get(int)'),('java.util.ArrayList.init()'),('java.util.ArrayList.init(int)'),('java.util.ArrayList.isEmpty()'),('java.util.ArrayList.iterator()'),('java.util.ArrayList.remove(int)'),('java.util.ArrayList.remove(java.lang.Object)'),('java.util.ArrayList.set(int,java.lang.Object)'),('java.util.ArrayList.size()'),('java.util.ArrayList.toArray()'),('java.util.ArrayList.toArray(java.lang.Object[])'),('java.util.Arrays.toString(java.lang.Object[])'),('java.util.Collection.toArray(java.lang.Object[])'),('java.util.Collections.emptyList()'),('java.util.Collections.sort(java.util.List,java.util.Comparator)'),('java.util.concurrent.atomic.AtomicBoolean.get()'),('java.util.concurrent.atomic.AtomicBoolean.init()'),('java.util.concurrent.atomic.AtomicBoolean.set(boolean)'),('java.util.concurrent.atomic.AtomicInteger.getAndIncrement()'),('java.util.concurrent.atomic.AtomicInteger.init(int)'),('java.util.concurrent.CountDownLatch.await()'),('java.util.concurrent.CountDownLatch.countDown()'),('java.util.concurrent.CountDownLatch.init(int)'),('java.util.concurrent.Executor.execute(java.lang.Runnable)'),('java.util.concurrent.FutureTask.cancel(boolean)'),('java.util.concurrent.FutureTask.get()'),('java.util.concurrent.FutureTask.get(long,java.util.concurrent.TimeUnit)'),('java.util.concurrent.FutureTask.init(java.util.concurrent.Callable)'),('java.util.concurrent.FutureTask.isCancelled()'),('java.util.concurrent.LinkedBlockingQueue.init(int)'),('java.util.concurrent.ThreadPoolExecutor.init(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)'),('java.util.HashMap.entrySet()'),('java.util.HashMap.get(java.lang.Object)'),('java.util.HashMap.init()'),('java.util.HashMap.isEmpty()'),('java.util.HashMap.put(java.lang.Object,java.lang.Object)'),('java.util.HashMap.remove(java.lang.Object)'),('java.util.HashMap.size()'),('java.util.HashMap.values()'),('java.util.Iterator.hasNext()'),('java.util.Iterator.next()'),('java.util.LinkedHashMap.get(java.lang.Object)'),('java.util.LinkedHashMap.init(int,float,boolean)'),('java.util.LinkedHashMap.init(java.util.Map)'),('java.util.List.add(java.lang.Object)'),('java.util.List.get(int)'),('java.util.List.size()'),('java.util.Map$Entry.getKey()'),('java.util.Map$Entry.getValue()'),('java.util.Set.iterator()');
/*!40000 ALTER TABLE `helloStatic` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `helloViewDynamic`
--

DROP TABLE IF EXISTS `helloViewDynamic`;
/*!50001 DROP VIEW IF EXISTS `helloViewDynamic`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `helloViewDynamic` (
  `apiName` tinyint NOT NULL,
  `permission` tinyint NOT NULL
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Temporary table structure for view `helloViewStatic`
--

DROP TABLE IF EXISTS `helloViewStatic`;
/*!50001 DROP VIEW IF EXISTS `helloViewStatic`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE TABLE `helloViewStatic` (
  `apiName` tinyint NOT NULL,
  `permission` tinyint NOT NULL
) ENGINE=MyISAM */;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `permissionMap`
--

DROP TABLE IF EXISTS `permissionMap`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permissionMap` (
  `API` varchar(400) NOT NULL,
  `permission` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`API`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permissionMap`
--

LOCK TABLES `permissionMap` WRITE;
/*!40000 ALTER TABLE `permissionMap` DISABLE KEYS */;
INSERT INTO `permissionMap` VALUES ('android.accessibilityservice.AccessibilityService.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.accessibilityservice.AccessibilityService.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.accessibilityservice.AccessibilityService.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.accessibilityservice.AccessibilityService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.accessibilityservice.AccessibilityService.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.accessibilityservice.AccessibilityService.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.accounts.AbstractAccountAuthenticator$Transport.addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,[Ljava.lang.String;,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator$Transport.confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator$Transport.editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator$Transport.getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator$Transport.getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator$Transport.getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator$Transport.hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,[Ljava.lang.String;)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator$Transport.updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,[Ljava.lang.String;,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.checkBinderPermission()','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,[Ljava.lang.String;)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AbstractAccountAuthenticator.updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.AccountAuthenticatorActivity.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.accounts.AccountAuthenticatorActivity.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.accounts.AccountAuthenticatorActivity.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.accounts.AccountAuthenticatorActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.accounts.AccountAuthenticatorActivity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.accounts.AccountAuthenticatorActivity.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.accounts.AccountAuthenticatorActivity.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.accounts.AccountManager$AmsTask.doWork()','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager$AmsTask.start()','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask.doWork()','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask.start()','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager.addAccount(java.lang.String,java.lang.String,[Ljava.lang.String;,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManager.addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManager.addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager.blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)','android.permission.USE_CREDENTIALS'),('android.accounts.AccountManager.clearPassword(android.accounts.Account)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManager.confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManager.editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManager.getAccounts()','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager.getAccountsByType(java.lang.String)','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager.getAccountsByTypeAndFeatures(java.lang.String,[Ljava.lang.String;,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager.getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.USE_CREDENTIALS'),('android.accounts.AccountManager.getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.USE_CREDENTIALS'),('android.accounts.AccountManager.getAuthTokenByFeatures(java.lang.String,java.lang.String,[Ljava.lang.String;,android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager.getPassword(android.accounts.Account)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManager.getUserData(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManager.hasFeatures(android.accounts.Account,[Ljava.lang.String;,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManager.invalidateAuthToken(java.lang.String,java.lang.String)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManager.peekAuthToken(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManager.removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManager.setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManager.setPassword(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManager.setUserData(android.accounts.Account,java.lang.String,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManager.updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService$SimWatcher.onReceive(android.content.Context,android.content.Intent)','android.permission.READ_PHONE_STATE'),('android.accounts.AccountManagerService.addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManagerService.addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,[Ljava.lang.String;,boolean,android.os.Bundle)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService.checkAuthenticateAccountsPermission(android.accounts.Account)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManagerService.checkManageAccountsOrUseCredentialsPermissions()','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService.checkManageAccountsPermission()','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService.checkReadAccountsPermission()','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManagerService.clearPassword(android.accounts.Account)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService.confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService.editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService.getAccounts(java.lang.String)','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManagerService.getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,[Ljava.lang.String;)','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManagerService.getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)','android.permission.USE_CREDENTIALS'),('android.accounts.AccountManagerService.getPassword(android.accounts.Account)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManagerService.getUserData(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManagerService.hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,[Ljava.lang.String;)','android.permission.GET_ACCOUNTS'),('android.accounts.AccountManagerService.invalidateAuthToken(java.lang.String,java.lang.String)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService.peekAuthToken(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManagerService.removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.AccountManagerService.setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManagerService.setPassword(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManagerService.setUserData(android.accounts.Account,java.lang.String,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.AccountManagerService.updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.GrantCredentialsPermissionActivity.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.accounts.GrantCredentialsPermissionActivity.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.accounts.GrantCredentialsPermissionActivity.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.accounts.GrantCredentialsPermissionActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.accounts.GrantCredentialsPermissionActivity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.accounts.GrantCredentialsPermissionActivity.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.accounts.GrantCredentialsPermissionActivity.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.accounts.IAccountAuthenticator$Stub$Proxy.addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,[Ljava.lang.String;,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.IAccountAuthenticator$Stub$Proxy.confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.IAccountAuthenticator$Stub$Proxy.editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)','android.permission.ACCOUNT_MANAGER'),('android.accounts.IAccountAuthenticator$Stub$Proxy.getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)','android.permission.ACCOUNT_MANAGER'),('android.accounts.IAccountAuthenticator$Stub$Proxy.getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.IAccountAuthenticator$Stub$Proxy.getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)','android.permission.ACCOUNT_MANAGER'),('android.accounts.IAccountAuthenticator$Stub$Proxy.hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,[Ljava.lang.String;)','android.permission.ACCOUNT_MANAGER'),('android.accounts.IAccountAuthenticator$Stub$Proxy.updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.ACCOUNT_MANAGER'),('android.accounts.IAccountManager$Stub$Proxy.addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,[Ljava.lang.String;,boolean,android.os.Bundle)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.clearPassword(android.accounts.Account)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.getAccounts(java.lang.String)','android.permission.GET_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,[Ljava.lang.String;)','android.permission.GET_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)','android.permission.USE_CREDENTIALS'),('android.accounts.IAccountManager$Stub$Proxy.getPassword(android.accounts.Account)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.getUserData(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,[Ljava.lang.String;)','android.permission.GET_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.invalidateAuthToken(java.lang.String,java.lang.String)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.peekAuthToken(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)','android.permission.MANAGE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.setPassword(android.accounts.Account,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.setUserData(android.accounts.Account,java.lang.String,java.lang.String)','android.permission.AUTHENTICATE_ACCOUNTS'),('android.accounts.IAccountManager$Stub$Proxy.updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)','android.permission.MANAGE_ACCOUNTS'),('android.app.Activity.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.Activity.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.Activity.sendBroadcast(android.content.Intent)',''),('android.app.Activity.sendOrderedBroadcast(android.content.Intent,java.lang.String)',''),('android.app.Activity.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.Activity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.Activity.setContentView(int)','android.permission.INTERNET'),('android.app.Activity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.app.Activity.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.Activity.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.Activity.startActivity(android.content.Intent)',''),('android.app.Activity.startActivityForResult(android.content.Intent,int)',''),('android.app.Activity.startActivityFromChild(android.app.Activity,android.content.Intent,int)',''),('android.app.Activity.startActivityIfNeeded(android.content.Intent,int)',''),('android.app.ActivityGroup.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.ActivityGroup.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.ActivityGroup.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.ActivityGroup.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.ActivityGroup.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.app.ActivityGroup.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.ActivityGroup.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.ActivityManager.clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)','android.permission.CLEAR_APP_USER_DATA'),('android.app.ActivityManager.forceStopPackage(java.lang.String)','android.permission.FORCE_STOP_PACKAGES'),('android.app.ActivityManager.getRecentTasks(int,int)','android.permission.GET_TASKS'),('android.app.ActivityManager.getRunningTasks(int)','android.permission.GET_TASKS'),('android.app.ActivityManager.killBackgroundProcesses(java.lang.String)','android.permission.RESTART_PACKAGES'),('android.app.ActivityManager.restartPackage(java.lang.String)','android.permission.RESTART_PACKAGES'),('android.app.ActivityManagerNative.clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)','android.permission.CLEAR_APP_USER_DATA'),('android.app.ActivityManagerNative.forceStopPackage(java.lang.String)','android.permission.FORCE_STOP_PACKAGES'),('android.app.ActivityManagerNative.getRecentTasks(int,int)','android.permission.GET_TASKS'),('android.app.ActivityManagerNative.getRunningTasks(int)','android.permission.GET_TASKS'),('android.app.ActivityManagerNative.killBackgroundProcesses(java.lang.String)','android.permission.RESTART_PACKAGES'),('android.app.ActivityManagerNative.restartPackage(java.lang.String)','android.permission.RESTART_PACKAGES'),('android.app.admin.DevicePolicyManager.getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.DevicePolicyManager.reportFailedPasswordAttempt()','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.DevicePolicyManager.reportSuccessfulPasswordAttempt()','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.DevicePolicyManager.setActiveAdmin(android.content.ComponentName)','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.DevicePolicyManager.setActivePasswordState(int,int)','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.IDevicePolicyManager$Stub$Proxy.getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.IDevicePolicyManager$Stub$Proxy.reportFailedPasswordAttempt()','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.IDevicePolicyManager$Stub$Proxy.reportSuccessfulPasswordAttempt()','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.IDevicePolicyManager$Stub$Proxy.setActiveAdmin(android.content.ComponentName)','android.permission.BIND_DEVICE_ADMIN'),('android.app.admin.IDevicePolicyManager$Stub$Proxy.setActivePasswordState(int,int)','android.permission.BIND_DEVICE_ADMIN'),('android.app.AlarmManager.setTime(long)','android.permission.SET_TIME'),('android.app.AlarmManager.setTimeZone(java.lang.String)','android.permission.SET_TIME_ZONE'),('android.app.AliasActivity.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.AliasActivity.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.AliasActivity.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.AliasActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.AliasActivity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.app.AliasActivity.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.AliasActivity.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.Application.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.Application.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.Application.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.Application.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.Application.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.Application.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.backup.BackupAgent.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.backup.BackupAgent.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.backup.BackupAgent.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.backup.BackupAgent.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.backup.BackupAgent.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.backup.BackupAgent.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.backup.BackupAgentHelper.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.backup.BackupAgentHelper.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.backup.BackupAgentHelper.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.backup.BackupAgentHelper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.backup.BackupAgentHelper.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.backup.BackupAgentHelper.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.backup.BackupManager.beginRestoreSession()','android.permission.BACKUP'),('android.app.backup.BackupManager.dataChanged(java.lang.String)','android.permission.BACKUP'),('android.app.backup.BackupManager.requestRestore(android.app.backup.RestoreObserver)','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.backupNow()','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.beginRestoreSession(java.lang.String)','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.clearBackupData(java.lang.String)','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.dataChanged(java.lang.String)','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.getCurrentTransport()','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.isBackupEnabled()','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.listAllTransports()','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.selectBackupTransport(java.lang.String)','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.setAutoRestore(boolean)','android.permission.BACKUP'),('android.app.backup.IBackupManager$Stub$Proxy.setBackupEnabled(boolean)','android.permission.BACKUP'),('android.app.ContextImpl$ApplicationContentResolver.addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)','android.permission.WRITE_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationContentResolver.getCurrentSync()','android.permission.READ_SYNC_STATS'),('android.app.ContextImpl$ApplicationContentResolver.getIsSyncable(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationContentResolver.getMasterSyncAutomatically()','android.permission.READ_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationContentResolver.getPeriodicSyncs(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationContentResolver.getSyncAutomatically(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationContentResolver.getSyncStatus(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.app.ContextImpl$ApplicationContentResolver.isSyncActive(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.app.ContextImpl$ApplicationContentResolver.isSyncPending(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.app.ContextImpl$ApplicationContentResolver.openFileDescriptor(android.net.Uri,java.lang.String)','android.permission.READ_CONTACTS'),('android.app.ContextImpl$ApplicationContentResolver.openInputStream(android.net.Uri)','android.permission.READ_CONTACTS'),('android.app.ContextImpl$ApplicationContentResolver.openOutputStream(android.net.Uri)','android.permission.READ_CONTACTS'),('android.app.ContextImpl$ApplicationContentResolver.query(android.net.Uri,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String)','android.permission.READ_CONTACTS'),('android.app.ContextImpl$ApplicationContentResolver.removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.WRITE_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationContentResolver.setIsSyncable(android.accounts.Account,java.lang.String,int)','android.permission.WRITE_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationContentResolver.setMasterSyncAutomatically(boolean)','android.permission.WRITE_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationContentResolver.setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)','android.permission.WRITE_SYNC_SETTINGS'),('android.app.ContextImpl$ApplicationPackageManager.addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.app.ContextImpl$ApplicationPackageManager.addPreferredActivity(IntentFilter,int,ComponentName[],ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.app.ContextImpl$ApplicationPackageManager.clearApplicationUserData(java.lang.String,IPackageDataObserver)','android.permission.CLEAR_APP_USER_DATA'),('android.app.ContextImpl$ApplicationPackageManager.clearApplicationUserData(String,IPackageDataObserver)','android.permission.CLEAR_APP_USER_DATA'),('android.app.ContextImpl$ApplicationPackageManager.clearPackagePreferredActivities(java.lang.String)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.app.ContextImpl$ApplicationPackageManager.clearPackagePreferredActivities(String)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.app.ContextImpl$ApplicationPackageManager.deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)','android.permission.DELETE_CACHE_FILES'),('android.app.ContextImpl$ApplicationPackageManager.deleteApplicationCacheFiles(String,IPackageDataObserver)','android.permission.DELETE_CACHE_FILES'),('android.app.ContextImpl$ApplicationPackageManager.deletePackage(java.lang.String,IPackageDeleteObserver,int)','android.permission.DELETE_PACKAGES'),('android.app.ContextImpl$ApplicationPackageManager.deletePackage(String,IPackageDeleteObserver,int)','android.permission.DELETE_PACKAGES'),('android.app.ContextImpl$ApplicationPackageManager.freeStorage(long,android.content.IntentSender)','android.permission.CLEAR_APP_CACHE'),('android.app.ContextImpl$ApplicationPackageManager.freeStorage(long,IntentSender)','android.permission.CLEAR_APP_CACHE'),('android.app.ContextImpl$ApplicationPackageManager.freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)','android.permission.CLEAR_APP_CACHE'),('android.app.ContextImpl$ApplicationPackageManager.freeStorageAndNotify(long,IPackageDataObserver)','android.permission.CLEAR_APP_CACHE'),('android.app.ContextImpl$ApplicationPackageManager.getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)','android.permission.GET_PACKAGE_SIZE'),('android.app.ContextImpl$ApplicationPackageManager.getPackageSizeInfo(String,IPackageStatsObserver)','android.permission.GET_PACKAGE_SIZE'),('android.app.ContextImpl$ApplicationPackageManager.installPackage(Uri,IPackageInstallObserver,int,java.lang.String)','android.permission.INSTALL_PACKAGES'),('android.app.ContextImpl$ApplicationPackageManager.installPackage(Uri,IPackageInstallObserver,int,String)','android.permission.INSTALL_PACKAGES'),('android.app.ContextImpl$ApplicationPackageManager.movePackage(java.lang.String,IPackageMoveObserver,int)','android.permission.MOVE_PACKAGE'),('android.app.ContextImpl$ApplicationPackageManager.movePackage(String,IPackageMoveObserver,int)','android.permission.MOVE_PACKAGE'),('android.app.ContextImpl$ApplicationPackageManager.replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.app.ContextImpl$ApplicationPackageManager.replacePreferredActivity(IntentFilter,int,ComponentName[],ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.app.ContextImpl$ApplicationPackageManager.setApplicationEnabledSetting(java.lang.String,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE'),('android.app.ContextImpl$ApplicationPackageManager.setApplicationEnabledSetting(String,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE'),('android.app.ContextImpl$ApplicationPackageManager.setComponentEnabledSetting(android.content.ComponentName,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE'),('android.app.ContextImpl$ApplicationPackageManager.setComponentEnabledSetting(ComponentName,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE'),('android.app.ContextImpl.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.ContextImpl.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.ContextImpl.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.ContextImpl.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.ContextImpl.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.ContextImpl.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.ExpandableListActivity.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.ExpandableListActivity.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.ExpandableListActivity.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.ExpandableListActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.ExpandableListActivity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.app.ExpandableListActivity.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.ExpandableListActivity.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.FullBackupAgent.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.FullBackupAgent.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.FullBackupAgent.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.FullBackupAgent.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.FullBackupAgent.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.FullBackupAgent.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.IActivityManager$Stub$Proxy.bindBackupAgent(android.content.pm.ApplicationInfo,int)','android.permission.BACKUP'),('android.app.IActivityManager$Stub$Proxy.clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)','android.permission.CLEAR_APP_USER_DATA'),('android.app.IActivityManager$Stub$Proxy.forceStopPackage(java.lang.String)','android.permission.FORCE_STOP_PACKAGES'),('android.app.IActivityManager$Stub$Proxy.getRecentTasks(int,int)','android.permission.GET_TASKS'),('android.app.IActivityManager$Stub$Proxy.getTasks(int,int,android.app.IThumbnailReceiver)','android.permission.GET_TASKS'),('android.app.IActivityManager$Stub$Proxy.killBackgroundProcesses(java.lang.String)','android.permission.KILL_BACKGROUND_PROCESSES'),('android.app.IActivityManager$Stub$Proxy.moveTaskBackwards(int)','android.permission.REORDER_TASKS'),('android.app.IActivityManager$Stub$Proxy.moveTaskToBack(int)','android.permission.REORDER_TASKS'),('android.app.IActivityManager$Stub$Proxy.moveTaskToFront(int)','android.permission.REORDER_TASKS'),('android.app.IActivityManager$Stub$Proxy.profileControl(java.lang.String,boolean,java.lang.String,android.os.ParcelFileDescriptor)','android.permission.SET_ACTIVITY_WATCHER'),('android.app.IActivityManager$Stub$Proxy.resumeAppSwitches()','android.permission.STOP_APP_SWITCHES'),('android.app.IActivityManager$Stub$Proxy.setActivityController(android.app.IActivityController)','android.permission.SET_ACTIVITY_WATCHER'),('android.app.IActivityManager$Stub$Proxy.setAlwaysFinish(boolean)','android.permission.SET_ALWAYS_FINISH'),('android.app.IActivityManager$Stub$Proxy.setDebugApp(java.lang.String,boolean,boolean)','android.permission.SET_DEBUG_APP'),('android.app.IActivityManager$Stub$Proxy.setPersistent(android.os.IBinder,boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.app.IActivityManager$Stub$Proxy.setProcessForeground(android.os.IBinder,int,boolean)','android.permission.SET_PROCESS_LIMIT'),('android.app.IActivityManager$Stub$Proxy.setProcessLimit(int)','android.permission.SET_PROCESS_LIMIT'),('android.app.IActivityManager$Stub$Proxy.shutdown(int)','android.permission.SHUTDOWN'),('android.app.IActivityManager$Stub$Proxy.signalPersistentProcesses(int)','android.permission.SIGNAL_PERSISTENT_PROCESSES'),('android.app.IActivityManager$Stub$Proxy.stopAppSwitches()','android.permission.STOP_APP_SWITCHES'),('android.app.IActivityManager$Stub$Proxy.unbroadcastIntent(android.app.IApplicationThread,android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.IActivityManager$Stub$Proxy.unhandledBack(int)','android.permission.FORCE_BACK'),('android.app.IActivityManager$Stub$Proxy.updateConfiguration(android.content.res.Configuration)','android.permission.CHANGE_CONFIGURATION'),('android.app.IAlarmManager$Stub$Proxy.setTime(long)','android.permission.SET_TIME'),('android.app.IAlarmManager$Stub$Proxy.setTimeZone(java.lang.String)','android.permission.SET_TIME_ZONE'),('android.app.Instrumentation.invokeContextMenuAction(android.app.Activity,int,int)','android.permission.INJECT_EVENTS'),('android.app.Instrumentation.sendCharacterSync(int)','android.permission.INJECT_EVENTS'),('android.app.Instrumentation.sendKeyDownUpSync(int)','android.permission.INJECT_EVENTS'),('android.app.Instrumentation.sendKeySync(android.view.KeyEvent)','android.permission.INJECT_EVENTS'),('android.app.Instrumentation.sendPointerSync(android.view.MotionEvent)','android.permission.INJECT_EVENTS'),('android.app.Instrumentation.sendStringSync(java.lang.String)','android.permission.INJECT_EVENTS'),('android.app.Instrumentation.sendTrackballEventSync(android.view.MotionEvent)','android.permission.INJECT_EVENTS'),('android.app.IntentService.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.IntentService.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.IntentService.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.IntentService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.IntentService.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.IntentService.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.IStatusBar$Stub$Proxy.activate()','android.permission.EXPAND_STATUS_BAR'),('android.app.IStatusBar$Stub$Proxy.addIcon(java.lang.String,java.lang.String,int,int)','android.permission.STATUS_BAR'),('android.app.IStatusBar$Stub$Proxy.deactivate()','android.permission.EXPAND_STATUS_BAR'),('android.app.IStatusBar$Stub$Proxy.disable(int,android.os.IBinder,java.lang.String)','android.permission.STATUS_BAR'),('android.app.IStatusBar$Stub$Proxy.removeIcon(android.os.IBinder)','android.permission.STATUS_BAR'),('android.app.IStatusBar$Stub$Proxy.toggle()','android.permission.EXPAND_STATUS_BAR'),('android.app.IStatusBar$Stub$Proxy.updateIcon(android.os.IBinder,java.lang.String,java.lang.String,int,int)','android.permission.STATUS_BAR'),('android.app.IWallpaperManager$Stub$Proxy.setDimensionHints(int,int)','android.permission.SET_WALLPAPER_HINTS'),('android.app.IWallpaperManager$Stub$Proxy.setWallpaper(java.lang.String)','android.permission.SET_WALLPAPER'),('android.app.IWallpaperManager$Stub$Proxy.setWallpaperComponent(android.content.ComponentName)','android.permission.SET_WALLPAPER_COMPONENT'),('android.app.KeyguardManager$KeyguardLock.disableKeyguard()','android.permission.DISABLE_KEYGUARD'),('android.app.KeyguardManager$KeyguardLock.reenableKeyguard()','android.permission.DISABLE_KEYGUARD'),('android.app.KeyguardManager.exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)','android.permission.DISABLE_KEYGUARD'),('android.app.ListActivity.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.ListActivity.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.ListActivity.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.ListActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.ListActivity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.app.ListActivity.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.ListActivity.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.NotificationManager.notify(int,android.app.Notification)','android.permission.VIBRATE'),('android.app.NotificationManager.notify(java.lang.String,int,android.app.Notification)','android.permission.VIBRATE'),('android.app.Service.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.Service.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.Service.sendBroadcast(android.content.Intent)',''),('android.app.Service.sendOrderedBroadcast(android.content.Intent,java.lang.String)',''),('android.app.Service.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.Service.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.Service.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.Service.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.Service.startActivity(android.content.Intent)',''),('android.app.Service.startService(android.content.Intent)',''),('android.app.StatusBarManager.addIcon(java.lang.String,int,int)','android.permission.STATUS_BAR'),('android.app.StatusBarManager.collapse()','android.permission.EXPAND_STATUS_BAR'),('android.app.StatusBarManager.disable(int)','android.permission.STATUS_BAR'),('android.app.StatusBarManager.expand()','android.permission.EXPAND_STATUS_BAR'),('android.app.StatusBarManager.removeIcon(android.os.IBinder)','android.permission.STATUS_BAR'),('android.app.StatusBarManager.toggle()','android.permission.EXPAND_STATUS_BAR'),('android.app.StatusBarManager.updateIcon(android.os.IBinder,java.lang.String,int,int)','android.permission.STATUS_BAR'),('android.app.TabActivity.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.app.TabActivity.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.TabActivity.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.app.TabActivity.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.app.TabActivity.setPersistent(boolean)','android.permission.PERSISTENT_ACTIVITY'),('android.app.TabActivity.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.TabActivity.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.WallpaperManager.clear()','android.permission.SET_WALLPAPER'),('android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.app.WallpaperManager.setResource(int)','android.permission.SET_WALLPAPER'),('android.app.WallpaperManager.setStream(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.app.WallpaperManager.suggestDesiredDimensions(int,int)','android.permission.SET_WALLPAPER_HINTS'),('android.appwidget.AppWidgetManager.bindAppWidgetId(int,android.content.ComponentName)','android.permission.BIND_APPWIDGET'),('android.bluetooth.BluetoothA2dp.connectSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothA2dp.disconnectSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothA2dp.getConnectedSinks()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothA2dp.getNonDisconnectedSinks()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothA2dp.getSinkPriority(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothA2dp.getSinkState(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothA2dp.isSinkConnected(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothA2dp.resumeSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothA2dp.setSinkPriority(android.bluetooth.BluetoothDevice,int)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothA2dp.suspendSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothAdapter.cancelDiscovery()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothAdapter.disable()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothAdapter.enable()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothAdapter.getAddress()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.getBondedDevices()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.getDiscoverableTimeout()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.getName()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.getScanMode()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.getState()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.isDiscovering()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.isEnabled()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothAdapter.setDiscoverableTimeout(int)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothAdapter.setName(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothAdapter.setScanMode(int)','android.permission.WRITE_SECURE_SETTINGS'),('android.bluetooth.BluetoothAdapter.setScanMode(int,int)','android.permission.WRITE_SECURE_SETTINGS'),('android.bluetooth.BluetoothAdapter.startDiscovery()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothDevice.cancelBondProcess()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothDevice.cancelPairingUserInput()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothDevice.createBond()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord(java.util.UUID)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothDevice.fetchUuidsWithSdp()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothDevice.getBondState()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothDevice.getName()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothDevice.getServiceChannel(android.os.ParcelUuid)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothDevice.getUuids()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothDevice.removeBond()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothDevice.setPairingConfirmation(boolean)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothDevice.setPasskey(int)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothDevice.setPin([B)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothHeadset.connectHeadset(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothHeadset.disconnectHeadset()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothHeadset.getBatteryUsageHint()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothHeadset.getCurrentHeadset()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothHeadset.getPriority(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothHeadset.getState()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothHeadset.isConnected(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothHeadset.setPriority(android.bluetooth.BluetoothDevice,int)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothHeadset.startVoiceRecognition()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothHeadset.stopVoiceRecognition()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothPbap.disconnect()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.BluetoothPbap.getClient()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothPbap.getState()','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothPbap.isConnected(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.BluetoothSocket.connect()','android.permission.BLUETOOTH'),('android.bluetooth.HeadsetBase.acquireWakeLock()','android.permission.WAKE_LOCK'),('android.bluetooth.HeadsetBase.finalize()','android.permission.WAKE_LOCK'),('android.bluetooth.HeadsetBase.handleInput(java.lang.String)','android.permission.WAKE_LOCK'),('android.bluetooth.HeadsetBase.releaseWakeLock()','android.permission.WAKE_LOCK'),('android.bluetooth.IBluetooth$Stub$Proxy.addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.cancelBondProcess(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.cancelDiscovery()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.cancelPairingUserInput(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.createBond(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.disable(boolean)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.enable()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getAddress()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getBluetoothState()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getBondState(java.lang.String)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getDiscoverableTimeout()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getName()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getRemoteClass(java.lang.String)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getRemoteName(java.lang.String)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getRemoteUuids(java.lang.String)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getScanMode()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.getTrustState(java.lang.String)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.isDiscovering()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.isEnabled()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.listBonds()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.removeBond(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.removeServiceRecord(int)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetooth$Stub$Proxy.setDiscoverableTimeout(int)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.setName(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.setPairingConfirmation(java.lang.String,boolean)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.setPasskey(java.lang.String,int)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.setPin(java.lang.String,[B)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.setScanMode(int,int)','android.permission.WRITE_SECURE_SETTINGS'),('android.bluetooth.IBluetooth$Stub$Proxy.setTrust(java.lang.String,boolean)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetooth$Stub$Proxy.startDiscovery()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.connectSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.disconnectSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.getConnectedSinks()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.getNonDisconnectedSinks()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.getSinkPriority(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.getSinkState(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.resumeSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.setSinkPriority(android.bluetooth.BluetoothDevice,int)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothA2dp$Stub$Proxy.suspendSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.connectHeadset(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.disconnectHeadset()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.getBatteryUsageHint()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.getCurrentHeadset()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.getPriority(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.getState()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.isConnected(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.setPriority(android.bluetooth.BluetoothDevice,int)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.startVoiceRecognition()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothHeadset$Stub$Proxy.stopVoiceRecognition()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothPbap$Stub$Proxy.connect(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothPbap$Stub$Proxy.disconnect()','android.permission.BLUETOOTH_ADMIN'),('android.bluetooth.IBluetoothPbap$Stub$Proxy.getClient()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothPbap$Stub$Proxy.getState()','android.permission.BLUETOOTH'),('android.bluetooth.IBluetoothPbap$Stub$Proxy.isConnected(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.bluetooth.ScoSocket.acquireWakeLock()','android.permission.WAKE_LOCK'),('android.bluetooth.ScoSocket.close()','android.permission.WAKE_LOCK'),('android.bluetooth.ScoSocket.finalize()','android.permission.WAKE_LOCK'),('android.bluetooth.ScoSocket.releaseWakeLock()','android.permission.WAKE_LOCK'),('android.bluetooth.ScoSocket.releaseWakeLockNow()','android.permission.WAKE_LOCK'),('android.content.ContentResolver.addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentResolver.getCurrentSync()','android.permission.READ_SYNC_STATS'),('android.content.ContentResolver.getIsSyncable(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.ContentResolver.getMasterSyncAutomatically()','android.permission.READ_SYNC_SETTINGS'),('android.content.ContentResolver.getPeriodicSyncs(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.ContentResolver.getSyncAutomatically(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.ContentResolver.getSyncStatus(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.ContentResolver.isSyncActive(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.ContentResolver.isSyncPending(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.ContentResolver.openFileDescriptor(android.net.Uri,java.lang.String)','android.permission.READ_CONTACTS'),('android.content.ContentResolver.openInputStream(android.net.Uri)','android.permission.READ_CONTACTS'),('android.content.ContentResolver.openOutputStream(android.net.Uri)','android.permission.READ_CONTACTS'),('android.content.ContentResolver.query(android.net.Uri,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String)','android.permission.READ_CONTACTS'),('android.content.ContentResolver.removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentResolver.setIsSyncable(android.accounts.Account,java.lang.String,int)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentResolver.setMasterSyncAutomatically(boolean)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentResolver.setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentService.<init>(android.content.Context,boolean)','android.permission.GET_ACCOUNTS'),('android.content.ContentService.addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentService.dump(java.io.FileDescriptor,java.io.PrintWriter,[Ljava.lang.String;)','android.permission.DUMP'),('android.content.ContentService.getCurrentSync()','android.permission.READ_SYNC_STATS'),('android.content.ContentService.getIsSyncable(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.ContentService.getMasterSyncAutomatically()','android.permission.READ_SYNC_SETTINGS'),('android.content.ContentService.getPeriodicSyncs(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.ContentService.getSyncAutomatically(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.ContentService.getSyncStatus(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.ContentService.isSyncActive(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.ContentService.isSyncPending(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.ContentService.main(android.content.Context,boolean)','android.permission.GET_ACCOUNTS'),('android.content.ContentService.removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentService.setIsSyncable(android.accounts.Account,java.lang.String,int)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentService.setMasterSyncAutomatically(boolean)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.ContentService.setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.Context.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.content.Context.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.content.Context.sendBroadcast(android.content.Intent)',''),('android.content.Context.sendOrderedBroadcast(android.content.Intent,java.lang.String)',''),('android.content.Context.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.content.Context.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.content.Context.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.content.Context.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.content.Context.startActivity(android.content.Intent)',''),('android.content.Context.startService(android.content.Intent)',''),('android.content.ContextWrapper.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.content.ContextWrapper.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.content.ContextWrapper.sendBroadcast(android.content.Intent)',''),('android.content.ContextWrapper.sendOrderedBroadcast(android.content.Intent,java.lang.String)',''),('android.content.ContextWrapper.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.content.ContextWrapper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.content.ContextWrapper.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.content.ContextWrapper.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.content.ContextWrapper.startActivity(android.content.Intent)',''),('android.content.ContextWrapper.startService(android.content.Intent)',''),('android.content.IContentService$Stub$Proxy.addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.IContentService$Stub$Proxy.getCurrentSync()','android.permission.READ_SYNC_STATS'),('android.content.IContentService$Stub$Proxy.getIsSyncable(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.IContentService$Stub$Proxy.getMasterSyncAutomatically()','android.permission.READ_SYNC_SETTINGS'),('android.content.IContentService$Stub$Proxy.getPeriodicSyncs(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.IContentService$Stub$Proxy.getSyncAutomatically(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_SETTINGS'),('android.content.IContentService$Stub$Proxy.getSyncStatus(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.IContentService$Stub$Proxy.isSyncActive(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.IContentService$Stub$Proxy.isSyncPending(android.accounts.Account,java.lang.String)','android.permission.READ_SYNC_STATS'),('android.content.IContentService$Stub$Proxy.removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.IContentService$Stub$Proxy.setIsSyncable(android.accounts.Account,java.lang.String,int)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.IContentService$Stub$Proxy.setMasterSyncAutomatically(boolean)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.IContentService$Stub$Proxy.setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)','android.permission.WRITE_SYNC_SETTINGS'),('android.content.MutableContextWrapper.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.content.MutableContextWrapper.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.content.MutableContextWrapper.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.content.MutableContextWrapper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.content.MutableContextWrapper.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.content.MutableContextWrapper.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.content.pm.IPackageManager$Stub$Proxy.addPreferredActivity(android.content.IntentFilter,int,[Landroid.content.ComponentName;,android.content.ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.content.pm.IPackageManager$Stub$Proxy.clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)','android.permission.CLEAR_APP_USER_DATA'),('android.content.pm.IPackageManager$Stub$Proxy.clearPackagePreferredActivities(java.lang.String)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.content.pm.IPackageManager$Stub$Proxy.deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)','android.permission.DELETE_CACHE_FILES'),('android.content.pm.IPackageManager$Stub$Proxy.deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)','android.permission.DELETE_PACKAGES'),('android.content.pm.IPackageManager$Stub$Proxy.freeStorage(long,android.content.IntentSender)','android.permission.CLEAR_APP_CACHE'),('android.content.pm.IPackageManager$Stub$Proxy.freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)','android.permission.CLEAR_APP_CACHE'),('android.content.pm.IPackageManager$Stub$Proxy.installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)','android.permission.INSTALL_PACKAGES'),('android.content.pm.IPackageManager$Stub$Proxy.movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)','android.permission.MOVE_PACKAGE'),('android.content.pm.IPackageManager$Stub$Proxy.replacePreferredActivity(android.content.IntentFilter,int,[Landroid.content.ComponentName;,android.content.ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.content.pm.IPackageManager$Stub$Proxy.setApplicationEnabledSetting(java.lang.String,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE'),('android.content.pm.IPackageManager$Stub$Proxy.setComponentEnabledSetting(android.content.ComponentName,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE'),('android.content.pm.IPackageManager$Stub$Proxy.setInstallLocation(int)','android.permission.WRITE_SECURE_SETTINGS'),('android.content.pm.IPackageManager$Stub$Proxy.updateExternalMediaStatus(boolean,boolean)',''),('android.content.pm.PackageManager.addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.content.pm.PackageManager.clearApplicationUserData(java.lang.String,IPackageDataObserver)','android.permission.CLEAR_APP_USER_DATA'),('android.content.pm.PackageManager.clearPackagePreferredActivities(java.lang.String)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.content.pm.PackageManager.deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)','android.permission.DELETE_CACHE_FILES'),('android.content.pm.PackageManager.deletePackage(java.lang.String,IPackageDeleteObserver,int)','android.permission.DELETE_PACKAGES'),('android.content.pm.PackageManager.freeStorage(long,android.content.IntentSender)','android.permission.CLEAR_APP_CACHE'),('android.content.pm.PackageManager.freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)','android.permission.CLEAR_APP_CACHE'),('android.content.pm.PackageManager.getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)','android.permission.GET_PACKAGE_SIZE'),('android.content.pm.PackageManager.installPackage(Uri,IPackageInstallObserver,int,java.lang.String)','android.permission.INSTALL_PACKAGES'),('android.content.pm.PackageManager.movePackage(java.lang.String,IPackageMoveObserver,int)','android.permission.MOVE_PACKAGE'),('android.content.pm.PackageManager.replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)','android.permission.SET_PREFERRED_APPLICATIONS'),('android.content.pm.PackageManager.setApplicationEnabledSetting(java.lang.String,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE'),('android.content.pm.PackageManager.setComponentEnabledSetting(android.content.ComponentName,int,int)','android.permission.CHANGE_COMPONENT_ENABLED_STATE'),('android.hardware.Camera.native_setup(java.lang.Object)','android.permission.CAMERA'),('android.hardware.Camera.open()','android.permission.CAMERA'),('android.inputmethodservice.AbstractInputMethodService.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.inputmethodservice.AbstractInputMethodService.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.inputmethodservice.AbstractInputMethodService.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.inputmethodservice.AbstractInputMethodService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.inputmethodservice.AbstractInputMethodService.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.inputmethodservice.AbstractInputMethodService.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.location.ILocationManager$Stub$Proxy.addGpsStatusListener(android.location.IGpsStatusListener)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.addProximityAlert(double,double,float,long,android.app.PendingIntent)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.ILocationManager$Stub$Proxy.clearTestProviderEnabled(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.ILocationManager$Stub$Proxy.clearTestProviderLocation(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.ILocationManager$Stub$Proxy.clearTestProviderStatus(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.ILocationManager$Stub$Proxy.getLastKnownLocation(java.lang.String)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.getProviderInfo(java.lang.String)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.getProviders(boolean)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.isProviderEnabled(java.lang.String)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.removeTestProvider(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.ILocationManager$Stub$Proxy.reportLocation(android.location.Location,boolean)','android.permission.INSTALL_LOCATION_PROVIDER'),('android.location.ILocationManager$Stub$Proxy.requestLocationUpdates(java.lang.String,long,float,android.location.ILocationListener)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.requestLocationUpdatesPI(java.lang.String,long,float,android.app.PendingIntent)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)','android.permission.ACCESS_FINE_LOCATION'),('android.location.ILocationManager$Stub$Proxy.setTestProviderEnabled(java.lang.String,boolean)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.ILocationManager$Stub$Proxy.setTestProviderLocation(java.lang.String,android.location.Location)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.ILocationManager$Stub$Proxy.setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager.addGpsStatusListener(android.location.GpsStatus$Listener)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.addNmeaListener(android.location.GpsStatus$NmeaListener)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.addProximityAlert(double,double,float,long,android.app.PendingIntent)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager.best(java.util.List)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.clearTestProviderEnabled(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager.clearTestProviderLocation(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager.clearTestProviderStatus(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.getLastKnownLocation(java.lang.String)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.getProvider(java.lang.String)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.getProviders(android.location.Criteria,boolean)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.getProviders(boolean)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.isProviderEnabled(java.lang.String)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.removeTestProvider(java.lang.String)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager.setTestProviderEnabled(java.lang.String,boolean)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager.setTestProviderLocation(java.lang.String,android.location.Location)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager.setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)','android.permission.ACCESS_MOCK_LOCATION'),('android.location.LocationManager._requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)','android.permission.ACCESS_FINE_LOCATION'),('android.location.LocationManager._requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)','android.permission.ACCESS_FINE_LOCATION'),('android.media.AsyncPlayer.acquireWakeLock()','android.permission.WAKE_LOCK'),('android.media.AsyncPlayer.enqueueLocked(android.media.AsyncPlayer$Command)','android.permission.WAKE_LOCK'),('android.media.AsyncPlayer.play(android.content.Context,android.net.Uri,boolean,int)','android.permission.WAKE_LOCK'),('android.media.AsyncPlayer.releaseWakeLock()','android.permission.WAKE_LOCK'),('android.media.AsyncPlayer.stop()','android.permission.WAKE_LOCK'),('android.media.AudioManager.isBluetoothA2dpOn()','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.isWiredHeadsetOn()','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.setBluetoothScoOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.setMicrophoneMute(boolean)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.setMode(int)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.setParameter(java.lang.String,java.lang.String)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.setParameters(java.lang.String)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.setSpeakerphoneOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.startBluetoothSco()','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioManager.stopBluetoothSco()','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioRecord.<init>(int,int,int,int,int)','android.permission.RECORD_AUDIO'),('android.media.AudioService.setBluetoothScoOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioService.setMode(int,android.os.IBinder)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioService.setSpeakerphoneOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioService.startBluetoothSco(android.os.IBinder)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.AudioService.stopBluetoothSco(android.os.IBinder)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.IAudioService$Stub$Proxy.setBluetoothScoOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.IAudioService$Stub$Proxy.setMode(int,android.os.IBinder)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.IAudioService$Stub$Proxy.setSpeakerphoneOn(boolean)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.IAudioService$Stub$Proxy.startBluetoothSco(android.os.IBinder)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.IAudioService$Stub$Proxy.stopBluetoothSco(android.os.IBinder)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.media.MediaPlayer.start()','android.permission.WAKE_LOCK'),('android.media.MediaPlayer.stayAwake(boolean)','android.permission.WAKE_LOCK'),('android.media.MediaPlayer.stop()','android.permission.WAKE_LOCK'),('android.media.MediaRecorder.setAudioSource(int)','android.permission.RECORD_AUDIO'),('android.media.MediaRecorder.setVideoSource(int)','android.permission.CAMERA'),('android.media.RingtoneManager.setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)','android.permission.WRITE_SETTINGS'),('android.net.ConnectivityManager.getActiveNetworkInfo()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getAllNetworkInfo()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getLastTetherError(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getMobileDataEnabled()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getNetworkInfo(int)','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getNetworkPreference()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getTetherableIfaces()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getTetherableUsbRegexs()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getTetherableWifiRegexs()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getTetheredIfaces()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.getTetheringErroredIfaces()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.isTetheringSupported()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ConnectivityManager.requestRouteToHost(int,int)','android.permission.CHANGE_NETWORK_STATE'),('android.net.ConnectivityManager.setBackgroundDataSetting(boolean)','android.permission.CHANGE_BACKGROUND_DATA_SETTING'),('android.net.ConnectivityManager.setMobileDataEnabled(boolean)','android.permission.CHANGE_NETWORK_STATE'),('android.net.ConnectivityManager.setNetworkPreference(int)','android.permission.CHANGE_NETWORK_STATE'),('android.net.ConnectivityManager.setRadio(int,boolean)','android.permission.CHANGE_NETWORK_STATE'),('android.net.ConnectivityManager.setRadios(boolean)','android.permission.CHANGE_NETWORK_STATE'),('android.net.ConnectivityManager.startUsingNetworkFeature(int,java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.net.ConnectivityManager.stopUsingNetworkFeature(int,java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.net.ConnectivityManager.tether(java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.net.ConnectivityManager.untether(java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.net.Downloads$ById.deleteDownload(android.content.Context,long)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ById.getMimeTypeForId(android.content.Context,long)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ById.getStatus(android.content.Context,long)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ById.openDownload(android.content.Context,long,java.lang.String)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ById.openDownloadStream(android.content.Context,long)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ById.startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ByUri.getCurrentOtaDownloads(android.content.Context,java.lang.String)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ByUri.getProgressCursor(android.content.Context,long)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ByUri.getStatus(android.content.Context,java.lang.String,long)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ByUri.removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$ByUri.startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.Downloads$DownloadBase.startDownloadByUri(android.content.Context,java.lang.String,java.lang.String,boolean,int,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','android.permission.ACCESS_DOWNLOAD_MANAGER'),('android.net.http.RequestQueue.enablePlatformNotifications()','android.permission.ACCESS_NETWORK_STATE'),('android.net.http.RequestQueue.setProxyConfig()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getActiveNetworkInfo()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getAllNetworkInfo()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getLastTetherError(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getMobileDataEnabled()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getNetworkInfo(int)','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getNetworkPreference()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getTetherableIfaces()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getTetherableUsbRegexs()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getTetherableWifiRegexs()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getTetheredIfaces()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.getTetheringErroredIfaces()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.isTetheringSupported()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.requestRouteToHost(int,int)','android.permission.CHANGE_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.setBackgroundDataSetting(boolean)','android.permission.CHANGE_BACKGROUND_DATA_SETTING'),('android.net.IConnectivityManager$Stub$Proxy.setMobileDataEnabled(boolean)','android.permission.CHANGE_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.setNetworkPreference(int)','android.permission.CHANGE_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.setRadio(int,boolean)','android.permission.CHANGE_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.setRadios(boolean)','android.permission.CHANGE_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)','android.permission.ACCESS_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.stopUsingNetworkFeature(int,java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.tether(java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.net.IConnectivityManager$Stub$Proxy.untether(java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.net.IThrottleManager$Stub$Proxy.getByteCount(java.lang.String,int,int,int)','android.permission.ACCESS_NETWORK_STATE'),('android.net.IThrottleManager$Stub$Proxy.getCliffLevel(java.lang.String,int)','android.permission.ACCESS_NETWORK_STATE'),('android.net.IThrottleManager$Stub$Proxy.getCliffThreshold(java.lang.String,int)','android.permission.ACCESS_NETWORK_STATE'),('android.net.IThrottleManager$Stub$Proxy.getHelpUri()','android.permission.ACCESS_NETWORK_STATE'),('android.net.IThrottleManager$Stub$Proxy.getPeriodStartTime(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.net.IThrottleManager$Stub$Proxy.getResetTime(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.net.IThrottleManager$Stub$Proxy.getThrottle(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.net.MobileDataStateTracker.reconnect()','android.permission.MODIFY_PHONE_STATE'),('android.net.MobileDataStateTracker.setRadio(boolean)','android.permission.MODIFY_PHONE_STATE'),('android.net.MobileDataStateTracker.teardown()','android.permission.MODIFY_PHONE_STATE'),('android.net.NetworkInfo.isConnectedOrConnecting()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ThrottleManager.getByteCount(java.lang.String,int,int,int)','android.permission.ACCESS_NETWORK_STATE'),('android.net.ThrottleManager.getCliffLevel(java.lang.String,int)','android.permission.ACCESS_NETWORK_STATE'),('android.net.ThrottleManager.getCliffThreshold(java.lang.String,int)','android.permission.ACCESS_NETWORK_STATE'),('android.net.ThrottleManager.getHelpUri()','android.permission.ACCESS_NETWORK_STATE'),('android.net.ThrottleManager.getPeriodStartTime(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.net.ThrottleManager.getResetTime(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.acquireMulticastLock(android.os.IBinder,java.lang.String)','android.permission.CHANGE_WIFI_MULTICAST_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.acquireWifiLock(android.os.IBinder,int,java.lang.String)','android.permission.WAKE_LOCK'),('android.net.wifi.IWifiManager$Stub$Proxy.addOrUpdateNetwork(android.net.wifi.WifiConfiguration)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.disableNetwork(int)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.disconnect()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.enableNetwork(int,boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.getConfiguredNetworks()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.getConnectionInfo()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.getDhcpInfo()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.getNumAllowedChannels()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.getScanResults()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.getValidChannelCounts()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.getWifiApEnabledState()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.getWifiEnabledState()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.initializeMulticastFiltering()','android.permission.CHANGE_WIFI_MULTICAST_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.isMulticastEnabled()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.pingSupplicant()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.reassociate()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.reconnect()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.releaseMulticastLock()','android.permission.CHANGE_WIFI_MULTICAST_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.releaseWifiLock(android.os.IBinder)','android.permission.WAKE_LOCK'),('android.net.wifi.IWifiManager$Stub$Proxy.removeNetwork(int)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.saveConfiguration()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.setNumAllowedChannels(int,boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.setWifiEnabled(boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.IWifiManager$Stub$Proxy.startScan(boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager$MulticastLock.acquire()','android.permission.CHANGE_WIFI_MULTICAST_STATE'),('android.net.wifi.WifiManager$MulticastLock.finalize()','android.permission.CHANGE_WIFI_MULTICAST_STATE'),('android.net.wifi.WifiManager$MulticastLock.release()','android.permission.CHANGE_WIFI_MULTICAST_STATE'),('android.net.wifi.WifiManager$WifiLock.acquire()','android.permission.WAKE_LOCK'),('android.net.wifi.WifiManager$WifiLock.finalize()','android.permission.WAKE_LOCK'),('android.net.wifi.WifiManager$WifiLock.release()','android.permission.WAKE_LOCK'),('android.net.wifi.WifiManager.addNetwork(android.net.wifi.WifiConfiguration)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.addOrUpdateNetwork(android.net.wifi.WifiConfiguration)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.disableNetwork(int)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.disconnect()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.enableNetwork(int,boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.getConfiguredNetworks()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.getConnectionInfo()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.getDhcpInfo()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.getNumAllowedChannels()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.getScanResults()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.getValidChannelCounts()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.getWifiApState()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.getWifiState()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.initializeMulticastFiltering()','android.permission.CHANGE_WIFI_MULTICAST_STATE'),('android.net.wifi.WifiManager.isMulticastEnabled()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.isWifiApEnabled()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.isWifiEnabled()','android.permission.ACCESS_WIFI_STATE'),('android.net.wifi.WifiManager.pingSupplicant()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.reassociate()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.reconnect()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.removeNetwork(int)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.saveConfiguration()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.setNumAllowedChannels(int,boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.setWifiEnabled(boolean)','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.startScan()','android.permission.CHANGE_WIFI_STATE'),('android.net.wifi.WifiManager.startScanActive()','android.permission.CHANGE_WIFI_STATE'),('android.os.DropBoxManager.getNextEntry(java.lang.String,long)','android.permission.READ_LOGS'),('android.os.Environment.getExternalStorageDirectory()','android.permission.WRITE_EXTERNAL_STORAGE'),('android.os.Environment.getExternalStoragePublicDirectory(java.lang.String)','android.permission.WRITE_EXTERNAL_STORAGE'),('android.os.IHardwareService$Stub$Proxy.setFlashlightEnabled(boolean)','android.permission.FLASHLIGHT'),('android.os.IMountService$Stub$Proxy.formatMedia','android.permission.MOUNT_FORMAT_FILESYSTEMS'),('android.os.IMountService$Stub$Proxy.mountMedia','android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),('android.os.IMountService$Stub$Proxy.setAutoStartUms','android.permission.WRITE_SETTINGS'),('android.os.IMountService$Stub$Proxy.setPlayNotificationSounds','android.permission.WRITE_SETTINGS'),('android.os.IMountService$Stub$Proxy.shutdown','android.permission.SHUTDOWN'),('android.os.IMountService$Stub$Proxy.unmountMedia','android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),('android.os.INetworkManagementService$Stub$Proxy.attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.detachPppd(java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.disableNat(java.lang.String,java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.enableNat(java.lang.String,java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.getDnsForwarders()','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.getInterfaceRxCounter(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.getInterfaceRxThrottle(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.getInterfaceTxCounter(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.getInterfaceTxThrottle(java.lang.String)','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.getIpForwardingEnabled()','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.isTetheringStarted()','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.isUsbRNDISStarted()','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.listInterfaces()','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.listTetheredInterfaces()','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.listTtys()','android.permission.ACCESS_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.setInterfaceThrottle(java.lang.String,int,int)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.setIpForwardingEnabled(boolean)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.shutdown()','android.permission.SHUTDOWN'),('android.os.INetworkManagementService$Stub$Proxy.startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.startUsbRNDIS()','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.stopAccessPoint()','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.stopTethering()','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.stopUsbRNDIS()','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.tetherInterface(java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.unregisterObserver(android.net.INetworkManagementEventObserver)','android.permission.CHANGE_NETWORK_STATE'),('android.os.INetworkManagementService$Stub$Proxy.untetherInterface(java.lang.String)','android.permission.CHANGE_NETWORK_STATE'),('android.os.IPowerManager$Stub$Proxy.acquireWakeLock(int,android.os.IBinder,java.lang.String)','android.permission.WAKE_LOCK'),('android.os.IPowerManager$Stub$Proxy.clearUserActivityTimeout(long,long)','android.permission.DEVICE_POWER'),('android.os.IPowerManager$Stub$Proxy.crash(java.lang.String)','android.permission.REBOOT'),('android.os.IPowerManager$Stub$Proxy.goToSleep(long)','android.permission.DEVICE_POWER'),('android.os.IPowerManager$Stub$Proxy.goToSleepWithReason(long,int)','android.permission.DEVICE_POWER'),('android.os.IPowerManager$Stub$Proxy.preventScreenOn(boolean)','android.permission.DEVICE_POWER'),('android.os.IPowerManager$Stub$Proxy.reboot(java.lang.String)','android.permission.REBOOT'),('android.os.IPowerManager$Stub$Proxy.releaseWakeLock(android.os.IBinder,int)','android.permission.WAKE_LOCK'),('android.os.IPowerManager$Stub$Proxy.setAttentionLight(boolean,int)','android.permission.DEVICE_POWER'),('android.os.IPowerManager$Stub$Proxy.setBacklightBrightness(int)','android.permission.DEVICE_POWER'),('android.os.IPowerManager$Stub$Proxy.setMaximumScreenOffTimeount(int)','android.permission.WRITE_SECURE_SETTINGS'),('android.os.IPowerManager$Stub$Proxy.setPokeLock(int,android.os.IBinder,java.lang.String)','android.permission.DEVICE_POWER'),('android.os.IPowerManager$Stub$Proxy.setStayOnSetting(int)','android.permission.WRITE_SETTINGS'),('android.os.IPowerManager$Stub$Proxy.userActivityWithForce(long,boolean,boolean)','android.permission.DEVICE_POWER'),('android.os.IVibratorService$Stub$Proxy.cancelVibrate(android.os.IBinder)','android.permission.VIBRATE'),('android.os.IVibratorService$Stub$Proxy.vibrate(long,android.os.IBinder)','android.permission.VIBRATE'),('android.os.IVibratorService$Stub$Proxy.vibratePattern([J,int,android.os.IBinder)','android.permission.VIBRATE'),('android.os.PowerManager$WakeLock.acquire()','android.permission.WAKE_LOCK'),('android.os.PowerManager$WakeLock.acquire(long)','android.permission.WAKE_LOCK'),('android.os.PowerManager$WakeLock.release()','android.permission.WAKE_LOCK'),('android.os.PowerManager$WakeLock.release(int)','android.permission.WAKE_LOCK'),('android.os.PowerManager.goToSleep(long)','android.permission.DEVICE_POWER'),('android.os.PowerManager.reboot(java.lang.String)','android.permission.REBOOT'),('android.os.PowerManager.setBacklightBrightness(int)','android.permission.DEVICE_POWER'),('android.os.RecoverySystem.bootCommand(android.content.Context,java.lang.String)','android.permission.REBOOT'),('android.os.RecoverySystem.installPackage(android.content.Context,java.io.File)','android.permission.REBOOT'),('android.os.RecoverySystem.rebootWipeUserData(android.content.Context)','android.permission.REBOOT'),('android.os.storage.IMountService$Stub$Proxy.createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int)','android.permission.ASEC_CREATE'),('android.os.storage.IMountService$Stub$Proxy.destroySecureContainer(java.lang.String,boolean)','android.permission.ASEC_DESTROY'),('android.os.storage.IMountService$Stub$Proxy.finalizeSecureContainer(java.lang.String)','android.permission.ASEC_CREATE'),('android.os.storage.IMountService$Stub$Proxy.formatVolume(java.lang.String)','android.permission.MOUNT_FORMAT_FILESYSTEMS'),('android.os.storage.IMountService$Stub$Proxy.getSecureContainerList()','android.permission.ASEC_ACCESS'),('android.os.storage.IMountService$Stub$Proxy.getSecureContainerPath(java.lang.String)','android.permission.ASEC_ACCESS'),('android.os.storage.IMountService$Stub$Proxy.getStorageUsers(java.lang.String)','android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),('android.os.storage.IMountService$Stub$Proxy.isSecureContainerMounted(java.lang.String)','android.permission.ASEC_ACCESS'),('android.os.storage.IMountService$Stub$Proxy.mountSecureContainer(java.lang.String,java.lang.String,int)','android.permission.ASEC_MOUNT_UNMOUNT'),('android.os.storage.IMountService$Stub$Proxy.mountVolume(java.lang.String)','android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),('android.os.storage.IMountService$Stub$Proxy.renameSecureContainer(java.lang.String,java.lang.String)','android.permission.ASEC_RENAME'),('android.os.storage.IMountService$Stub$Proxy.setUsbMassStorageEnabled(boolean)','android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),('android.os.storage.IMountService$Stub$Proxy.shutdown(android.os.storage.IMountShutdownObserver)','android.permission.SHUTDOWN'),('android.os.storage.IMountService$Stub$Proxy.unmountSecureContainer(java.lang.String,boolean)','android.permission.ASEC_MOUNT_UNMOUNT'),('android.os.storage.IMountService$Stub$Proxy.unmountVolume(java.lang.String,boolean)','android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),('android.os.storage.StorageManager.disableUsbMassStorage()','android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),('android.os.storage.StorageManager.enableUsbMassStorage()','android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),('android.os.Vibrator.cancel()','android.permission.VIBRATE'),('android.os.Vibrator.vibrate(long)','android.permission.VIBRATE'),('android.os.Vibrator.vibrate([J,int)','android.permission.VIBRATE'),('android.pim.vcard.VCardComposer$HandlerForOutputStream.onInit(android.content.Context)','android.permission.READ_CONTACTS'),('android.pim.vcard.VCardComposer$OneEntryHandler.onInit(android.content.Context)','android.permission.READ_CONTACTS'),('android.pim.vcard.VCardComposer.createOneEntry()','android.permission.READ_CONTACTS'),('android.pim.vcard.VCardComposer.createOneEntry(java.lang.reflect.Method)','android.permission.READ_CONTACTS'),('android.pim.vcard.VCardComposer.createOneEntryInternal(java.lang.String,java.lang.reflect.Method)','android.permission.READ_CONTACTS'),('android.pim.vcard.VCardComposer.init()','android.permission.READ_CONTACTS'),('android.pim.vcard.VCardComposer.init(java.lang.String,[Ljava.lang.String;)','android.permission.READ_CONTACTS'),('android.pim.vcard.VCardEntry.pushIntoContentResolver(android.content.ContentResolver)','android.permission.WRITE_CONTACTS'),('android.pim.vcard.VCardEntryCommitter.onEntryCreated(android.pim.vcard.VCardEntry)','android.permission.WRITE_CONTACTS'),('android.pim.vcard.VCardEntryHandler.onEntryCreated(android.pim.vcard.VCardEntry)','android.permission.WRITE_CONTACTS'),('android.provider.Browser.addSearchUrl(android.content.ContentResolver,java.lang.String)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.canClearHistory(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.clearHistory(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.clearSearches(android.content.ContentResolver)','com.android.browser.permission.WRITE_HISTORY_BOOKMARKS'),('android.provider.Browser.deleteFromHistory(android.content.ContentResolver,java.lang.String)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.deleteHistoryTimeFrame(android.content.ContentResolver,long,long)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.deleteHistoryWhere(android.content.ContentResolver,java.lang.String)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.getAllBookmarks(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.getAllVisitedUrls(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.getVisitedHistory(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.getVisitedLike(android.content.ContentResolver,java.lang.String)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.requestAllIcons(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.truncateHistory(android.content.ContentResolver)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Browser.updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.provider.Calendar$CalendarAlerts.alarmExists(android.content.ContentResolver,long,long,long)','android.permission.READ_CALENDAR'),('android.provider.Calendar$CalendarAlerts.findNextAlarmTime(android.content.ContentResolver,long)','android.permission.READ_CALENDAR'),('android.provider.Calendar$CalendarAlerts.insert(android.content.ContentResolver,long,long,long,long,int)','android.permission.WRITE_CALENDAR'),('android.provider.Calendar$CalendarAlerts.query(android.content.ContentResolver,[Ljava.lang.String;,java.lang.String,[Ljava.lang.String;,java.lang.String)','android.permission.READ_CALENDAR'),('android.provider.Calendar$Calendars.delete(android.content.ContentResolver,java.lang.String,[Ljava.lang.String;)','android.permission.WRITE_CALENDAR'),('android.provider.Calendar$Calendars.deleteCalendarsForAccount(android.content.ContentResolver,android.accounts.Account)','android.permission.WRITE_CALENDAR'),('android.provider.Calendar$Calendars.query(android.content.ContentResolver,[Ljava.lang.String;,java.lang.String,java.lang.String)','android.permission.READ_CALENDAR'),('android.provider.Calendar$EventDays.query(android.content.ContentResolver,int,int)','android.permission.READ_CALENDAR'),('android.provider.Calendar$Events.query(android.content.ContentResolver,[Ljava.lang.String;)','android.permission.READ_CALENDAR'),('android.provider.Calendar$Events.query(android.content.ContentResolver,[Ljava.lang.String;,java.lang.String,java.lang.String)','android.permission.READ_CALENDAR'),('android.provider.Calendar$Instances.query(android.content.ContentResolver,[Ljava.lang.String;,long,long)','android.permission.READ_CALENDAR'),('android.provider.Calendar$Instances.query(android.content.ContentResolver,[Ljava.lang.String;,long,long,java.lang.String,java.lang.String)','android.permission.READ_CALENDAR'),('android.provider.CallLog$Calls.addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,long,int)','android.permission.READ_CONTACTS'),('android.provider.CallLog$Calls.getLastOutgoingCall(android.content.Context)','android.permission.READ_CONTACTS'),('android.provider.CallLog$Calls.removeExpiredEntries(android.content.Context)','android.permission.WRITE_CONTACTS'),('android.provider.Contacts$People.addToGroup(android.content.ContentResolver,long,java.lang.String)','android.permission.READ_CONTACTS'),('android.provider.Contacts$People.addToGroup(android.content.ContentResolver,long,long)','android.permission.WRITE_CONTACTS'),('android.provider.Contacts$People.addToMyContactsGroup(android.content.ContentResolver,long)','android.permission.READ_CONTACTS'),('android.provider.Contacts$People.createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)','android.permission.READ_CONTACTS'),('android.provider.Contacts$People.loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory$Options)','android.permission.READ_CONTACTS'),('android.provider.Contacts$People.markAsContacted(android.content.ContentResolver,long)','android.permission.READ_CONTACTS'),('android.provider.Contacts$People.openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS'),('android.provider.Contacts$People.queryGroups(android.content.ContentResolver,long)','android.permission.READ_CONTACTS'),('android.provider.Contacts$People.setPhotoData(android.content.ContentResolver,android.net.Uri,[B)','android.permission.READ_CONTACTS'),('android.provider.Contacts$People.tryGetMyContactsGroupId(android.content.ContentResolver)','android.permission.READ_CONTACTS'),('android.provider.Contacts$Settings.getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)','android.permission.READ_CONTACTS'),('android.provider.Contacts$Settings.setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)','android.permission.WRITE_CONTACTS'),('android.provider.ContactsContract$Contacts.getLookupUri(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS'),('android.provider.ContactsContract$Contacts.lookupContact(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS'),('android.provider.ContactsContract$Contacts.markAsContacted(android.content.ContentResolver,long)','android.permission.WRITE_CONTACTS'),('android.provider.ContactsContract$Contacts.openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS'),('android.provider.ContactsContract$Data.getContactLookupUri(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS'),('android.provider.ContactsContract$RawContacts.getContactLookupUri(android.content.ContentResolver,android.net.Uri)','android.permission.READ_CONTACTS'),('android.provider.DrmStore.enforceAccessDrmPermission(android.content.Context)','android.permission.ACCESS_DRM'),('android.provider.Settings$Bookmarks.add(android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$Bookmarks.getIntentForShortcut(android.content.ContentResolver,char)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$Secure.putFloat(android.content.ContentResolver,java.lang.String,float)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$Secure.putInt(android.content.ContentResolver,java.lang.String,int)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$Secure.putLong(android.content.ContentResolver,java.lang.String,long)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$Secure.putString(android.content.ContentResolver,java.lang.String,java.lang.String)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$Secure.setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$System.putConfiguration(android.content.ContentResolver,android.content.res.Configuration)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$System.putFloat(android.content.ContentResolver,java.lang.String,float)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$System.putInt(android.content.ContentResolver,java.lang.String,int)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$System.putLong(android.content.ContentResolver,java.lang.String,long)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$System.putString(android.content.ContentResolver,java.lang.String,java.lang.String)','android.permission.WRITE_SETTINGS'),('android.provider.Settings$System.setShowGTalkServiceStatus(android.content.ContentResolver,boolean)','android.permission.WRITE_SETTINGS'),('android.provider.Telephony$Mms.query(android.content.ContentResolver,[Ljava.lang.String;)','android.permission.READ_SMS'),('android.provider.Telephony$Mms.query(android.content.ContentResolver,[Ljava.lang.String;,java.lang.String,java.lang.String)','android.permission.READ_SMS'),('android.provider.Telephony$Sms$Draft.addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)','android.permission.READ_SMS'),('android.provider.Telephony$Sms$Draft.saveMessage(android.content.ContentResolver,android.net.Uri,java.lang.String)','android.permission.WRITE_SMS'),('android.provider.Telephony$Sms$Inbox.addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)','android.permission.READ_SMS'),('android.provider.Telephony$Sms$Outbox.addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)','android.permission.WRITE_SMS'),('android.provider.Telephony$Sms$Sent.addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)','android.permission.READ_SMS'),('android.provider.Telephony$Sms.addMessageToUri(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean)','android.permission.WRITE_SMS'),('android.provider.Telephony$Sms.addMessageToUri(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean,long)','android.permission.WRITE_SMS'),('android.provider.Telephony$Sms.moveMessageToFolder(android.content.Context,android.net.Uri,int,int)','android.permission.WRITE_SMS'),('android.provider.Telephony$Sms.query(android.content.ContentResolver,[Ljava.lang.String;)','android.permission.READ_SMS'),('android.provider.Telephony$Sms.query(android.content.ContentResolver,[Ljava.lang.String;,java.lang.String,java.lang.String)','android.permission.READ_SMS'),('android.provider.Telephony$Threads.getOrCreateThreadId(android.content.Context,java.lang.String)','android.permission.READ_SMS'),('android.provider.Telephony$Threads.getOrCreateThreadId(android.content.Context,java.util.Set)','android.permission.READ_SMS'),('android.provider.UserDictionary$Words.addWord(android.content.Context,java.lang.String,int,int)','android.permission.WRITE_USER_DICTIONARY'),('android.server.BluetoothA2dpService.<init>(android.content.Context,android.server.BluetoothService)','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.addAudioSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.checkSinkSuspendState(int)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.server.BluetoothA2dpService.connectSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothA2dpService.disconnectSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothA2dpService.getConnectedSinks()','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.getNonDisconnectedSinks()','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.getSinkPriority(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.getSinkState(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.handleSinkStateChange(android.bluetooth.BluetoothDevice)','android.permission.MODIFY_AUDIO_SETTINGS'),('android.server.BluetoothA2dpService.isSinkDevice(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.lookupSinksMatchingStates(int[])','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.onBluetoothDisable()','android.permission.MODIFY_AUDIO_SETTINGS'),('android.server.BluetoothA2dpService.onBluetoothEnable()','android.permission.MODIFY_AUDIO_SETTINGS'),('android.server.BluetoothA2dpService.onConnectSinkResult(java.lang.String,boolean)','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.onSinkPropertyChanged(java.lang.String,[Ljava.lang.String;)','android.permission.BLUETOOTH'),('android.server.BluetoothA2dpService.resumeSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothA2dpService.setSinkPriority(android.bluetooth.BluetoothDevice,int)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothA2dpService.suspendSink(android.bluetooth.BluetoothDevice)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.addRemoteDeviceProperties(java.lang.String,[Ljava.lang.String;)','android.permission.BLUETOOTH'),('android.server.BluetoothService.addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)','android.permission.BLUETOOTH'),('android.server.BluetoothService.cancelBondProcess(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.cancelDiscovery()','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.cancelPairingUserInput(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.createBond(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.disable()','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.disable(boolean)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.enable()','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.enable(boolean)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getAddress()','android.permission.BLUETOOTH'),('android.server.BluetoothService.getAddressFromObjectPath(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getAllProperties()','android.permission.BLUETOOTH'),('android.server.BluetoothService.getBluetoothState()','android.permission.BLUETOOTH'),('android.server.BluetoothService.getBondState(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getDiscoverableTimeout()','android.permission.BLUETOOTH'),('android.server.BluetoothService.getName()','android.permission.BLUETOOTH'),('android.server.BluetoothService.getObjectPathFromAddress(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getProperty(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getPropertyInternal(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getRemoteClass(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getRemoteName(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getRemoteUuids(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.getScanMode()','android.permission.BLUETOOTH'),('android.server.BluetoothService.getTrustState(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.isDiscovering()','android.permission.BLUETOOTH'),('android.server.BluetoothService.isEnabled()','android.permission.BLUETOOTH'),('android.server.BluetoothService.listBonds()','android.permission.BLUETOOTH'),('android.server.BluetoothService.persistBluetoothOnSetting(boolean)','android.permission.WRITE_SETTINGS'),('android.server.BluetoothService.removeBond(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.removeServiceRecord(int)','android.permission.BLUETOOTH'),('android.server.BluetoothService.sendUuidIntent(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.setDiscoverableTimeout(int)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.setLinkTimeout(java.lang.String,int)','android.permission.BLUETOOTH'),('android.server.BluetoothService.setName(java.lang.String)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.setPairingConfirmation(java.lang.String,boolean)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.setPasskey(java.lang.String,int)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.setPin(java.lang.String,[B)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.setPropertyBoolean(java.lang.String,boolean)','android.permission.BLUETOOTH'),('android.server.BluetoothService.setPropertyInteger(java.lang.String,int)','android.permission.BLUETOOTH'),('android.server.BluetoothService.setPropertyString(java.lang.String,java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.setScanMode(int,int)','android.permission.WRITE_SECURE_SETTINGS'),('android.server.BluetoothService.setTrust(java.lang.String,boolean)','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.startDiscovery()','android.permission.BLUETOOTH_ADMIN'),('android.server.BluetoothService.updateDeviceServiceChannelCache(java.lang.String)','android.permission.BLUETOOTH'),('android.server.BluetoothService.updateRemoteDevicePropertiesCache(java.lang.String)','android.permission.BLUETOOTH'),('android.server.search.Searchables.buildSearchableList()','android.permission.GLOBAL_SEARCH'),('android.server.search.Searchables.findGlobalSearchActivity()','android.permission.GLOBAL_SEARCH'),('android.service.urlrenderer.UrlRendererService.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.service.urlrenderer.UrlRendererService.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.service.urlrenderer.UrlRendererService.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.service.urlrenderer.UrlRendererService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.service.urlrenderer.UrlRendererService.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.service.urlrenderer.UrlRendererService.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.service.wallpaper.WallpaperService.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.service.wallpaper.WallpaperService.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.service.wallpaper.WallpaperService.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.service.wallpaper.WallpaperService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.service.wallpaper.WallpaperService.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.service.wallpaper.WallpaperService.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.speech.RecognitionService.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.speech.RecognitionService.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.speech.RecognitionService.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.speech.RecognitionService.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.speech.RecognitionService.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.speech.RecognitionService.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.speech.SpeechRecognizer.cancel()','android.permission.RECORD_AUDIO'),('android.speech.SpeechRecognizer.handleCancelMessage()','android.permission.RECORD_AUDIO'),('android.speech.SpeechRecognizer.handleStartListening(android.content.Intent)','android.permission.RECORD_AUDIO'),('android.speech.SpeechRecognizer.handleStopMessage()','android.permission.RECORD_AUDIO'),('android.speech.SpeechRecognizer.startListening(android.content.Intent)','android.permission.RECORD_AUDIO'),('android.speech.SpeechRecognizer.stopListening()','android.permission.RECORD_AUDIO'),('android.telephony.gsm.SmsManager.copyMessageToSim([B,[B,int)','android.permission.RECEIVE_SMS'),('android.telephony.gsm.SmsManager.deleteMessageFromSim(int)','android.permission.RECEIVE_SMS'),('android.telephony.gsm.SmsManager.getAllMessagesFromSim()','android.permission.RECEIVE_SMS'),('android.telephony.gsm.SmsManager.sendDataMessage(java.lang.String,java.lang.String,short,[B,android.app.PendingIntent,android.app.PendingIntent)','android.permission.SEND_SMS'),('android.telephony.gsm.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)','android.permission.SEND_SMS'),('android.telephony.gsm.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)','android.permission.SEND_SMS'),('android.telephony.gsm.SmsManager.updateMessageOnSim(int,int,[B)','android.permission.RECEIVE_SMS'),('android.telephony.PhoneNumberUtils.getNumberFromIntent(android.content.Intent,android.content.Context)','android.permission.CALL_PRIVILEGED'),('android.telephony.PhoneNumberUtils.isVoiceMailNumber(java.lang.String)','android.permission.READ_PHONE_STATE'),('android.telephony.SmsManager.copyMessageToIcc([B,[B,int)','android.permission.RECEIVE_SMS'),('android.telephony.SmsManager.deleteMessageFromIcc(int)','android.permission.RECEIVE_SMS'),('android.telephony.SmsManager.getAllMessagesFromIcc()','android.permission.RECEIVE_SMS'),('android.telephony.SmsManager.sendDataMessage(java.lang.String,java.lang.String,short,[B,android.app.PendingIntent,android.app.PendingIntent)','android.permission.SEND_SMS'),('android.telephony.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)','android.permission.SEND_SMS'),('android.telephony.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)','android.permission.SEND_SMS'),('android.telephony.SmsManager.updateMessageOnIcc(int,int,[B)','android.permission.RECEIVE_SMS'),('android.telephony.TelephonyManager.disableLocationUpdates()','android.permission.CONTROL_LOCATION_UPDATES'),('android.telephony.TelephonyManager.enableLocationUpdates()','android.permission.CONTROL_LOCATION_UPDATES'),('android.telephony.TelephonyManager.getCellLocation()','android.permission.ACCESS_FINE_LOCATION'),('android.telephony.TelephonyManager.getCompleteVoiceMailNumber()','android.permission.CALL_PRIVILEGED'),('android.telephony.TelephonyManager.getDeviceId()','android.permission.READ_PHONE_STATE'),('android.telephony.TelephonyManager.getDeviceSoftwareVersion()','android.permission.READ_PHONE_STATE'),('android.telephony.TelephonyManager.getLine1AlphaTag()','android.permission.READ_PHONE_STATE'),('android.telephony.TelephonyManager.getLine1Number()','android.permission.READ_PHONE_STATE'),('android.telephony.TelephonyManager.getNeighboringCellInfo()','android.permission.ACCESS_FINE_LOCATION'),('android.telephony.TelephonyManager.getSimSerialNumber()','android.permission.READ_PHONE_STATE'),('android.telephony.TelephonyManager.getSubscriberId()','android.permission.READ_PHONE_STATE'),('android.telephony.TelephonyManager.getVoiceMailAlphaTag()','android.permission.READ_PHONE_STATE'),('android.telephony.TelephonyManager.getVoiceMailNumber()','android.permission.READ_PHONE_STATE'),('android.telephony.TelephonyManager.listen(android.telephony.PhoneStateListener,int)','android.permission.READ_PHONE_STATE'),('android.view.ContextThemeWrapper.clearWallpaper()','android.permission.SET_WALLPAPER'),('android.view.ContextThemeWrapper.removeStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.view.ContextThemeWrapper.sendStickyBroadcast(android.content.Intent)','android.permission.BROADCAST_STICKY'),('android.view.ContextThemeWrapper.sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)','android.permission.BROADCAST_STICKY'),('android.view.ContextThemeWrapper.setWallpaper(android.graphics.Bitmap)','android.permission.SET_WALLPAPER'),('android.view.ContextThemeWrapper.setWallpaper(java.io.InputStream)','android.permission.SET_WALLPAPER'),('android.view.IWindowManager$Stub$Proxy.addAppToken(int,android.view.IApplicationToken,int,int,boolean)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.addWindowToken(android.os.IBinder,int)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.disableKeyguard(android.os.IBinder,java.lang.String)','android.permission.DISABLE_KEYGUARD'),('android.view.IWindowManager$Stub$Proxy.executeAppTransition()','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.exitKeyguardSecurely(android.view.IOnKeyguardExitResult)','android.permission.DISABLE_KEYGUARD'),('android.view.IWindowManager$Stub$Proxy.getDPadKeycodeState(int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getDPadScancodeState(int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getKeycodeState(int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getKeycodeStateForDevice(int,int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getScancodeState(int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getScancodeStateForDevice(int,int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getSwitchState(int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getSwitchStateForDevice(int,int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getTrackballKeycodeState(int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.getTrackballScancodeState(int)','android.permission.READ_INPUT_STATE'),('android.view.IWindowManager$Stub$Proxy.injectKeyEvent(android.view.KeyEvent,boolean)','android.permission.INJECT_EVENTS'),('android.view.IWindowManager$Stub$Proxy.injectPointerEvent(android.view.MotionEvent,boolean)','android.permission.INJECT_EVENTS'),('android.view.IWindowManager$Stub$Proxy.injectTrackballEvent(android.view.MotionEvent,boolean)','android.permission.INJECT_EVENTS'),('android.view.IWindowManager$Stub$Proxy.isViewServerRunning()','android.permission.DUMP'),('android.view.IWindowManager$Stub$Proxy.moveAppToken(int,android.os.IBinder)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.moveAppTokensToBottom(java.util.List)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.moveAppTokensToTop(java.util.List)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.pauseKeyDispatching(android.os.IBinder)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.prepareAppTransition(int)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.reenableKeyguard(android.os.IBinder)','android.permission.DISABLE_KEYGUARD'),('android.view.IWindowManager$Stub$Proxy.removeAppToken(android.os.IBinder)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.removeWindowToken(android.os.IBinder)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.resumeKeyDispatching(android.os.IBinder)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setAnimationScale(int,float)','android.permission.SET_ANIMATION_SCALE'),('android.view.IWindowManager$Stub$Proxy.setAnimationScales([F)','android.permission.SET_ANIMATION_SCALE'),('android.view.IWindowManager$Stub$Proxy.setAppGroupId(android.os.IBinder,int)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setAppOrientation(android.view.IApplicationToken,int)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setAppStartingWindow(android.os.IBinder,java.lang.String,int,java.lang.CharSequence,int,int,android.os.IBinder,boolean)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setAppVisibility(android.os.IBinder,boolean)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setAppWillBeHidden(android.os.IBinder)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setEventDispatching(boolean)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setFocusedApp(android.os.IBinder,boolean)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setNewConfiguration(android.content.res.Configuration)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.setRotation(int,boolean,int)','android.permission.SET_ORIENTATION'),('android.view.IWindowManager$Stub$Proxy.startAppFreezingScreen(android.os.IBinder,int)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.startViewServer(int)','android.permission.DUMP'),('android.view.IWindowManager$Stub$Proxy.stopAppFreezingScreen(android.os.IBinder,boolean)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowManager$Stub$Proxy.stopViewServer()','android.permission.DUMP'),('android.view.IWindowManager$Stub$Proxy.updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)','android.permission.MANAGE_APP_TOKENS'),('android.view.IWindowSession$Stub$Proxy.add(android.view.IWindow,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)','android.permission.SYSTEM_ALERT_WINDOW'),('android.view.Surface.closeTransaction()','android.permission.ACCESS_SURFACE_FLINGER'),('android.view.Surface.freezeDisplay(int)','android.permission.ACCESS_SURFACE_FLINGER'),('android.view.Surface.setOrientation(int,int)','android.permission.ACCESS_SURFACE_FLINGER'),('android.view.Surface.setOrientation(int,int,int)','android.permission.ACCESS_SURFACE_FLINGER'),('android.view.Surface.unfreezeDisplay(int)','android.permission.ACCESS_SURFACE_FLINGER'),('android.view.SurfaceSession.<init>()','android.permission.ACCESS_SURFACE_FLINGER'),('android.webkit.GeolocationPermissions$Callback.invoke','android.permission.ACCESS_FINE_LOCATION'),('android.webkit.GeolocationService.registerForLocationUpdates()','android.permission.ACCESS_FINE_LOCATION'),('android.webkit.GeolocationService.setEnableGps(boolean)','android.permission.ACCESS_FINE_LOCATION'),('android.webkit.GeolocationService.start()','android.permission.ACCESS_FINE_LOCATION'),('android.webkit.WebChromeClient.onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions.Callback)','android.permission.ACCESS_FINE_LOCATION'),('android.webkit.WebIconDatabase.bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)','com.android.browser.permission.READ_HISTORY_BOOKMARKS'),('android.webkit.WebSettings.setBlockNetworkLoads(boolean)','android.permission.INTERNET'),('android.webkit.WebSettings.verifyNetworkAccess()','android.permission.INTERNET'),('android.webkit.WebView.<init>(android.content.Context)','android.permission.INTERNET'),('android.webkit.WebView.<init>(android.content.Context,android.util.AttributeSet)','android.permission.INTERNET'),('android.webkit.WebView.<init>(android.content.Context,android.util.AttributeSet,int)','android.permission.INTERNET'),('android.webkit.WebViewCore.<init>(android.content.Context,android.webkit.WebView,android.webkit.CallbackProxy,java.util.Map)','android.permission.INTERNET'),('android.widget.QuickContactBadge.assignContactFromEmail(java.lang.String,boolean)','android.permission.READ_CONTACTS'),('android.widget.QuickContactBadge.assignContactFromPhone(java.lang.String,boolean)','android.permission.READ_CONTACTS'),('android.widget.QuickContactBadge.trigger(android.net.Uri)','android.permission.READ_CONTACTS'),('API','Permission(s)'),('com.android.http.multipart.FilePart.sendData(java.io.OutputStream)','android.permission.INTERNET'),('com.android.http.multipart.FilePart.sendDispositionHeader(java.io.OutputStream)','android.permission.INTERNET'),('com.android.http.multipart.Part.send(java.io.OutputStream)','android.permission.INTERNET'),('com.android.http.multipart.Part.sendParts(java.io.OutputStream,com.android.http.multipart.Part[])','android.permission.INTERNET'),('com.android.http.multipart.Part.sendParts(java.io.OutputStream,com.android.http.multipart.Part[],byte[])','android.permission.INTERNET'),('com.android.http.multipart.Part.sendStart(java.io.OutputStream)','android.permission.INTERNET'),('com.android.http.multipart.Part.sendTransferEncodingHeader(java.io.OutputStream)','android.permission.INTERNET'),('com.android.http.multipart.StringPart.sendData(java.io.OuputStream)','android.permission.INTERNET'),('com.android.internal.app.IBatteryStats$Stub$Proxy.getAwakeTimeBattery()','android.permission.BATTERY_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.getAwakeTimePlugged()','android.permission.BATTERY_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.getStatistics()','android.permission.BATTERY_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteFullWifiLockAcquired(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteFullWifiLockReleased(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteInputEvent()','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneDataConnectionState(int,boolean)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneOff()','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneOn()','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneSignalStrength(SignalStrength)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.notePhoneState(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteScanWifiLockAcquired(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteScanWifiLockReleased(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteScreenBrightness(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteScreenOff()','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteScreenOn()','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartGps(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartSensor(int,int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteStartWakelock(int,java.lang.String,int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopGps(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopSensor(int,int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteStopWakelock(int,java.lang.String,int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteUserActivity(int,int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiMulticastDisabled(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiMulticastEnabled(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiOff(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiOn(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiRunning()','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.noteWifiStopped()','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.recordCurrentLevel(int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IBatteryStats$Stub$Proxy.setOnBattery(boolean,int)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IUsageStats$Stub$Proxy.getAllPkgUsageStats()','android.permission.PACKAGE_USAGE_STATS'),('com.android.internal.app.IUsageStats$Stub$Proxy.getPkgUsageStats(ComponentName)','android.permission.PACKAGE_USAGE_STATS'),('com.android.internal.app.IUsageStats$Stub$Proxy.noteLaunchTime(ComponentName,','int)'),('com.android.internal.app.IUsageStats$Stub$Proxy.notePauseComponent(ComponentName)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.app.IUsageStats$Stub$Proxy.noteResumeComponent(ComponentName)','android.permission.UPDATE_DEVICE_STATS'),('com.android.internal.appwidget.IAppWidgetService$Stub$Proxy.bindAppWidgetId(int,ComponentName)','android.permission.BIND_APPWIDGET'),('com.android.internal.os.IDropBoxManagerService$Stub$Proxy.getNextEntry(java.lang.String,long)','android.permission.READ_LOGS'),('com.android.internal.telephony.CallerInfo.getCallerId(android.content.Context,java.lang.String)','android.permission.READ_CONTACTS'),('com.android.internal.telephony.CallerInfo.getCallerInfo(android.content.Context,java.lang.String)','android.permission.READ_CONTACTS'),('com.android.internal.telephony.CallerInfo.markAsVoiceMail()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.IccPhoneBookInterfaceManager$Stub$Proxy.getAdnRecordsInEf(int)','android.permission.READ_CONTACTS'),('com.android.internal.telephony.IccPhoneBookInterfaceManager$Stub$Proxy.updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,java.lang.String)','android.permission.WRITE_CONTACTS'),('com.android.internal.telephony.IccPhoneBookInterfaceManager$Stub$Proxy.updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','android.permission.WRITE_CONTACTS'),('com.android.internal.telephony.IIccPhoneBook$Stub$Proxy.getAdnRecordsInEf(int)','android.permission.READ_CONTACTS'),('com.android.internal.telephony.IIccPhoneBook$Stub$Proxy.updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,java.lang.String)','android.permission.WRITE_CONTACTS'),('com.android.internal.telephony.IIccPhoneBook$Stub$Proxy.updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)','android.permission.WRITE_CONTACTS'),('com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy.getDeviceId()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy.getDeviceSvn()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy.getIccSerialNumber()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy.getLine1AlphaTag()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy.getLine1Number()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy.getSubscriberId()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy.getVoiceMailAlphaTag()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy.getVoiceMailNumber()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.ISms$Stub$Proxy.copyMessageToIccEf(int,byte[],byte[])','android.permission.RECEIVE_SMS'),('com.android.internal.telephony.ISms$Stub$Proxy.getAllMessagesFromIccEf()','android.permission.RECEIVE_SMS'),('com.android.internal.telephony.ISms$Stub$Proxy.sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)','android.permission.SEND_SMS'),('com.android.internal.telephony.ISms$Stub$Proxy.sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)','android.permission.SEND_SMS'),('com.android.internal.telephony.ISms$Stub$Proxy.sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)','android.permission.SEND_SMS'),('com.android.internal.telephony.ISms$Stub$Proxy.updateMessageOnIccEf(int,int,byte[])','android.permission.RECEIVE_SMS'),('com.android.internal.telephony.ITelephony$Stub$Proxy.answerRingingCall()','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.call(java.lang.String)','android.permission.CALL_PHONE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.cancelMissedCallsNotification()','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.disableApnType(java.lang.String)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.disableDataConnectivity()','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.disableLocationUpdates()','android.permission.CONTROL_LOCATION_UPDATES'),('com.android.internal.telephony.ITelephony$Stub$Proxy.enableApnType(java.lang.String)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.enableDataConnectivity()','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.enableLocationUpdates()','android.permission.CONTROL_LOCATION_UPDATES'),('com.android.internal.telephony.ITelephony$Stub$Proxy.endCall()','android.permission.CALL_PHONE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.getCellLocation()','android.permission.ACCESS_FINE_LOCATION'),('com.android.internal.telephony.ITelephony$Stub$Proxy.getNeighboringCellInfo()','android.permission.ACCESS_FINE_LOCATION'),('com.android.internal.telephony.ITelephony$Stub$Proxy.handlePinMmi(java.lang.String)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.isSimPinEnabled()','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.setRadio(boolean)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.silenceRinger()','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.supplyPin(java.lang.String)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephony$Stub$Proxy.toggleRadioOnOff()','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)','android.permission.READ_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyCallForwardingChanged(boolean)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyCallState(int,java.lang.String)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyCellLocation(android.os.Bundle)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyDataActivity(int)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,int)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyDataConnectionFailed(java.lang.String)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyMessageWaitingChanged(boolean)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifyServiceState(android.telephony.ServiceState)','android.permission.MODIFY_PHONE_STATE'),('com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy.notifySignalStrength(android.telephony.SignalStrength)','android.permission.MODIFY_PHONE_STATE'),('com.android.server.WallpaperManagerService.bindWallpaperComponentLocked(android.content.ComponentName)','android.permission.BIND_WALLPAPER'),('com.android.server.WallpaperManagerService.dump(java.io.FileDescriptor,java.io.PrintWriter,[Ljava.lang.String)','android.permission.DUMP'),('com.htc.net.wimax.WimaxController$Stub$Proxy.getConnectionInfo','android.permission.ACCESS_WIMAX_STATE'),('com.htc.net.wimax.WimaxController$Stub$Proxy.getWimaxState','android.permission.ACCESS_WIMAX_STATE'),('com.htc.net.wimax.WimaxController$Stub$Proxy.isBackoffState','android.permission.ACCESS_WIMAX_STATE'),('com.htc.net.wimax.WimaxController$Stub$Proxy.isWimaxEnabled','android.permission.ACCESS_WIMAX_STATE'),('com.htc.net.wimax.WimaxController$Stub$Proxy.setWimaxEnabled','android.permission.CHANGE_WIMAX_STATE'),('java.lang.Runtime.exec(java.lang.String)','android.permission.READ_LOGS'),('java.lang.Runtime.exec(java.lang.String,java.lang.String[])','android.permission.READ_LOGS'),('java.lang.Runtime.exec(java.lang.String,java.lang.String[],java.io.File)','android.permission.READ_LOGS'),('java.lang.Runtime.exec(java.lang.String[])','android.permission.READ_LOGS'),('java.lang.Runtime.exec(java.lang.String[],java.lang.String[])','android.permission.READ_LOGS'),('java.lang.Runtime.exec(java.lang.String[],java.lang.String[],java.io.File)','android.permission.READ_LOGS'),('java.net.DatagramSocket.<init>()','android.permission.INTERNET'),('java.net.DatagramSocket.<init>(int)','android.permission.INTERNET'),('java.net.DatagramSocket.<init>(int,java.net.InetAddress)','android.permission.INTERNET'),('java.net.DatagramSocket.<init>(java.net.SocketAddress)','android.permission.INTERNET'),('java.net.HttpURLConnection.<init>(java.net.URL)','android.permission.INTERNET'),('java.net.HttpURLConnection.connect()','android.permission.INTERNET'),('java.net.MulticastSocket.<init>()','android.permission.INTERNET'),('java.net.MulticastSocket.<init>(int)','android.permission.INTERNET'),('java.net.MulticastSocket.<init>(java.net.SocketAddress)','android.permission.INTERNET'),('java.net.NetworkInterface.<init>()','android.permission.INTERNET'),('java.net.NetworkInterface.<init>(java.lang.String,int,java.net.InetAddress)','android.permission.INTERNET'),('java.net.ServerSocket.<init>()','android.permission.INTERNET'),('java.net.ServerSocket.<init>(int)','android.permission.INTERNET'),('java.net.ServerSocket.<init>(int,int)','android.permission.INTERNET'),('java.net.ServerSocket.<init>(int,int,java.net.InetAddress)','android.permission.INTERNET'),('java.net.ServerSocket.bind(java.net.SocketAddress)','android.permission.INTERNET'),('java.net.ServerSocket.bind(java.net.SocketAddress,int)','android.permission.INTERNET'),('java.net.Socket.<init>()','android.permission.INTERNET'),('java.net.Socket.<init>(java.lang.String,int)','android.permission.INTERNET'),('java.net.Socket.<init>(java.lang.String,int,boolean)','android.permission.INTERNET'),('java.net.Socket.<init>(java.lang.String,int,java.net.InetAddress,int)','android.permission.INTERNET'),('java.net.Socket.<init>(java.net.InetAddress,int)','android.permission.INTERNET'),('java.net.Socket.<init>(java.net.InetAddress,int,boolean)','android.permission.INTERNET'),('java.net.Socket.<init>(java.net.InetAddress,int,java.net.InetAddress,int)','android.permission.INTERNET'),('java.net.URL.getContent()','android.permission.INTERNET'),('java.net.URL.getContent(java.lang.Class[])','android.permission.INTERNET'),('java.net.URL.openConnection()','android.permission.INTERNET'),('java.net.URL.openConnection(java.net.Proxy)','android.permission.INTERNET'),('java.net.URL.openStream()','android.permission.INTERNET'),('java.net.URLConnection.connect()','android.permission.INTERNET'),('java.net.URLConnection.getInputStream()','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.<init>()','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.<init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.<init>(org.apache.http.params.HttpParams)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)','android.permission.INTERNET'),('org.apache.http.impl.client.DefaultHttpClient.execute(org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)','android.permission.INTERNET'),('org.apache.http.impl.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest)','android.permission.INTERNET'),('org.apache.http.impl.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)','android.permission.INTERNET'),('org.apache.http.impl.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)','android.permission.INTERNET'),('org.apache.http.impl.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)','android.permission.INTERNET'),('org.apache.http.impl.client.HttpClient.execute(org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest)','android.permission.INTERNET'),('org.apache.http.impl.client.HttpClient.execute(org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)','android.permission.INTERNET'),('org.apache.http.impl.client.HttpClient.execute(org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)','android.permission.INTERNET'),('org.apache.http.impl.client.HttpClient.execute(org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)','android.permission.INTERNET');
/*!40000 ALTER TABLE `permissionMap` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `permissionModelling`
--

DROP TABLE IF EXISTS `permissionModelling`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permissionModelling` (
  `permissionId` int(11) DEFAULT NULL,
  `permission` varchar(100) NOT NULL,
  PRIMARY KEY (`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permissionModelling`
--

LOCK TABLES `permissionModelling` WRITE;
/*!40000 ALTER TABLE `permissionModelling` DISABLE KEYS */;
INSERT INTO `permissionModelling` VALUES (1,'android.permission.ACCESS_ALL_EXTERNAL_STORAGE'),(2,'android.permission.ACCESS_CACHE_FILESYSTEM'),(3,'android.permission.ACCESS_CHECKIN_PROPERTIES'),(4,'android.permission.ACCESS_COARSE_LOCATION'),(5,'android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY'),(6,'android.permission.ACCESS_FINE_LOCATION'),(7,'android.permission.ACCESS_LOCATION_EXTRA_COMMANDS'),(8,'android.permission.ACCESS_MOCK_LOCATION'),(9,'android.permission.ACCESS_MTP'),(10,'android.permission.ACCESS_NETWORK_STATE'),(11,'android.permission.ACCESS_SURFACE_FLINGER'),(12,'android.permission.ACCESS_WIFI_STATE'),(13,'android.permission.ACCESS_WIMAX_STATE'),(14,'android.permission.ACCOUNT_MANAGER'),(15,'android.permission.ALLOW_ANY_CODEC_FOR_PLAYBACK'),(16,'android.permission.ASEC_ACCESS'),(17,'android.permission.ASEC_CREATE'),(18,'android.permission.ASEC_DESTROY'),(19,'android.permission.ASEC_MOUNT_UNMOUNT'),(20,'android.permission.ASEC_RENAME'),(21,'android.permission.AUTHENTICATE_ACCOUNTS'),(22,'android.permission.BACKUP'),(23,'android.permission.BATTERY_STATS'),(24,'android.permission.BIND_ACCESSIBILITY_SERVICE'),(25,'android.permission.BIND_APPWIDGET'),(26,'android.permission.BIND_DEVICE_ADMIN'),(27,'android.permission.BIND_DIRECTORY_SEARCH'),(28,'android.permission.BIND_INPUT_METHOD'),(29,'android.permission.BIND_KEYGUARD_APPWIDGET'),(30,'android.permission.BIND_PACKAGE_VERIFIER'),(31,'android.permission.BIND_REMOTEVIEWS'),(32,'android.permission.BIND_TEXT_SERVICE'),(33,'android.permission.BIND_VPN_SERVICE'),(34,'android.permission.BIND_WALLPAPER'),(35,'android.permission.BLUETOOTH'),(36,'android.permission.BLUETOOTH_ADMIN'),(37,'android.permission.BLUETOOTH_STACK'),(38,'android.permission.BRICK'),(39,'android.permission.BROADCAST_PACKAGE_REMOVED'),(40,'android.permission.BROADCAST_SMS'),(41,'android.permission.BROADCAST_STICKY'),(42,'android.permission.BROADCAST_WAP_PUSH'),(43,'android.permission.CALL_PHONE'),(44,'android.permission.CALL_PRIVILEGED'),(45,'android.permission.CAMERA'),(46,'android.permission.CHANGE_BACKGROUND_DATA_SETTING'),(47,'android.permission.CHANGE_COMPONENT_ENABLED_STATE'),(48,'android.permission.CHANGE_CONFIGURATION'),(49,'android.permission.CHANGE_NETWORK_STATE'),(50,'android.permission.CHANGE_WIFI_MULTICAST_STATE'),(51,'android.permission.CHANGE_WIFI_STATE'),(52,'android.permission.CHANGE_WIMAX_STATE'),(53,'android.permission.CLEAR_APP_CACHE'),(54,'android.permission.CLEAR_APP_USER_DATA'),(55,'android.permission.CONFIGURE_WIFI_DISPLAY'),(56,'android.permission.CONFIRM_FULL_BACKUP'),(57,'android.permission.CONNECTIVITY_INTERNAL'),(58,'android.permission.CONTROL_LOCATION_UPDATES'),(59,'android.permission.CONTROL_WIFI_DISPLAY'),(60,'android.permission.COPY_PROTECTED_DATA'),(61,'android.permission.CRYPT_KEEPER'),(62,'android.permission.DELETE_CACHE_FILES'),(63,'android.permission.DELETE_PACKAGES'),(64,'android.permission.DEVICE_POWER'),(65,'android.permission.DIAGNOSTIC'),(66,'android.permission.DISABLE_KEYGUARD'),(67,'android.permission.DUMP'),(68,'android.permission.EXPAND_STATUS_BAR'),(69,'android.permission.FACTORY_TEST'),(70,'android.permission.FILTER_EVENTS'),(71,'android.permission.FLASHLIGHT'),(72,'android.permission.FORCE_BACK'),(73,'android.permission.FORCE_STOP_PACKAGES'),(74,'android.permission.FREEZE_SCREEN'),(75,'android.permission.GET_ACCOUNTS'),(76,'android.permission.GET_DETAILED_TASKS'),(77,'android.permission.GET_PACKAGE_SIZE'),(78,'android.permission.GET_TASKS'),(79,'android.permission.GLOBAL_SEARCH'),(80,'android.permission.GLOBAL_SEARCH_CONTROL'),(81,'android.permission.GRANT_REVOKE_PERMISSIONS'),(82,'android.permission.HARDWARE_TEST'),(83,'android.permission.INJECT_EVENTS'),(84,'android.permission.INSTALL_LOCATION_PROVIDER'),(85,'android.permission.INSTALL_PACKAGES'),(86,'android.permission.INTERACT_ACROSS_USERS'),(87,'android.permission.INTERACT_ACROSS_USERS_FULL'),(88,'android.permission.INTERNAL_SYSTEM_WINDOW'),(89,'android.permission.INTERNET'),(90,'android.permission.KILL_BACKGROUND_PROCESSES'),(91,'android.permission.MAGNIFY_DISPLAY'),(92,'android.permission.MANAGE_ACCOUNTS'),(93,'android.permission.MANAGE_APP_TOKENS'),(94,'android.permission.MANAGE_NETWORK_POLICY'),(95,'android.permission.MANAGE_USB'),(96,'android.permission.MANAGE_USERS'),(97,'android.permission.MASTER_CLEAR'),(98,'android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS'),(99,'android.permission.MODIFY_AUDIO_SETTINGS'),(100,'android.permission.MODIFY_NETWORK_ACCOUNTING'),(101,'android.permission.MODIFY_PHONE_STATE'),(102,'android.permission.MOUNT_FORMAT_FILESYSTEMS'),(103,'android.permission.MOUNT_UNMOUNT_FILESYSTEMS'),(104,'android.permission.MOVE_PACKAGE'),(105,'android.permission.NET_ADMIN'),(106,'android.permission.NET_TUNNELING'),(107,'android.permission.NFC'),(108,'android.permission.PACKAGE_USAGE_STATS'),(109,'android.permission.PACKAGE_VERIFICATION_AGENT'),(110,'android.permission.PERFORM_CDMA_PROVISIONING'),(111,'android.permission.PERSISTENT_ACTIVITY'),(112,'android.permission.PROCESS_OUTGOING_CALLS'),(113,'android.permission.READ_CALENDAR'),(114,'android.permission.READ_CALL_LOG'),(115,'android.permission.READ_CELL_BROADCASTS'),(116,'android.permission.READ_CONTACTS'),(117,'android.permission.READ_DREAM_STATE'),(118,'android.permission.READ_EXTERNAL_STORAGE'),(119,'android.permission.READ_FRAME_BUFFER'),(120,'android.permission.READ_INPUT_STATE'),(121,'android.permission.READ_LOGS'),(122,'android.permission.READ_NETWORK_USAGE_HISTORY'),(123,'android.permission.READ_PHONE_STATE'),(124,'android.permission.READ_PRIVILEGED_PHONE_STATE'),(125,'android.permission.READ_PROFILE'),(126,'android.permission.READ_SMS'),(127,'android.permission.READ_SOCIAL_STREAM'),(128,'android.permission.READ_SYNC_SETTINGS'),(129,'android.permission.READ_SYNC_STATS'),(130,'android.permission.READ_USER_DICTIONARY'),(131,'android.permission.REBOOT'),(132,'android.permission.RECEIVE_BOOT_COMPLETED'),(133,'android.permission.RECEIVE_DATA_ACTIVITY_CHANGE'),(134,'android.permission.RECEIVE_EMERGENCY_BROADCAST'),(135,'android.permission.RECEIVE_MMS'),(136,'android.permission.RECEIVE_SMS'),(137,'android.permission.RECEIVE_WAP_PUSH'),(138,'android.permission.RECORD_AUDIO'),(139,'android.permission.REMOTE_AUDIO_PLAYBACK'),(140,'android.permission.REMOVE_TASKS'),(141,'android.permission.REORDER_TASKS'),(142,'android.permission.RESTART_PACKAGES'),(143,'android.permission.RETRIEVE_WINDOW_CONTENT'),(144,'android.permission.RETRIEVE_WINDOW_INFO'),(145,'android.permission.SEND_SMS'),(146,'android.permission.SEND_SMS_NO_CONFIRMATION'),(147,'android.permission.SERIAL_PORT'),(148,'android.permission.SET_ACTIVITY_WATCHER'),(149,'android.permission.SET_ALWAYS_FINISH'),(150,'android.permission.SET_ANIMATION_SCALE'),(151,'android.permission.SET_DEBUG_APP'),(152,'android.permission.SET_KEYBOARD_LAYOUT'),(153,'android.permission.SET_ORIENTATION'),(154,'android.permission.SET_POINTER_SPEED'),(155,'android.permission.SET_PREFERRED_APPLICATIONS'),(156,'android.permission.SET_PROCESS_LIMIT'),(157,'android.permission.SET_SCREEN_COMPATIBILITY'),(158,'android.permission.SET_TIME'),(159,'android.permission.SET_TIME_ZONE'),(160,'android.permission.SET_WALLPAPER'),(161,'android.permission.SET_WALLPAPER_COMPONENT'),(162,'android.permission.SET_WALLPAPER_HINTS'),(163,'android.permission.SHUTDOWN'),(164,'android.permission.SIGNAL_PERSISTENT_PROCESSES'),(165,'android.permission.START_ANY_ACTIVITY'),(166,'android.permission.STATUS_BAR'),(167,'android.permission.STATUS_BAR_SERVICE'),(168,'android.permission.STOP_APP_SWITCHES'),(169,'android.permission.SUBSCRIBED_FEEDS_READ'),(170,'android.permission.SUBSCRIBED_FEEDS_WRITE'),(171,'android.permission.SYSTEM_ALERT_WINDOW'),(172,'android.permission.TEMPORARY_ENABLE_ACCESSIBILITY'),(173,'android.permission.UPDATE_DEVICE_STATS'),(174,'android.permission.UPDATE_LOCK'),(175,'android.permission.USE_CREDENTIALS'),(176,'android.permission.USE_SIP'),(177,'android.permission.VIBRATE'),(178,'android.permission.WAKE_LOCK'),(179,'android.permission.WRITE_APN_SETTINGS'),(180,'android.permission.WRITE_CALENDAR'),(181,'android.permission.WRITE_CALL_LOG'),(182,'android.permission.WRITE_CONTACTS'),(183,'android.permission.WRITE_DREAM_STATE'),(184,'android.permission.WRITE_EXTERNAL_STORAGE'),(185,'android.permission.WRITE_GSERVICES'),(186,'android.permission.WRITE_MEDIA_STORAGE'),(187,'android.permission.WRITE_PROFILE'),(188,'android.permission.WRITE_SECURE_SETTINGS'),(189,'android.permission.WRITE_SETTINGS'),(190,'android.permission.WRITE_SMS'),(191,'android.permission.WRITE_SOCIAL_STREAM'),(192,'android.permission.WRITE_SYNC_SETTINGS'),(193,'android.permission.WRITE_USER_DICTIONARY'),(194,'com.android.alarm.permission.SET_ALARM'),(195,'com.android.browser.permission.READ_HISTORY_BOOKMARKS'),(196,'com.android.browser.permission.WRITE_HISTORY_BOOKMARKS'),(197,'com.android.voicemail.permission.ADD_VOICEMAIL');
/*!40000 ALTER TABLE `permissionModelling` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `permissionStats`
--

DROP TABLE IF EXISTS `permissionStats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permissionStats` (
  `permission` varchar(100) NOT NULL,
  `count` int(11) DEFAULT '0',
  PRIMARY KEY (`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permissionStats`
--

LOCK TABLES `permissionStats` WRITE;
/*!40000 ALTER TABLE `permissionStats` DISABLE KEYS */;
INSERT INTO `permissionStats` VALUES ('android.intent.category.MASTER_CLEAR.permission.C2D_MESSAGE',1),('android.permission.ACCESS_ALL_EXTERNAL_STORAGE',1),('android.permission.ACCESS_CACHE_FILESYSTEM',1),('android.permission.ACCESS_CHECKIN_PROPERTIES',2),('android.permission.ACCESS_COARSE_LOCATION',77),('android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY',1),('android.permission.ACCESS_FINE_LOCATION',77),('android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',5),('android.permission.ACCESS_MOCK_LOCATION',5),('android.permission.ACCESS_MTP',1),('android.permission.ACCESS_NETWORK_STATE',198),('android.permission.ACCESS_SURFACE_FLINGER',2),('android.permission.ACCESS_WIFI_STATE',91),('android.permission.ACCESS_WIMAX_STATE',2),('android.permission.ACCOUNT_MANAGER',2),('android.permission.ALLOW_ANY_CODEC_FOR_PLAYBACK',1),('android.permission.ASEC_ACCESS',2),('android.permission.ASEC_CREATE',2),('android.permission.ASEC_DESTROY',2),('android.permission.ASEC_MOUNT_UNMOUNT',2),('android.permission.ASEC_RENAME',2),('android.permission.AUTHENTICATE_ACCOUNTS',17),('android.permission.BACKUP',2),('android.permission.BATTERY_STATS',8),('android.permission.BIND_ACCESSIBILITY_SERVICE',2),('android.permission.BIND_APPWIDGET',2),('android.permission.BIND_DEVICE_ADMIN',2),('android.permission.BIND_DIRECTORY_SEARCH',1),('android.permission.BIND_INPUT_METHOD',1),('android.permission.BIND_KEYGUARD_APPWIDGET',1),('android.permission.BIND_PACKAGE_VERIFIER',1),('android.permission.BIND_REMOTEVIEWS',1),('android.permission.BIND_TEXT_SERVICE',1),('android.permission.BIND_VPN_SERVICE',1),('android.permission.BIND_WALLPAPER',4),('android.permission.BLUETOOTH',13),('android.permission.BLUETOOTH_ADMIN',9),('android.permission.BLUETOOTH_STACK',1),('android.permission.BRICK',1),('android.permission.BROADCAST_PACKAGE_REMOVED',1),('android.permission.BROADCAST_SMS',1),('android.permission.BROADCAST_STICKY',19),('android.permission.BROADCAST_WAP_PUSH',1),('android.permission.CALL_PHONE',19),('android.permission.CALL_PRIVILEGED',2),('android.permission.CAMERA',53),('android.permission.CHANGE_BACKGROUND_DATA_SETTING',2),('android.permission.CHANGE_COMPONENT_ENABLED_STATE',3),('android.permission.CHANGE_CONFIGURATION',5),('android.permission.CHANGE_NETWORK_STATE',12),('android.permission.CHANGE_WIFI_MULTICAST_STATE',3),('android.permission.CHANGE_WIFI_STATE',21),('android.permission.CHANGE_WIMAX_STATE',2),('android.permission.CLEAR_APP_CACHE',6),('android.permission.CLEAR_APP_USER_DATA',2),('android.permission.CONFIGURE_WIFI_DISPLAY',1),('android.permission.CONFIRM_FULL_BACKUP',1),('android.permission.CONNECTIVITY_INTERNAL',1),('android.permission.CONTROL_LOCATION_UPDATES',2),('android.permission.CONTROL_WIFI_DISPLAY',1),('android.permission.COPY_PROTECTED_DATA',1),('android.permission.CRYPT_KEEPER',1),('android.permission.DELETE_CACHE_FILES',2),('android.permission.DELETE_PACKAGES',3),('android.permission.DEVICE_POWER',4),('android.permission.DIAGNOSTIC',1),('android.permission.DISABLE_KEYGUARD',11),('android.permission.DUMP',2),('android.permission.EXPAND_STATUS_BAR',5),('android.permission.FACTORY_TEST',1),('android.permission.FILTER_EVENTS',1),('android.permission.FLASHLIGHT',10),('android.permission.FORCE_BACK',2),('android.permission.FORCE_STOP_PACKAGES',2),('android.permission.FREEZE_SCREEN',1),('android.permission.GET_ACCOUNTS',78),('android.permission.GET_DETAILED_TASKS',1),('android.permission.GET_PACKAGE_SIZE',7),('android.permission.GET_TASKS',30),('android.permission.GLOBAL_SEARCH',2),('android.permission.GLOBAL_SEARCH_CONTROL',1),('android.permission.GRANT_REVOKE_PERMISSIONS',1),('android.permission.HARDWARE_TEST',1),('android.permission.INJECT_EVENTS',2),('android.permission.INSTALL_LOCATION_PROVIDER',2),('android.permission.INSTALL_PACKAGES',3),('android.permission.INTERACT_ACROSS_USERS',2),('android.permission.INTERACT_ACROSS_USERS_FULL',2),('android.permission.INTERNAL_SYSTEM_WINDOW',2),('android.permission.INTERNET',221),('android.permission.KILL_BACKGROUND_PROCESSES',9),('android.permission.MAGNIFY_DISPLAY',1),('android.permission.MANAGE_ACCOUNTS',21),('android.permission.MANAGE_APP_TOKENS',2),('android.permission.MANAGE_NETWORK_POLICY',1),('android.permission.MANAGE_USB',1),('android.permission.MANAGE_USERS',2),('android.permission.MASTER_CLEAR',1),('android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS',1),('android.permission.MODIFY_AUDIO_SETTINGS',18),('android.permission.MODIFY_NETWORK_ACCOUNTING',1),('android.permission.MODIFY_PHONE_STATE',4),('android.permission.MOUNT_FORMAT_FILESYSTEMS',2),('android.permission.MOUNT_UNMOUNT_FILESYSTEMS',7),('android.permission.MOVE_PACKAGE',2),('android.permission.NET_ADMIN',1),('android.permission.NET_TUNNELING',1),('android.permission.NFC',11),('android.permission.PACKAGE_USAGE_STATS',3),('android.permission.PACKAGE_VERIFICATION_AGENT',2),('android.permission.PERFORM_CDMA_PROVISIONING',1),('android.permission.PERSISTENT_ACTIVITY',2),('android.permission.PROCESS_OUTGOING_CALLS',2),('android.permission.READ_CALENDAR',14),('android.permission.READ_CALL_LOG',2),('android.permission.READ_CELL_BROADCASTS',1),('android.permission.READ_CONTACTS',58),('android.permission.READ_DREAM_STATE',1),('android.permission.READ_EXTERNAL_STORAGE',19),('android.permission.READ_FRAME_BUFFER',2),('android.permission.READ_INPUT_STATE',2),('android.permission.READ_LOGS',12),('android.permission.READ_NETWORK_USAGE_HISTORY',1),('android.permission.READ_PHONE_STATE',102),('android.permission.READ_PRIVILEGED_PHONE_STATE',1),('android.permission.READ_PROFILE',12),('android.permission.READ_SMS',12),('android.permission.READ_SOCIAL_STREAM',2),('android.permission.READ_SYNC_SETTINGS',26),('android.permission.READ_SYNC_STATS',10),('android.permission.READ_USER_DICTIONARY',2),('android.permission.REBOOT',2),('android.permission.RECEIVE_BOOT_COMPLETED',57),('android.permission.RECEIVE_DATA_ACTIVITY_CHANGE',1),('android.permission.RECEIVE_EMERGENCY_BROADCAST',1),('android.permission.RECEIVE_MMS',3),('android.permission.RECEIVE_SMS',12),('android.permission.RECEIVE_WAP_PUSH',1),('android.permission.RECORD_AUDIO',29),('android.permission.REMOTE_AUDIO_PLAYBACK',1),('android.permission.REMOVE_TASKS',1),('android.permission.REORDER_TASKS',4),('android.permission.RESTART_PACKAGES',9),('android.permission.RETRIEVE_WINDOW_CONTENT',1),('android.permission.RETRIEVE_WINDOW_INFO',1),('android.permission.SEND_SMS',12),('android.permission.SEND_SMS_NO_CONFIRMATION',2),('android.permission.SERIAL_PORT',1),('android.permission.SET_ACTIVITY_WATCHER',2),('android.permission.SET_ALWAYS_FINISH',2),('android.permission.SET_ANIMATION_SCALE',2),('android.permission.SET_DEBUG_APP',2),('android.permission.SET_KEYBOARD_LAYOUT',1),('android.permission.SET_ORIENTATION',3),('android.permission.SET_POINTER_SPEED',1),('android.permission.SET_PREFERRED_APPLICATIONS',4),('android.permission.SET_PROCESS_LIMIT',2),('android.permission.SET_SCREEN_COMPATIBILITY',2),('android.permission.SET_TIME',2),('android.permission.SET_TIME_ZONE',2),('android.permission.SET_WALLPAPER',13),('android.permission.SET_WALLPAPER_COMPONENT',2),('android.permission.SET_WALLPAPER_HINTS',4),('android.permission.SHUTDOWN',2),('android.permission.SIGNAL_PERSISTENT_PROCESSES',2),('android.permission.START_ANY_ACTIVITY',1),('android.permission.STATUS_BAR',4),('android.permission.STATUS_BAR_SERVICE',1),('android.permission.STOP_APP_SWITCHES',2),('android.permission.SUBSCRIBED_FEEDS_READ',8),('android.permission.SUBSCRIBED_FEEDS_WRITE',8),('android.permission.SYSTEM_ALERT_WINDOW',16),('android.permission.TEMPORARY_ENABLE_ACCESSIBILITY',1),('android.permission.UPDATE_DEVICE_STATS',2),('android.permission.UPDATE_LOCK',1),('android.permission.USE_CREDENTIALS',23),('android.permission.USE_SIP',1),('android.permission.VIBRATE',99),('android.permission.WAKE_LOCK',103),('android.permission.WRITE_APN_SETTINGS',1),('android.permission.WRITE_CALENDAR',9),('android.permission.WRITE_CALL_LOG',1),('android.permission.WRITE_CONTACTS',22),('android.permission.WRITE_DREAM_STATE',1),('android.permission.WRITE_EXTERNAL_STORAGE',167),('android.permission.WRITE_GSERVICES',1),('android.permission.WRITE_MEDIA_STORAGE',1),('android.permission.WRITE_PROFILE',2),('android.permission.WRITE_SECURE_SETTINGS',2),('android.permission.WRITE_SETTINGS',26),('android.permission.WRITE_SMS',9),('android.permission.WRITE_SOCIAL_STREAM',2),('android.permission.WRITE_SYNC_SETTINGS',25),('android.permission.WRITE_USER_DICTIONARY',3),('com.android.alarm.permission.SET_ALARM',1),('com.android.browser.permission.READ_HISTORY_BOOKMARKS',8),('com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',4),('com.android.voicemail.permission.ADD_VOICEMAIL',1);
/*!40000 ALTER TABLE `permissionStats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `permissionStatsMalware`
--

DROP TABLE IF EXISTS `permissionStatsMalware`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permissionStatsMalware` (
  `permission` varchar(100) NOT NULL,
  `count` int(11) DEFAULT '0',
  PRIMARY KEY (`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permissionStatsMalware`
--

LOCK TABLES `permissionStatsMalware` WRITE;
/*!40000 ALTER TABLE `permissionStatsMalware` DISABLE KEYS */;
INSERT INTO `permissionStatsMalware` VALUES ('android.intent.category.MASTER_CLEAR.permission.C2D_MESSAGE',1),('android.permission.ACCESS_ALL_EXTERNAL_STORAGE',2),('android.permission.ACCESS_CACHE_FILESYSTEM',21),('android.permission.ACCESS_CHECKIN_PROPERTIES',2),('android.permission.ACCESS_COARSE_LOCATION',558),('android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY',2),('android.permission.ACCESS_FINE_LOCATION',454),('android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',188),('android.permission.ACCESS_MOCK_LOCATION',6),('android.permission.ACCESS_MTP',2),('android.permission.ACCESS_NETWORK_STATE',1308),('android.permission.ACCESS_SURFACE_FLINGER',2),('android.permission.ACCESS_WIFI_STATE',860),('android.permission.ACCESS_WIMAX_STATE',2),('android.permission.ACCOUNT_MANAGER',2),('android.permission.ALLOW_ANY_CODEC_FOR_PLAYBACK',2),('android.permission.ASEC_ACCESS',2),('android.permission.ASEC_CREATE',2),('android.permission.ASEC_DESTROY',2),('android.permission.ASEC_MOUNT_UNMOUNT',2),('android.permission.ASEC_RENAME',2),('android.permission.AUTHENTICATE_ACCOUNTS',2),('android.permission.BACKUP',2),('android.permission.BATTERY_STATS',5),('android.permission.BIND_ACCESSIBILITY_SERVICE',2),('android.permission.BIND_APPWIDGET',2),('android.permission.BIND_DEVICE_ADMIN',2),('android.permission.BIND_DIRECTORY_SEARCH',2),('android.permission.BIND_INPUT_METHOD',2),('android.permission.BIND_KEYGUARD_APPWIDGET',2),('android.permission.BIND_PACKAGE_VERIFIER',2),('android.permission.BIND_REMOTEVIEWS',2),('android.permission.BIND_TEXT_SERVICE',2),('android.permission.BIND_VPN_SERVICE',2),('android.permission.BIND_WALLPAPER',3),('android.permission.BLUETOOTH',18),('android.permission.BLUETOOTH_ADMIN',15),('android.permission.BLUETOOTH_STACK',2),('android.permission.BRICK',2),('android.permission.BROADCAST_PACKAGE_REMOVED',12),('android.permission.BROADCAST_SMS',2),('android.permission.BROADCAST_STICKY',19),('android.permission.BROADCAST_WAP_PUSH',3),('android.permission.CALL_PHONE',445),('android.permission.CALL_PRIVILEGED',4),('android.permission.CAMERA',20),('android.permission.CHANGE_BACKGROUND_DATA_SETTING',2),('android.permission.CHANGE_COMPONENT_ENABLED_STATE',2),('android.permission.CHANGE_CONFIGURATION',32),('android.permission.CHANGE_NETWORK_STATE',67),('android.permission.CHANGE_WIFI_MULTICAST_STATE',2),('android.permission.CHANGE_WIFI_STATE',414),('android.permission.CHANGE_WIMAX_STATE',2),('android.permission.CLEAR_APP_CACHE',8),('android.permission.CLEAR_APP_USER_DATA',2),('android.permission.CONFIGURE_WIFI_DISPLAY',2),('android.permission.CONFIRM_FULL_BACKUP',2),('android.permission.CONNECTIVITY_INTERNAL',2),('android.permission.CONTROL_LOCATION_UPDATES',5),('android.permission.CONTROL_WIFI_DISPLAY',2),('android.permission.COPY_PROTECTED_DATA',2),('android.permission.CRYPT_KEEPER',2),('android.permission.DELETE_CACHE_FILES',10),('android.permission.DELETE_PACKAGES',57),('android.permission.DEVICE_POWER',19),('android.permission.DIAGNOSTIC',2),('android.permission.DISABLE_KEYGUARD',252),('android.permission.DUMP',3),('android.permission.EXPAND_STATUS_BAR',43),('android.permission.FACTORY_TEST',2),('android.permission.FILTER_EVENTS',2),('android.permission.FLASHLIGHT',5),('android.permission.FORCE_BACK',2),('android.permission.FORCE_STOP_PACKAGES',2),('android.permission.FREEZE_SCREEN',2),('android.permission.GET_ACCOUNTS',62),('android.permission.GET_DETAILED_TASKS',2),('android.permission.GET_PACKAGE_SIZE',17),('android.permission.GET_TASKS',238),('android.permission.GLOBAL_SEARCH',2),('android.permission.GLOBAL_SEARCH_CONTROL',43),('android.permission.GRANT_REVOKE_PERMISSIONS',2),('android.permission.HARDWARE_TEST',2),('android.permission.INJECT_EVENTS',4),('android.permission.INSTALL_LOCATION_PROVIDER',2),('android.permission.INSTALL_PACKAGES',258),('android.permission.INTERACT_ACROSS_USERS',2),('android.permission.INTERACT_ACROSS_USERS_FULL',2),('android.permission.INTERNAL_SYSTEM_WINDOW',2),('android.permission.INTERNET',1636),('android.permission.KILL_BACKGROUND_PROCESSES',19),('android.permission.MAGNIFY_DISPLAY',2),('android.permission.MANAGE_ACCOUNTS',2),('android.permission.MANAGE_APP_TOKENS',3),('android.permission.MANAGE_NETWORK_POLICY',2),('android.permission.MANAGE_USB',2),('android.permission.MANAGE_USERS',2),('android.permission.MASTER_CLEAR',2),('android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS',2),('android.permission.MODIFY_AUDIO_SETTINGS',22),('android.permission.MODIFY_NETWORK_ACCOUNTING',2),('android.permission.MODIFY_PHONE_STATE',39),('android.permission.MOUNT_FORMAT_FILESYSTEMS',2),('android.permission.MOUNT_UNMOUNT_FILESYSTEMS',133),('android.permission.MOVE_PACKAGE',2),('android.permission.NET_ADMIN',2),('android.permission.NET_TUNNELING',2),('android.permission.NFC',2),('android.permission.PACKAGE_USAGE_STATS',2),('android.permission.PACKAGE_VERIFICATION_AGENT',2),('android.permission.PERFORM_CDMA_PROVISIONING',2),('android.permission.PERSISTENT_ACTIVITY',5),('android.permission.PROCESS_OUTGOING_CALLS',72),('android.permission.READ_CALENDAR',2),('android.permission.READ_CALL_LOG',2),('android.permission.READ_CELL_BROADCASTS',2),('android.permission.READ_CONTACTS',497),('android.permission.READ_DREAM_STATE',2),('android.permission.READ_EXTERNAL_STORAGE',185),('android.permission.READ_FRAME_BUFFER',2),('android.permission.READ_INPUT_STATE',3),('android.permission.READ_LOGS',251),('android.permission.READ_NETWORK_USAGE_HISTORY',2),('android.permission.READ_PHONE_STATE',1471),('android.permission.READ_PRIVILEGED_PHONE_STATE',2),('android.permission.READ_PROFILE',2),('android.permission.READ_SMS',809),('android.permission.READ_SOCIAL_STREAM',2),('android.permission.READ_SYNC_SETTINGS',8),('android.permission.READ_SYNC_STATS',2),('android.permission.READ_USER_DICTIONARY',2),('android.permission.REBOOT',3),('android.permission.RECEIVE_BOOT_COMPLETED',733),('android.permission.RECEIVE_DATA_ACTIVITY_CHANGE',2),('android.permission.RECEIVE_EMERGENCY_BROADCAST',2),('android.permission.RECEIVE_MMS',70),('android.permission.RECEIVE_SMS',535),('android.permission.RECEIVE_WAP_PUSH',69),('android.permission.RECORD_AUDIO',43),('android.permission.REMOTE_AUDIO_PLAYBACK',2),('android.permission.REMOVE_TASKS',2),('android.permission.REORDER_TASKS',4),('android.permission.RESTART_PACKAGES',346),('android.permission.RETRIEVE_WINDOW_CONTENT',2),('android.permission.RETRIEVE_WINDOW_INFO',2),('android.permission.SEND_SMS',590),('android.permission.SEND_SMS_NO_CONFIRMATION',2),('android.permission.SERIAL_PORT',2),('android.permission.SET_ACTIVITY_WATCHER',2),('android.permission.SET_ALWAYS_FINISH',3),('android.permission.SET_ANIMATION_SCALE',2),('android.permission.SET_DEBUG_APP',2),('android.permission.SET_KEYBOARD_LAYOUT',2),('android.permission.SET_ORIENTATION',7),('android.permission.SET_POINTER_SPEED',2),('android.permission.SET_PREFERRED_APPLICATIONS',8),('android.permission.SET_PROCESS_LIMIT',2),('android.permission.SET_SCREEN_COMPATIBILITY',4),('android.permission.SET_TIME',2),('android.permission.SET_TIME_ZONE',2),('android.permission.SET_WALLPAPER',164),('android.permission.SET_WALLPAPER_COMPONENT',2),('android.permission.SET_WALLPAPER_HINTS',43),('android.permission.SHUTDOWN',2),('android.permission.SIGNAL_PERSISTENT_PROCESSES',3),('android.permission.START_ANY_ACTIVITY',2),('android.permission.STATUS_BAR',2),('android.permission.STATUS_BAR_SERVICE',2),('android.permission.STOP_APP_SWITCHES',2),('android.permission.SUBSCRIBED_FEEDS_READ',2),('android.permission.SUBSCRIBED_FEEDS_WRITE',2),('android.permission.SYSTEM_ALERT_WINDOW',14),('android.permission.TEMPORARY_ENABLE_ACCESSIBILITY',2),('android.permission.UPDATE_DEVICE_STATS',6),('android.permission.UPDATE_LOCK',2),('android.permission.USE_CREDENTIALS',2),('android.permission.USE_SIP',2),('android.permission.VIBRATE',498),('android.permission.WAKE_LOCK',471),('android.permission.WRITE_APN_SETTINGS',353),('android.permission.WRITE_CALENDAR',15),('android.permission.WRITE_CALL_LOG',2),('android.permission.WRITE_CONTACTS',384),('android.permission.WRITE_DREAM_STATE',2),('android.permission.WRITE_EXTERNAL_STORAGE',1125),('android.permission.WRITE_GSERVICES',2),('android.permission.WRITE_MEDIA_STORAGE',2),('android.permission.WRITE_PROFILE',2),('android.permission.WRITE_SECURE_SETTINGS',11),('android.permission.WRITE_SETTINGS',99),('android.permission.WRITE_SMS',671),('android.permission.WRITE_SOCIAL_STREAM',2),('android.permission.WRITE_SYNC_SETTINGS',21),('android.permission.WRITE_USER_DICTIONARY',2),('com.android.alarm.permission.SET_ALARM',5),('com.android.browser.permission.READ_HISTORY_BOOKMARKS',198),('com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',155),('com.android.voicemail.permission.ADD_VOICEMAIL',2);
/*!40000 ALTER TABLE `permissionStatsMalware` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `permissionStatsUnusedLegitimate`
--

DROP TABLE IF EXISTS `permissionStatsUnusedLegitimate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permissionStatsUnusedLegitimate` (
  `permission` varchar(100) NOT NULL,
  `count` int(11) DEFAULT '0',
  PRIMARY KEY (`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permissionStatsUnusedLegitimate`
--

LOCK TABLES `permissionStatsUnusedLegitimate` WRITE;
/*!40000 ALTER TABLE `permissionStatsUnusedLegitimate` DISABLE KEYS */;
INSERT INTO `permissionStatsUnusedLegitimate` VALUES ('android.intent.category.MASTER_CLEAR.permission.C2D_MESSAGE',0),('android.permission.ACCESS_ALL_EXTERNAL_STORAGE',0),('android.permission.ACCESS_CACHE_FILESYSTEM',0),('android.permission.ACCESS_CHECKIN_PROPERTIES',1),('android.permission.ACCESS_COARSE_LOCATION',75),('android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY',0),('android.permission.ACCESS_FINE_LOCATION',49),('android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',4),('android.permission.ACCESS_MOCK_LOCATION',3),('android.permission.ACCESS_MTP',0),('android.permission.ACCESS_NETWORK_STATE',114),('android.permission.ACCESS_SURFACE_FLINGER',0),('android.permission.ACCESS_WIFI_STATE',68),('android.permission.ACCESS_WIMAX_STATE',0),('android.permission.ACCOUNT_MANAGER',0),('android.permission.ALLOW_ANY_CODEC_FOR_PLAYBACK',0),('android.permission.ASEC_ACCESS',0),('android.permission.ASEC_CREATE',0),('android.permission.ASEC_DESTROY',0),('android.permission.ASEC_MOUNT_UNMOUNT',0),('android.permission.ASEC_RENAME',0),('android.permission.AUTHENTICATE_ACCOUNTS',13),('android.permission.BACKUP',0),('android.permission.BATTERY_STATS',6),('android.permission.BIND_ACCESSIBILITY_SERVICE',1),('android.permission.BIND_APPWIDGET',0),('android.permission.BIND_DEVICE_ADMIN',0),('android.permission.BIND_DIRECTORY_SEARCH',0),('android.permission.BIND_INPUT_METHOD',0),('android.permission.BIND_KEYGUARD_APPWIDGET',0),('android.permission.BIND_PACKAGE_VERIFIER',0),('android.permission.BIND_REMOTEVIEWS',0),('android.permission.BIND_TEXT_SERVICE',0),('android.permission.BIND_VPN_SERVICE',0),('android.permission.BIND_WALLPAPER',2),('android.permission.BLUETOOTH',10),('android.permission.BLUETOOTH_ADMIN',6),('android.permission.BLUETOOTH_STACK',0),('android.permission.BRICK',0),('android.permission.BROADCAST_PACKAGE_REMOVED',0),('android.permission.BROADCAST_SMS',0),('android.permission.BROADCAST_STICKY',14),('android.permission.BROADCAST_WAP_PUSH',0),('android.permission.CALL_PHONE',17),('android.permission.CALL_PRIVILEGED',0),('android.permission.CAMERA',43),('android.permission.CHANGE_BACKGROUND_DATA_SETTING',0),('android.permission.CHANGE_COMPONENT_ENABLED_STATE',1),('android.permission.CHANGE_CONFIGURATION',2),('android.permission.CHANGE_NETWORK_STATE',8),('android.permission.CHANGE_WIFI_MULTICAST_STATE',1),('android.permission.CHANGE_WIFI_STATE',13),('android.permission.CHANGE_WIMAX_STATE',0),('android.permission.CLEAR_APP_CACHE',4),('android.permission.CLEAR_APP_USER_DATA',0),('android.permission.CONFIGURE_WIFI_DISPLAY',0),('android.permission.CONFIRM_FULL_BACKUP',0),('android.permission.CONNECTIVITY_INTERNAL',0),('android.permission.CONTROL_LOCATION_UPDATES',0),('android.permission.CONTROL_WIFI_DISPLAY',0),('android.permission.COPY_PROTECTED_DATA',0),('android.permission.CRYPT_KEEPER',0),('android.permission.DELETE_CACHE_FILES',0),('android.permission.DELETE_PACKAGES',1),('android.permission.DEVICE_POWER',2),('android.permission.DIAGNOSTIC',0),('android.permission.DISABLE_KEYGUARD',6),('android.permission.DUMP',0),('android.permission.EXPAND_STATUS_BAR',3),('android.permission.FACTORY_TEST',0),('android.permission.FILTER_EVENTS',0),('android.permission.FLASHLIGHT',8),('android.permission.FORCE_BACK',0),('android.permission.FORCE_STOP_PACKAGES',0),('android.permission.FREEZE_SCREEN',0),('android.permission.GET_ACCOUNTS',61),('android.permission.GET_DETAILED_TASKS',0),('android.permission.GET_PACKAGE_SIZE',5),('android.permission.GET_TASKS',21),('android.permission.GLOBAL_SEARCH',0),('android.permission.GLOBAL_SEARCH_CONTROL',0),('android.permission.GRANT_REVOKE_PERMISSIONS',0),('android.permission.HARDWARE_TEST',0),('android.permission.INJECT_EVENTS',0),('android.permission.INSTALL_LOCATION_PROVIDER',0),('android.permission.INSTALL_PACKAGES',1),('android.permission.INTERACT_ACROSS_USERS',1),('android.permission.INTERACT_ACROSS_USERS_FULL',1),('android.permission.INTERNAL_SYSTEM_WINDOW',1),('android.permission.INTERNET',116),('android.permission.KILL_BACKGROUND_PROCESSES',7),('android.permission.MAGNIFY_DISPLAY',0),('android.permission.MANAGE_ACCOUNTS',17),('android.permission.MANAGE_APP_TOKENS',0),('android.permission.MANAGE_NETWORK_POLICY',0),('android.permission.MANAGE_USB',0),('android.permission.MANAGE_USERS',1),('android.permission.MASTER_CLEAR',0),('android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS',0),('android.permission.MODIFY_AUDIO_SETTINGS',14),('android.permission.MODIFY_NETWORK_ACCOUNTING',0),('android.permission.MODIFY_PHONE_STATE',2),('android.permission.MOUNT_FORMAT_FILESYSTEMS',0),('android.permission.MOUNT_UNMOUNT_FILESYSTEMS',5),('android.permission.MOVE_PACKAGE',0),('android.permission.NET_ADMIN',0),('android.permission.NET_TUNNELING',0),('android.permission.NFC',10),('android.permission.PACKAGE_USAGE_STATS',1),('android.permission.PACKAGE_VERIFICATION_AGENT',1),('android.permission.PERFORM_CDMA_PROVISIONING',0),('android.permission.PERSISTENT_ACTIVITY',0),('android.permission.PROCESS_OUTGOING_CALLS',1),('android.permission.READ_CALENDAR',11),('android.permission.READ_CALL_LOG',1),('android.permission.READ_CELL_BROADCASTS',0),('android.permission.READ_CONTACTS',43),('android.permission.READ_DREAM_STATE',0),('android.permission.READ_EXTERNAL_STORAGE',18),('android.permission.READ_FRAME_BUFFER',1),('android.permission.READ_INPUT_STATE',0),('android.permission.READ_LOGS',7),('android.permission.READ_NETWORK_USAGE_HISTORY',0),('android.permission.READ_PHONE_STATE',67),('android.permission.READ_PRIVILEGED_PHONE_STATE',0),('android.permission.READ_PROFILE',11),('android.permission.READ_SMS',10),('android.permission.READ_SOCIAL_STREAM',1),('android.permission.READ_SYNC_SETTINGS',18),('android.permission.READ_SYNC_STATS',7),('android.permission.READ_USER_DICTIONARY',1),('android.permission.REBOOT',0),('android.permission.RECEIVE_BOOT_COMPLETED',56),('android.permission.RECEIVE_DATA_ACTIVITY_CHANGE',0),('android.permission.RECEIVE_EMERGENCY_BROADCAST',0),('android.permission.RECEIVE_MMS',2),('android.permission.RECEIVE_SMS',10),('android.permission.RECEIVE_WAP_PUSH',0),('android.permission.RECORD_AUDIO',22),('android.permission.REMOTE_AUDIO_PLAYBACK',0),('android.permission.REMOVE_TASKS',0),('android.permission.REORDER_TASKS',2),('android.permission.RESTART_PACKAGES',4),('android.permission.RETRIEVE_WINDOW_CONTENT',0),('android.permission.RETRIEVE_WINDOW_INFO',0),('android.permission.SEND_SMS',9),('android.permission.SEND_SMS_NO_CONFIRMATION',1),('android.permission.SERIAL_PORT',0),('android.permission.SET_ACTIVITY_WATCHER',0),('android.permission.SET_ALWAYS_FINISH',0),('android.permission.SET_ANIMATION_SCALE',0),('android.permission.SET_DEBUG_APP',0),('android.permission.SET_KEYBOARD_LAYOUT',0),('android.permission.SET_ORIENTATION',1),('android.permission.SET_POINTER_SPEED',0),('android.permission.SET_PREFERRED_APPLICATIONS',0),('android.permission.SET_PROCESS_LIMIT',0),('android.permission.SET_SCREEN_COMPATIBILITY',0),('android.permission.SET_TIME',0),('android.permission.SET_TIME_ZONE',0),('android.permission.SET_WALLPAPER',8),('android.permission.SET_WALLPAPER_COMPONENT',0),('android.permission.SET_WALLPAPER_HINTS',1),('android.permission.SHUTDOWN',0),('android.permission.SIGNAL_PERSISTENT_PROCESSES',0),('android.permission.START_ANY_ACTIVITY',0),('android.permission.STATUS_BAR',2),('android.permission.STATUS_BAR_SERVICE',0),('android.permission.STOP_APP_SWITCHES',0),('android.permission.SUBSCRIBED_FEEDS_READ',4),('android.permission.SUBSCRIBED_FEEDS_WRITE',4),('android.permission.SYSTEM_ALERT_WINDOW',14),('android.permission.TEMPORARY_ENABLE_ACCESSIBILITY',0),('android.permission.UPDATE_DEVICE_STATS',0),('android.permission.UPDATE_LOCK',0),('android.permission.USE_CREDENTIALS',17),('android.permission.USE_SIP',0),('android.permission.VIBRATE',64),('android.permission.WAKE_LOCK',69),('android.permission.WRITE_APN_SETTINGS',0),('android.permission.WRITE_CALENDAR',6),('android.permission.WRITE_CALL_LOG',0),('android.permission.WRITE_CONTACTS',20),('android.permission.WRITE_DREAM_STATE',0),('android.permission.WRITE_EXTERNAL_STORAGE',98),('android.permission.WRITE_GSERVICES',0),('android.permission.WRITE_MEDIA_STORAGE',0),('android.permission.WRITE_PROFILE',1),('android.permission.WRITE_SECURE_SETTINGS',0),('android.permission.WRITE_SETTINGS',17),('android.permission.WRITE_SMS',7),('android.permission.WRITE_SOCIAL_STREAM',1),('android.permission.WRITE_SYNC_SETTINGS',18),('android.permission.WRITE_USER_DICTIONARY',1),('com.android.alarm.permission.SET_ALARM',0),('com.android.browser.permission.READ_HISTORY_BOOKMARKS',6),('com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',2),('com.android.voicemail.permission.ADD_VOICEMAIL',0);
/*!40000 ALTER TABLE `permissionStatsUnusedLegitimate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `permissionStatsUnusedMalware`
--

DROP TABLE IF EXISTS `permissionStatsUnusedMalware`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `permissionStatsUnusedMalware` (
  `permission` varchar(100) NOT NULL,
  `count` int(11) DEFAULT '0',
  PRIMARY KEY (`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `permissionStatsUnusedMalware`
--

LOCK TABLES `permissionStatsUnusedMalware` WRITE;
/*!40000 ALTER TABLE `permissionStatsUnusedMalware` DISABLE KEYS */;
INSERT INTO `permissionStatsUnusedMalware` VALUES ('android.intent.category.MASTER_CLEAR.permission.C2D_MESSAGE',0),('android.permission.ACCESS_ALL_EXTERNAL_STORAGE',0),('android.permission.ACCESS_CACHE_FILESYSTEM',19),('android.permission.ACCESS_CHECKIN_PROPERTIES',0),('android.permission.ACCESS_COARSE_LOCATION',480),('android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY',0),('android.permission.ACCESS_FINE_LOCATION',146),('android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',179),('android.permission.ACCESS_MOCK_LOCATION',2),('android.permission.ACCESS_MTP',0),('android.permission.ACCESS_NETWORK_STATE',227),('android.permission.ACCESS_SURFACE_FLINGER',0),('android.permission.ACCESS_WIFI_STATE',460),('android.permission.ACCESS_WIMAX_STATE',0),('android.permission.ACCOUNT_MANAGER',0),('android.permission.ALLOW_ANY_CODEC_FOR_PLAYBACK',0),('android.permission.ASEC_ACCESS',0),('android.permission.ASEC_CREATE',0),('android.permission.ASEC_DESTROY',0),('android.permission.ASEC_MOUNT_UNMOUNT',0),('android.permission.ASEC_RENAME',0),('android.permission.AUTHENTICATE_ACCOUNTS',0),('android.permission.BACKUP',0),('android.permission.BATTERY_STATS',3),('android.permission.BIND_ACCESSIBILITY_SERVICE',0),('android.permission.BIND_APPWIDGET',0),('android.permission.BIND_DEVICE_ADMIN',0),('android.permission.BIND_DIRECTORY_SEARCH',0),('android.permission.BIND_INPUT_METHOD',0),('android.permission.BIND_KEYGUARD_APPWIDGET',0),('android.permission.BIND_PACKAGE_VERIFIER',0),('android.permission.BIND_REMOTEVIEWS',0),('android.permission.BIND_TEXT_SERVICE',0),('android.permission.BIND_VPN_SERVICE',0),('android.permission.BIND_WALLPAPER',1),('android.permission.BLUETOOTH',12),('android.permission.BLUETOOTH_ADMIN',9),('android.permission.BLUETOOTH_STACK',0),('android.permission.BRICK',0),('android.permission.BROADCAST_PACKAGE_REMOVED',10),('android.permission.BROADCAST_SMS',0),('android.permission.BROADCAST_STICKY',1),('android.permission.BROADCAST_WAP_PUSH',1),('android.permission.CALL_PHONE',435),('android.permission.CALL_PRIVILEGED',2),('android.permission.CAMERA',10),('android.permission.CHANGE_BACKGROUND_DATA_SETTING',0),('android.permission.CHANGE_COMPONENT_ENABLED_STATE',0),('android.permission.CHANGE_CONFIGURATION',28),('android.permission.CHANGE_NETWORK_STATE',64),('android.permission.CHANGE_WIFI_MULTICAST_STATE',0),('android.permission.CHANGE_WIFI_STATE',125),('android.permission.CHANGE_WIMAX_STATE',0),('android.permission.CLEAR_APP_CACHE',6),('android.permission.CLEAR_APP_USER_DATA',0),('android.permission.CONFIGURE_WIFI_DISPLAY',0),('android.permission.CONFIRM_FULL_BACKUP',0),('android.permission.CONNECTIVITY_INTERNAL',0),('android.permission.CONTROL_LOCATION_UPDATES',3),('android.permission.CONTROL_WIFI_DISPLAY',0),('android.permission.COPY_PROTECTED_DATA',0),('android.permission.CRYPT_KEEPER',0),('android.permission.DELETE_CACHE_FILES',8),('android.permission.DELETE_PACKAGES',55),('android.permission.DEVICE_POWER',17),('android.permission.DIAGNOSTIC',0),('android.permission.DISABLE_KEYGUARD',190),('android.permission.DUMP',1),('android.permission.EXPAND_STATUS_BAR',0),('android.permission.FACTORY_TEST',0),('android.permission.FILTER_EVENTS',0),('android.permission.FLASHLIGHT',3),('android.permission.FORCE_BACK',0),('android.permission.FORCE_STOP_PACKAGES',0),('android.permission.FREEZE_SCREEN',0),('android.permission.GET_ACCOUNTS',13),('android.permission.GET_DETAILED_TASKS',0),('android.permission.GET_PACKAGE_SIZE',15),('android.permission.GET_TASKS',121),('android.permission.GLOBAL_SEARCH',0),('android.permission.GLOBAL_SEARCH_CONTROL',41),('android.permission.GRANT_REVOKE_PERMISSIONS',0),('android.permission.HARDWARE_TEST',0),('android.permission.INJECT_EVENTS',2),('android.permission.INSTALL_LOCATION_PROVIDER',0),('android.permission.INSTALL_PACKAGES',256),('android.permission.INTERACT_ACROSS_USERS',0),('android.permission.INTERACT_ACROSS_USERS_FULL',0),('android.permission.INTERNAL_SYSTEM_WINDOW',0),('android.permission.INTERNET',229),('android.permission.KILL_BACKGROUND_PROCESSES',15),('android.permission.MAGNIFY_DISPLAY',0),('android.permission.MANAGE_ACCOUNTS',0),('android.permission.MANAGE_APP_TOKENS',1),('android.permission.MANAGE_NETWORK_POLICY',0),('android.permission.MANAGE_USB',0),('android.permission.MANAGE_USERS',0),('android.permission.MASTER_CLEAR',0),('android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS',0),('android.permission.MODIFY_AUDIO_SETTINGS',15),('android.permission.MODIFY_NETWORK_ACCOUNTING',0),('android.permission.MODIFY_PHONE_STATE',37),('android.permission.MOUNT_FORMAT_FILESYSTEMS',0),('android.permission.MOUNT_UNMOUNT_FILESYSTEMS',127),('android.permission.MOVE_PACKAGE',0),('android.permission.NET_ADMIN',0),('android.permission.NET_TUNNELING',0),('android.permission.NFC',0),('android.permission.PACKAGE_USAGE_STATS',0),('android.permission.PACKAGE_VERIFICATION_AGENT',0),('android.permission.PERFORM_CDMA_PROVISIONING',0),('android.permission.PERSISTENT_ACTIVITY',2),('android.permission.PROCESS_OUTGOING_CALLS',70),('android.permission.READ_CALENDAR',0),('android.permission.READ_CALL_LOG',0),('android.permission.READ_CELL_BROADCASTS',0),('android.permission.READ_CONTACTS',452),('android.permission.READ_DREAM_STATE',0),('android.permission.READ_EXTERNAL_STORAGE',183),('android.permission.READ_FRAME_BUFFER',0),('android.permission.READ_INPUT_STATE',1),('android.permission.READ_LOGS',212),('android.permission.READ_NETWORK_USAGE_HISTORY',0),('android.permission.READ_PHONE_STATE',222),('android.permission.READ_PRIVILEGED_PHONE_STATE',0),('android.permission.READ_PROFILE',0),('android.permission.READ_SMS',794),('android.permission.READ_SOCIAL_STREAM',0),('android.permission.READ_SYNC_SETTINGS',3),('android.permission.READ_SYNC_STATS',0),('android.permission.READ_USER_DICTIONARY',0),('android.permission.REBOOT',1),('android.permission.RECEIVE_BOOT_COMPLETED',709),('android.permission.RECEIVE_DATA_ACTIVITY_CHANGE',0),('android.permission.RECEIVE_EMERGENCY_BROADCAST',0),('android.permission.RECEIVE_MMS',68),('android.permission.RECEIVE_SMS',520),('android.permission.RECEIVE_WAP_PUSH',67),('android.permission.RECORD_AUDIO',29),('android.permission.REMOTE_AUDIO_PLAYBACK',0),('android.permission.REMOVE_TASKS',0),('android.permission.REORDER_TASKS',2),('android.permission.RESTART_PACKAGES',241),('android.permission.RETRIEVE_WINDOW_CONTENT',0),('android.permission.RETRIEVE_WINDOW_INFO',0),('android.permission.SEND_SMS',257),('android.permission.SEND_SMS_NO_CONFIRMATION',0),('android.permission.SERIAL_PORT',0),('android.permission.SET_ACTIVITY_WATCHER',0),('android.permission.SET_ALWAYS_FINISH',1),('android.permission.SET_ANIMATION_SCALE',0),('android.permission.SET_DEBUG_APP',0),('android.permission.SET_KEYBOARD_LAYOUT',0),('android.permission.SET_ORIENTATION',5),('android.permission.SET_POINTER_SPEED',0),('android.permission.SET_PREFERRED_APPLICATIONS',4),('android.permission.SET_PROCESS_LIMIT',0),('android.permission.SET_SCREEN_COMPATIBILITY',0),('android.permission.SET_TIME',0),('android.permission.SET_TIME_ZONE',0),('android.permission.SET_WALLPAPER',19),('android.permission.SET_WALLPAPER_COMPONENT',0),('android.permission.SET_WALLPAPER_HINTS',41),('android.permission.SHUTDOWN',0),('android.permission.SIGNAL_PERSISTENT_PROCESSES',1),('android.permission.START_ANY_ACTIVITY',0),('android.permission.STATUS_BAR',0),('android.permission.STATUS_BAR_SERVICE',0),('android.permission.STOP_APP_SWITCHES',0),('android.permission.SUBSCRIBED_FEEDS_READ',0),('android.permission.SUBSCRIBED_FEEDS_WRITE',0),('android.permission.SYSTEM_ALERT_WINDOW',11),('android.permission.TEMPORARY_ENABLE_ACCESSIBILITY',0),('android.permission.UPDATE_DEVICE_STATS',4),('android.permission.UPDATE_LOCK',0),('android.permission.USE_CREDENTIALS',0),('android.permission.USE_SIP',0),('android.permission.VIBRATE',247),('android.permission.WAKE_LOCK',343),('android.permission.WRITE_APN_SETTINGS',351),('android.permission.WRITE_CALENDAR',13),('android.permission.WRITE_CALL_LOG',0),('android.permission.WRITE_CONTACTS',377),('android.permission.WRITE_DREAM_STATE',0),('android.permission.WRITE_EXTERNAL_STORAGE',360),('android.permission.WRITE_GSERVICES',0),('android.permission.WRITE_MEDIA_STORAGE',0),('android.permission.WRITE_PROFILE',0),('android.permission.WRITE_SECURE_SETTINGS',9),('android.permission.WRITE_SETTINGS',85),('android.permission.WRITE_SMS',662),('android.permission.WRITE_SOCIAL_STREAM',0),('android.permission.WRITE_SYNC_SETTINGS',16),('android.permission.WRITE_USER_DICTIONARY',0),('com.android.alarm.permission.SET_ALARM',3),('com.android.browser.permission.READ_HISTORY_BOOKMARKS',175),('com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',142),('com.android.voicemail.permission.ADD_VOICEMAIL',0);
/*!40000 ALTER TABLE `permissionStatsUnusedMalware` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Final view structure for view `apiList`
--

/*!50001 DROP TABLE IF EXISTS `apiList`*/;
/*!50001 DROP VIEW IF EXISTS `apiList`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = latin1 */;
/*!50001 SET character_set_results     = latin1 */;
/*!50001 SET collation_connection      = latin1_swedish_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `apiList` AS select `permissionMap`.`API` AS `API` from `permissionMap` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `helloViewDynamic`
--

/*!50001 DROP TABLE IF EXISTS `helloViewDynamic`*/;
/*!50001 DROP VIEW IF EXISTS `helloViewDynamic`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = latin1 */;
/*!50001 SET character_set_results     = latin1 */;
/*!50001 SET collation_connection      = latin1_swedish_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `helloViewDynamic` AS select `helloDynamic`.`apiName` AS `apiName`,`permissionMap`.`permission` AS `permission` from (`helloDynamic` join `permissionMap`) where ((`helloDynamic`.`apiName` = `permissionMap`.`API`) and (`permissionMap`.`permission` <> '')) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `helloViewStatic`
--

/*!50001 DROP TABLE IF EXISTS `helloViewStatic`*/;
/*!50001 DROP VIEW IF EXISTS `helloViewStatic`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = latin1 */;
/*!50001 SET character_set_results     = latin1 */;
/*!50001 SET collation_connection      = latin1_swedish_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `helloViewStatic` AS select `helloStatic`.`apiName` AS `apiName`,`permissionMap`.`permission` AS `permission` from (`helloStatic` join `permissionMap`) where ((`helloStatic`.`apiName` = `permissionMap`.`API`) and (`permissionMap`.`permission` <> '')) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-05-21 17:23:12
